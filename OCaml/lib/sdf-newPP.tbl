parse-table(
  6
, 0
, [ label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([111])
        , char-class([110])
        , char-class([115])
        , char-class([116])
        , char-class([114])
        ]
      , lit("$Constr")
      , no-attrs()
      )
    , 3729
    )
  , label(
      prod(
        [char-class([58]), char-class([62])]
      , lit(":>")
      , no-attrs()
      )
    , 3728
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([69])
        , char-class([120])
        , char-class([112])
        , char-class([114])
        ]
      , lit("$ClassExpr")
      , no-attrs()
      )
    , 3727
    )
  , label(
      prod(
        [ char-class([105])
        , char-class([110])
        , char-class([104])
        , char-class([101])
        , char-class([114])
        , char-class([105])
        , char-class([116])
        ]
      , lit("inherit")
      , no-attrs()
      )
    , 3726
    )
  , label(
      prod(
        [lit("$ExtendedModulePath")]
      , cf(sort("ExtendedModulePath"))
      , attrs([term(cons("ExtendedModulePath-Plhdr")), term(placeholder())])
      )
    , 3725
    )
  , label(
      prod(
        [ lex(
            iter(
              char-class(
                [ 39
                , range(48, 57)
                , range(65, 90)
                , 95
                , range(97, 122)
                ]
              )
            )
          )
        ]
      , lex(
          iter-star(
            char-class(
              [ 39
              , range(48, 57)
              , range(65, 90)
              , 95
              , range(97, 122)
              ]
            )
          )
        )
      , no-attrs()
      )
    , 3724
    )
  , label(
      prod(
        [ lex(
            iter(
              char-class(
                [ 39
                , range(48, 57)
                , range(65, 90)
                , 95
                , range(97, 122)
                ]
              )
            )
          )
        ]
      , cf(
          iter(
            char-class(
              [ 39
              , range(48, 57)
              , range(65, 90)
              , 95
              , range(97, 122)
              ]
            )
          )
        )
      , no-attrs()
      )
    , 3723
    )
  , label(
      prod(
        [ lex(
            iter-star(
              char-class(
                [ 39
                , range(48, 57)
                , range(65, 90)
                , 95
                , range(97, 122)
                ]
              )
            )
          )
        ]
      , cf(
          iter-star(
            char-class(
              [ 39
              , range(48, 57)
              , range(65, 90)
              , 95
              , range(97, 122)
              ]
            )
          )
        )
      , no-attrs()
      )
    , 3722
    )
  , label(
      prod(
        [lex(sort("InfixSymbol6"))]
      , cf(sort("InfixSymbol6"))
      , no-attrs()
      )
    , 3721
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 3720
    )
  , label(
      prod([char-class([47])], lit("/"), no-attrs())
    , 3719
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("FieldAssign"), lit(";")))
      , no-attrs()
      )
    , 3718
    )
  , label(
      prod(
        [ lit("exception")
        , cf(opt(layout()))
        , cf(sort("ConstrName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Constr"))
        ]
      , cf(sort("ExceptionDefinition"))
      , attrs([term(cons("Exception2"))])
      )
    , 3717
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("MethodType"), lit(";")))
      , no-attrs()
      )
    , 3716
    )
  , label(
      prod(
        [lex(iter(char-class([range(48, 55), 95])))]
      , lex(iter-star(char-class([range(48, 55), 95])))
      , no-attrs()
      )
    , 3715
    )
  , label(
      prod(
        [lex(iter(char-class([range(48, 55), 95])))]
      , cf(iter(char-class([range(48, 55), 95])))
      , no-attrs()
      )
    , 3714
    )
  , label(
      prod(
        [lex(iter-star(char-class([range(48, 55), 95])))]
      , cf(iter-star(char-class([range(48, 55), 95])))
      , no-attrs()
      )
    , 3713
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([80])
        , char-class([97])
        , char-class([114])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        , char-class([116])
        , char-class([101])
        , char-class([114])
        ]
      , lit("$Parameter")
      , no-attrs()
      )
    , 3712
    )
  , label(
      prod(
        [lit("$ConstantNegative")]
      , cf(sort("ConstantNegative"))
      , attrs([term(placeholder()), term(cons("ConstantNegative-Plhdr"))])
      )
    , 3711
    )
  , label(
      prod(
        [char-class([range(48, 57), 95])]
      , lex(iter(char-class([range(48, 57), 95])))
      , no-attrs()
      )
    , 3710
    )
  , label(
      prod(
        [lit("`"), cf(opt(layout())), cf(sort("TagName"))]
      , cf(sort("TagSpec"))
      , attrs([term(cons("TagSpec1"))])
      )
    , 3709
    )
  , label(
      prod(
        [ lit("external")
        , cf(opt(layout()))
        , cf(sort("ValueName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ExternalDeclaration"))
        ]
      , cf(sort("Specification"))
      , attrs([term(cons("External"))])
      )
    , 3708
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([68])
        , char-class([101])
        , char-class([102])
        , char-class([105])
        , char-class([110])
        , char-class([105])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$TypeDefinition")
      , no-attrs()
      )
    , 3707
    )
  , label(
      prod(
        [ lex(
            seq(
              char-class([92])
            , [ char-class([range(48, 57)])
              , char-class([range(48, 57)])
              , char-class([range(48, 57)])
              ]
            )
          )
        ]
      , cf(
          seq(
            char-class([92])
          , [ char-class([range(48, 57)])
            , char-class([range(48, 57)])
            , char-class([range(48, 57)])
            ]
          )
        )
      , no-attrs()
      )
    , 3706
    )
  , label(
      prod(
        [lit("with")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3705
    )
  , label(
      prod(
        [lit("$MultipleMatching")]
      , cf(sort("MultipleMatching"))
      , attrs([term(placeholder()), term(cons("MultipleMatching-Plhdr"))])
      )
    , 3704
    )
  , label(
      prod(
        [lit("lor")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3703
    )
  , label(
      prod([char-class([64])], lit("@"), no-attrs())
    , 3702
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([117])
        , char-class([108])
        , char-class([116])
        , char-class([105])
        , char-class([112])
        , char-class([108])
        , char-class([101])
        , char-class([77])
        , char-class([97])
        , char-class([116])
        , char-class([99])
        , char-class([104])
        , char-class([105])
        , char-class([110])
        , char-class([103])
        ]
      , lit("$MultipleMatching")
      , no-attrs()
      )
    , 3701
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([67])
        , char-class([111])
        , char-class([110])
        , char-class([115])
        , char-class([116])
        , char-class([114])
        ]
      , lit("$TypeConstr")
      , no-attrs()
      )
    , 3700
    )
  , label(
      prod(
        [char-class([108]), char-class([115]), char-class([108])]
      , lit("lsl")
      , no-attrs()
      )
    , 3699
    )
  , label(
      prod(
        [ cf(iter(sort("AndModuleType")))
        , cf(opt(layout()))
        , cf(sort("AndModuleType"))
        ]
      , cf(iter(sort("AndModuleType")))
      , no-attrs()
      )
    , 3698
    )
  , label(
      prod(
        [lit("rec")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3697
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 3696
    )
  , label(
      prod(
        [lit("type")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3695
    )
  , label(
      prod(
        [lit("$TypeConstraint")]
      , cf(sort("TypeConstraint"))
      , attrs([term(cons("TypeConstraint-Plhdr")), term(placeholder())])
      )
    , 3694
    )
  , label(
      prod(
        [ cf(iter(sort("ModuleNameDot")))
        , cf(opt(layout()))
        , cf(sort("ModuleNameDot"))
        ]
      , cf(iter(sort("ModuleNameDot")))
      , no-attrs()
      )
    , 3693
    )
  , label(
      prod(
        [lit("let")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3692
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , cf(iter-star(sort("Parameter")))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("LetBinding"))
      , attrs([term(cons("LetBinding3"))])
      )
    , 3691
    )
  , label(
      prod(
        [lit("$")]
      , lex(
          alt(
            lit("=")
          , alt(
              lit("<")
            , alt(
                lit(">")
              , alt(lit("|"), alt(lit("&"), lit("$")))
              )
            )
          )
        )
      , no-attrs()
      )
    , 3690
    )
  , label(
      prod([], cf(iter-star(sort("ModuleNameTypeParam"))), no-attrs())
    , 3689
    )
  , label(
      prod(
        [ lex(
            alt(
              lit("mod")
            , alt(
                lit("land")
              , alt(
                  lit("lor")
                , alt(
                    lit("lxor")
                  , alt(lit("/"), alt(lit("%"), lit("*")))
                  )
                )
              )
            )
          )
        , lex(iter-star(sort("OperatorChar")))
        ]
      , lex(sort("InfixSymbol2"))
      , no-attrs()
      )
    , 3688
    )
  , label(
      prod(
        [ cf(iter(sort("AndModuleTypeModuleExpr")))
        , cf(opt(layout()))
        , cf(sort("AndModuleTypeModuleExpr"))
        ]
      , cf(iter(sort("AndModuleTypeModuleExpr")))
      , no-attrs()
      )
    , 3687
    )
  , label(
      prod(
        [cf(sort("FieldName"))]
      , cf(sort("Field"))
      , attrs([term(cons("FieldName"))])
      )
    , 3686
    )
  , label(
      prod(
        [ cf(sort("Method"))
        , cf(opt(layout()))
        , cf(opt(sort("Private")))
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , lit("type")
        , cf(opt(layout()))
        , cf(iter(sort("TypeConstrName")))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("ClassField"))
      , attrs([term(cons("Method5"))])
      )
    , 3685
    )
  , label(
      prod(
        [ cf(opt(sort("Virtual")))
        , cf(opt(layout()))
        , cf(sort("OptTypeParameters"))
        , cf(opt(layout()))
        , cf(sort("ClassName"))
        , cf(opt(layout()))
        , cf(iter-star(sort("Parameter")))
        , cf(opt(layout()))
        , cf(sort("ColonClassTypeOpt"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ClassExpr"))
        ]
      , cf(sort("ClassBinding"))
      , attrs([term(cons("ClassBinding"))])
      )
    , 3684
    )
  , label(
      prod(
        [ lit("type")
        , cf(opt(layout()))
        , cf(opt(sort("TypeParameters")))
        , cf(opt(layout()))
        , cf(sort("TypeConstrName"))
        , cf(opt(layout()))
        , lit(":=")
        , cf(opt(layout()))
        , cf(opt(sort("TypeParameters")))
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        ]
      , cf(sort("ModConstraint"))
      , attrs([term(cons("ModConsType2"))])
      )
    , 3683
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([65])
        , char-class([110])
        , char-class([100])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        ]
      , lit("$AndModuleType")
      , no-attrs()
      )
    , 3682
    )
  , label(
      prod(
        [lex(sort("InfixSymbol4"))]
      , cf(sort("InfixSymbol4"))
      , no-attrs()
      )
    , 3681
    )
  , label(
      prod(
        [lit("mod")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3680
    )
  , label(
      prod(
        [lit("virtual")]
      , cf(sort("Virtual"))
      , attrs([term(cons("Virtual"))])
      )
    , 3679
    )
  , label(
      prod(
        []
      , lex(iter-star(char-class([range(48, 49), 95])))
      , no-attrs()
      )
    , 3678
    )
  , label(
      prod(
        [ lit("constraint")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("ClassFieldSpec"))
      , attrs([term(cons("Constraint"))])
      )
    , 3677
    )
  , label(
      prod(
        [lex(iter(char-class([range(48, 57), 95])))]
      , lex(iter-star(char-class([range(48, 57), 95])))
      , no-attrs()
      )
    , 3676
    )
  , label(
      prod(
        [lex(iter(char-class([range(48, 57), 95])))]
      , cf(iter(char-class([range(48, 57), 95])))
      , no-attrs()
      )
    , 3675
    )
  , label(
      prod(
        [lex(iter-star(char-class([range(48, 57), 95])))]
      , cf(iter-star(char-class([range(48, 57), 95])))
      , no-attrs()
      )
    , 3674
    )
  , label(
      prod(
        [lit("$Constr")]
      , cf(sort("Constr"))
      , attrs([term(cons("Constr-Plhdr")), term(placeholder())])
      )
    , 3673
    )
  , label(
      prod(
        [ char-class([99])
        , char-class([111])
        , char-class([110])
        , char-class([115])
        , char-class([116])
        , char-class([114])
        , char-class([97])
        , char-class([105])
        , char-class([110])
        , char-class([116])
        ]
      , lit("constraint")
      , no-attrs()
      )
    , 3672
    )
  , label(
      prod(
        [cf(sort("DefinitionOrExprList"))]
      , cf(iter(sort("DefinitionOrExprList")))
      , no-attrs()
      )
    , 3671
    )
  , label(
      prod(
        [ cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("FieldAssign"))
        ]
      , cf(iter-sep(sort("FieldAssign"), lit(";")))
      , no-attrs()
      )
    , 3670
    )
  , label(
      prod(
        [ cf(iter(sort("SpecificationSemi")))
        , cf(opt(layout()))
        , cf(sort("SpecificationSemi"))
        ]
      , cf(iter(sort("SpecificationSemi")))
      , no-attrs()
      )
    , 3669
    )
  , label(
      prod(
        [ lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , cf(iter-star(sort("ModuleNameTypeParam")))
        , cf(opt(layout()))
        , cf(sort("ColonModuleTypeOpt"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        ]
      , cf(sort("Definition"))
      , attrs([term(cons("ModuleDef1"))])
      )
    , 3668
    )
  , label(
      prod(
        [lit("_")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3667
    )
  , label(
      prod(
        [ lex(opt(lit("-")))
        , lex(alt(lit("0b"), lit("0B")))
        , char-class([range(48, 49)])
        , lex(iter-star(char-class([range(48, 49), 95])))
        ]
      , lex(sort("IntegerLiteral"))
      , no-attrs()
      )
    , 3666
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Pattern"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(iter-sep(sort("Pattern"), lit(",")))
      , no-attrs()
      )
    , 3665
    )
  , label(
      prod(
        [lit("->")]
      , lex(sort("InfixSymbol3"))
      , attrs([reject()])
      )
    , 3664
    )
  , label(
      prod(
        [lit("for")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3663
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(sort("DefinitionOrExpr"))
      , no-attrs()
      )
    , 3662
    )
  , label(
      prod(
        [cf(sort("TagSpecFull"))]
      , cf(iter-sep(sort("TagSpecFull"), lit("|")))
      , no-attrs()
      )
    , 3661
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 3660
    )
  , label(
      prod(
        [ char-class([range(48, 57)])
        , lex(iter-star(char-class([range(48, 57), 95])))
        , lit(".")
        , lex(iter-star(char-class([range(48, 57), 95])))
        ]
      , lex(sort("PositiveFloat"))
      , no-attrs()
      )
    , 3659
    )
  , label(
      prod(
        [ char-class([109])
        , char-class([101])
        , char-class([116])
        , char-class([104])
        , char-class([111])
        , char-class([100])
        ]
      , lit("method")
      , no-attrs()
      )
    , 3658
    )
  , label(
      prod(
        [ char-class([108])
        , char-class([120])
        , char-class([111])
        , char-class([114])
        ]
      , lit("lxor")
      , no-attrs()
      )
    , 3657
    )
  , label(
      prod(
        [ lit("`")
        , cf(opt(layout()))
        , cf(sort("TagName"))
        , cf(opt(layout()))
        , cf(iter-star(sort("AndTypeExpr")))
        ]
      , cf(sort("TagSpecFull"))
      , attrs([term(cons("TagSpecFull1"))])
      )
    , 3656
    )
  , label(
      prod(
        [cf(iter(sort("DefinitionOrExprList")))]
      , cf(iter-star(sort("DefinitionOrExprList")))
      , no-attrs()
      )
    , 3655
    )
  , label(
      prod(
        [ lex(opt(lit("-")))
        , lex(alt(lit("0x"), lit("0X")))
        , char-class(
            [range(48, 57), range(65, 70), range(97, 102)]
          )
        , lex(
            iter-star(
              char-class(
                [ range(48, 57)
                , range(65, 70)
                , 95
                , range(97, 102)
                ]
              )
            )
          )
        ]
      , lex(sort("IntegerLiteral"))
      , no-attrs()
      )
    , 3654
    )
  , label(
      prod(
        [lit("&")]
      , lex(
          alt(
            lit("=")
          , alt(
              lit("<")
            , alt(
                lit(">")
              , alt(lit("|"), alt(lit("&"), lit("$")))
              )
            )
          )
        )
      , no-attrs()
      )
    , 3653
    )
  , label(
      prod(
        [ lit("~")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Parameter"))
      , attrs([term(cons("Param2"))])
      )
    , 3652
    )
  , label(
      prod(
        [ lex(
            iter(
              alt(
                lit("!")
              , alt(
                  lit("$")
                , alt(
                    lit("%")
                  , alt(
                      lit("&")
                    , alt(
                        lit("*")
                      , alt(
                          lit("+")
                        , alt(
                            lit("-")
                          , alt(
                              lit(".")
                            , alt(
                                lit("/")
                              , alt(
                                  lit(":")
                                , alt(
                                    lit("<")
                                  , alt(
                                      lit("=")
                                    , alt(
                                        lit(">")
                                      , alt(
                                          lit("?")
                                        , alt(
                                            lit("@")
                                          , alt(lit("|"), alt(lit("~"), lit("^")))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        ]
      , lex(
          iter-star(
            alt(
              lit("!")
            , alt(
                lit("$")
              , alt(
                  lit("%")
                , alt(
                    lit("&")
                  , alt(
                      lit("*")
                    , alt(
                        lit("+")
                      , alt(
                          lit("-")
                        , alt(
                            lit(".")
                          , alt(
                              lit("/")
                            , alt(
                                lit(":")
                              , alt(
                                  lit("<")
                                , alt(
                                    lit("=")
                                  , alt(
                                      lit(">")
                                    , alt(
                                        lit("?")
                                      , alt(
                                          lit("@")
                                        , alt(lit("|"), alt(lit("~"), lit("^")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3651
    )
  , label(
      prod(
        [ lex(
            iter-star(
              alt(
                lit("!")
              , alt(
                  lit("$")
                , alt(
                    lit("%")
                  , alt(
                      lit("&")
                    , alt(
                        lit("*")
                      , alt(
                          lit("+")
                        , alt(
                            lit("-")
                          , alt(
                              lit(".")
                            , alt(
                                lit("/")
                              , alt(
                                  lit(":")
                                , alt(
                                    lit("<")
                                  , alt(
                                      lit("=")
                                    , alt(
                                        lit(">")
                                      , alt(
                                          lit("?")
                                        , alt(
                                            lit("@")
                                          , alt(lit("|"), alt(lit("~"), lit("^")))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        ]
      , cf(
          iter-star(
            alt(
              lit("!")
            , alt(
                lit("$")
              , alt(
                  lit("%")
                , alt(
                    lit("&")
                  , alt(
                      lit("*")
                    , alt(
                        lit("+")
                      , alt(
                          lit("-")
                        , alt(
                            lit(".")
                          , alt(
                              lit("/")
                            , alt(
                                lit(":")
                              , alt(
                                  lit("<")
                                , alt(
                                    lit("=")
                                  , alt(
                                      lit(">")
                                    , alt(
                                        lit("?")
                                      , alt(
                                          lit("@")
                                        , alt(lit("|"), alt(lit("~"), lit("^")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3650
    )
  , label(
      prod([], lex(opt(lit("-"))), no-attrs())
    , 3649
    )
  , label(
      prod(
        [ lex(
            iter(
              alt(
                lit("!")
              , alt(
                  lit("$")
                , alt(
                    lit("%")
                  , alt(
                      lit("&")
                    , alt(
                        lit("*")
                      , alt(
                          lit("+")
                        , alt(
                            lit("-")
                          , alt(
                              lit(".")
                            , alt(
                                lit("/")
                              , alt(
                                  lit(":")
                                , alt(
                                    lit("<")
                                  , alt(
                                      lit("=")
                                    , alt(
                                        lit(">")
                                      , alt(
                                          lit("?")
                                        , alt(
                                            lit("@")
                                          , alt(lit("|"), alt(lit("~"), lit("^")))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        ]
      , cf(
          iter(
            alt(
              lit("!")
            , alt(
                lit("$")
              , alt(
                  lit("%")
                , alt(
                    lit("&")
                  , alt(
                      lit("*")
                    , alt(
                        lit("+")
                      , alt(
                          lit("-")
                        , alt(
                            lit(".")
                          , alt(
                              lit("/")
                            , alt(
                                lit(":")
                              , alt(
                                  lit("<")
                                , alt(
                                    lit("=")
                                  , alt(
                                      lit(">")
                                    , alt(
                                        lit("?")
                                      , alt(
                                          lit("@")
                                        , alt(lit("|"), alt(lit("~"), lit("^")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3648
    )
  , label(
      prod(
        [lit("$PositiveFloat")]
      , cf(sort("PositiveFloat"))
      , attrs([term(cons("PositiveFloat-Plhdr")), term(placeholder())])
      )
    , 3647
    )
  , label(
      prod(
        [cf(sort("Constr"))]
      , cf(sort("Constant"))
      , attrs([term(cons("Constr"))])
      )
    , 3646
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 3645
    )
  , label(
      prod(
        [lit("$DefinitionOrExprList")]
      , cf(sort("DefinitionOrExprList"))
      , attrs([term(cons("DefinitionOrExprList-Plhdr")), term(placeholder())])
      )
    , 3644
    )
  , label(
      prod(
        [ char-class([112])
        , char-class([114])
        , char-class([105])
        , char-class([118])
        , char-class([97])
        , char-class([116])
        , char-class([101])
        ]
      , lit("private")
      , no-attrs()
      )
    , 3643
    )
  , label(
      prod(
        [lit("'"), cf(opt(layout())), cf(sort("Ident"))]
      , cf(sort("QuoteIdent"))
      , attrs([term(cons("Ident")), term(cons("Indent"))])
      )
    , 3642
    )
  , label(
      prod(
        [lit("lor")]
      , lex(
          alt(
            lit("mod")
          , alt(
              lit("land")
            , alt(
                lit("lor")
              , alt(
                  lit("lxor")
                , alt(lit("/"), alt(lit("%"), lit("*")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3641
    )
  , label(
      prod(
        [lex(sort("InfixSymbol2"))]
      , cf(sort("InfixSymbol2"))
      , no-attrs()
      )
    , 3640
    )
  , label(
      prod(
        [cf(iter-sep(sort("MethodType"), lit(";")))]
      , cf(iter-star-sep(sort("MethodType"), lit(";")))
      , no-attrs()
      )
    , 3639
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 3638
    )
  , label(
      prod(
        [cf(iter(sort("QuoteTagName")))]
      , cf(iter-star(sort("QuoteTagName")))
      , no-attrs()
      )
    , 3637
    )
  , label(
      prod(
        [lex(iter(sort("StringChar")))]
      , lex(iter-star(sort("StringChar")))
      , no-attrs()
      )
    , 3636
    )
  , label(
      prod(
        [lex(iter(sort("StringChar")))]
      , cf(iter(sort("StringChar")))
      , no-attrs()
      )
    , 3635
    )
  , label(
      prod(
        [lex(iter-star(sort("StringChar")))]
      , cf(iter-star(sort("StringChar")))
      , no-attrs()
      )
    , 3634
    )
  , label(
      prod(
        [lit("+")]
      , cf(sort("Variance"))
      , attrs([term(cons("PosVariance"))])
      )
    , 3633
    )
  , label(
      prod(
        [lit("&&")]
      , lex(alt(lit("&"), lit("&&")))
      , no-attrs()
      )
    , 3632
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 3631
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTypeExpr"))])
      )
    , 3630
    )
  , label(
      prod(
        []
      , cf(sort("OptBar"))
      , attrs([term(cons("NoBar"))])
      )
    , 3629
    )
  , label(
      prod(
        [ char-class(
            [ range(48, 57)
            , range(65, 70)
            , 95
            , range(97, 102)
            ]
          )
        ]
      , lex(
          iter(
            char-class(
              [ range(48, 57)
              , range(65, 70)
              , 95
              , range(97, 102)
              ]
            )
          )
        )
      , no-attrs()
      )
    , 3628
    )
  , label(
      prod(
        [lex(sort("StringLiteral"))]
      , cf(sort("StringLiteral"))
      , no-attrs()
      )
    , 3627
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([111])
        , char-class([110])
        , char-class([115])
        , char-class([116])
        , char-class([97])
        , char-class([110])
        , char-class([116])
        , char-class([78])
        , char-class([101])
        , char-class([103])
        , char-class([97])
        , char-class([116])
        , char-class([105])
        , char-class([118])
        , char-class([101])
        ]
      , lit("$ConstantNegative")
      , no-attrs()
      )
    , 3626
    )
  , label(
      prod(
        [lit("struct")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3625
    )
  , label(
      prod(
        [ cf(iter-sep(sort("TypeExpr"), lit("*")))
        , cf(opt(layout()))
        , lit("*")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(iter-sep(sort("TypeExpr"), lit("*")))
      , no-attrs()
      )
    , 3624
    )
  , label(
      prod(
        [ lex(
            alt(
              lit("!")
            , alt(
                lit("$")
              , alt(
                  lit("%")
                , alt(
                    lit("&")
                  , alt(
                      lit("*")
                    , alt(
                        lit("+")
                      , alt(
                          lit("-")
                        , alt(
                            lit(".")
                          , alt(
                              lit("/")
                            , alt(
                                lit(":")
                              , alt(
                                  lit("<")
                                , alt(
                                    lit("=")
                                  , alt(
                                      lit(">")
                                    , alt(
                                        lit("?")
                                      , alt(
                                          lit("@")
                                        , alt(lit("|"), alt(lit("~"), lit("^")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        ]
      , lex(
          iter(
            alt(
              lit("!")
            , alt(
                lit("$")
              , alt(
                  lit("%")
                , alt(
                    lit("&")
                  , alt(
                      lit("*")
                    , alt(
                        lit("+")
                      , alt(
                          lit("-")
                        , alt(
                            lit(".")
                          , alt(
                              lit("/")
                            , alt(
                                lit(":")
                              , alt(
                                  lit("<")
                                , alt(
                                    lit("=")
                                  , alt(
                                      lit(">")
                                    , alt(
                                        lit("?")
                                      , alt(
                                          lit("@")
                                        , alt(lit("|"), alt(lit("~"), lit("^")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3623
    )
  , label(
      prod(
        [lit("$FieldDecl")]
      , cf(sort("FieldDecl"))
      , attrs([term(placeholder()), term(cons("FieldDecl-Plhdr"))])
      )
    , 3622
    )
  , label(
      prod(
        [ cf(iter(sort("Arg")))
        , cf(opt(layout()))
        , cf(sort("Arg"))
        ]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 3621
    )
  , label(
      prod([lit("downto")], lex(sort("ToDownTo")), no-attrs())
    , 3620
    )
  , label(
      prod(
        [cf(sort("QuoteTagName"))]
      , cf(iter(sort("QuoteTagName")))
      , no-attrs()
      )
    , 3619
    )
  , label(
      prod([], lex(iter-star(sort("OperatorChar"))), no-attrs())
    , 3618
    )
  , label(
      prod(
        [lex(sort("StringChar"))]
      , lex(iter(sort("StringChar")))
      , no-attrs()
      )
    , 3617
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([83])
        , char-class([101])
        , char-class([109])
        , char-class([105])
        , char-class([67])
        , char-class([111])
        , char-class([108])
        , char-class([111])
        , char-class([110])
        , char-class([68])
        , char-class([111])
        , char-class([116])
        , char-class([115])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        ]
      , lit("$SemiColonDotsOpt")
      , no-attrs()
      )
    , 3616
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("ClassTypeDef"), lit("and")))
      , no-attrs()
      )
    , 3615
    )
  , label(
      prod(
        [lit("$MethodName")]
      , cf(sort("MethodName"))
      , attrs([term(placeholder()), term(cons("MethodName-Plhdr"))])
      )
    , 3614
    )
  , label(
      prod(
        [lit("$InfixSymbol2")]
      , cf(sort("InfixSymbol2"))
      , attrs([term(cons("InfixSymbol2-Plhdr")), term(placeholder())])
      )
    , 3613
    )
  , label(
      prod(
        [lit("module")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3612
    )
  , label(
      prod(
        [char-class([97]), char-class([110]), char-class([100])]
      , lit("and")
      , no-attrs()
      )
    , 3611
    )
  , label(
      prod(
        [ lex(
            alt(
              lit("lsl")
            , alt(
                lit("lsr")
              , alt(
                  lit("asr")
                , alt(
                    lit("mod")
                  , alt(lit("land"), alt(lit("lor"), lit("lxor")))
                  )
                )
              )
            )
          )
        ]
      , lex(sort("Operations"))
      , no-attrs()
      )
    , 3610
    )
  , label(
      prod(
        [lit("{<"), cf(opt(layout())), lit(">}")]
      , cf(sort("Constant"))
      , attrs([term(cons("EmptyCurly"))])
      )
    , 3609
    )
  , label(
      prod(
        [lit("include"), cf(opt(layout())), cf(sort("ModuleExpr"))]
      , cf(sort("Definition"))
      , attrs([term(cons("Include"))])
      )
    , 3608
    )
  , label(
      prod([lex(layout())], cf(layout()), no-attrs())
    , 3607
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(",")))
        ]
      , cf(sort("Pattern"))
      , attrs(
          [term(cons("Patterns")), term(non-assoc()), term(nlm())]
        )
      )
    , 3606
    )
  , label(prod([], cf(sort("AndTypeExpr")), no-attrs()), 3605)
  , label(
      prod([], cf(opt(sort("Mutable"))), no-attrs())
    , 3604
    )
  , label(
      prod(
        [lit("as")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3603
    )
  , label(
      prod(
        [lit("?"), lex(sort("LowerCaseIdent"))]
      , lex(sort("OptLabel"))
      , no-attrs()
      )
    , 3602
    )
  , label(
      prod(
        [ char-class(
            [ 39
            , range(48, 57)
            , range(65, 90)
            , 95
            , range(97, 122)
            ]
          )
        ]
      , lex(
          iter(
            char-class(
              [ 39
              , range(48, 57)
              , range(65, 90)
              , 95
              , range(97, 122)
              ]
            )
          )
        )
      , no-attrs()
      )
    , 3601
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("ClassSpec"), lit("and")))
      , no-attrs()
      )
    , 3600
    )
  , label(
      prod(
        [lit("$ClassType")]
      , cf(sort("ClassType"))
      , attrs([term(cons("ClassType-Plhdr")), term(placeholder())])
      )
    , 3599
    )
  , label(
      prod(
        [lit("downto")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3598
    )
  , label(
      prod(
        [cf(sort("DotModulePathOpt")), cf(opt(layout())), cf(sort("ValueName"))]
      , cf(sort("ValuePath"))
      , attrs([term(cons("ValuePath"))])
      )
    , 3597
    )
  , label(
      prod(
        [ lex(
            iter(
              alt(
                char-class([range(0, 41), range(43, 255)])
              , alt(sort("Comment"), sort("Star"))
              )
            )
          )
        , lex(
            alt(
              char-class([range(0, 41), range(43, 255)])
            , alt(sort("Comment"), sort("Star"))
            )
          )
        ]
      , lex(
          iter(
            alt(
              char-class([range(0, 41), range(43, 255)])
            , alt(sort("Comment"), sort("Star"))
            )
          )
        )
      , no-attrs()
      )
    , 3596
    )
  , label(
      prod(
        [cf(sort("LowerCaseIdent"))]
      , cf(sort("LabelName"))
      , no-attrs()
      )
    , 3595
    )
  , label(
      prod(
        [cf(iter(sort("TypeConstraint")))]
      , cf(iter-star(sort("TypeConstraint")))
      , no-attrs()
      )
    , 3594
    )
  , label(
      prod(
        [lit("<"), cf(opt(layout())), lit(">")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets2"))])
      )
    , 3593
    )
  , label(
      prod(
        [ char-class([92])
        , char-class([120])
        , char-class(
            [range(48, 57), range(65, 70), range(97, 102)]
          )
        , char-class(
            [range(48, 57), range(65, 70), range(97, 102)]
          )
        ]
      , lex(
          seq(
            char-class([92])
          , [ char-class([120])
            , char-class(
                [range(48, 57), range(65, 70), range(97, 102)]
              )
            , char-class(
                [range(48, 57), range(65, 70), range(97, 102)]
              )
            ]
          )
        )
      , no-attrs()
      )
    , 3592
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([69])
        , char-class([120])
        , char-class([116])
        , char-class([101])
        , char-class([110])
        , char-class([100])
        , char-class([101])
        , char-class([100])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([80])
        , char-class([97])
        , char-class([116])
        , char-class([104])
        ]
      , lit("$ExtendedModulePath")
      , no-attrs()
      )
    , 3591
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([76])
        , char-class([97])
        , char-class([98])
        , char-class([101])
        , char-class([108])
        ]
      , lit("$Label")
      , no-attrs()
      )
    , 3590
    )
  , label(
      prod(
        [lit("||")]
      , lex(sort("InfixSymbol5"))
      , attrs([reject()])
      )
    , 3589
    )
  , label(
      prod(
        [lit("class")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3588
    )
  , label(
      prod(
        [ cf(sort("ValueName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , lit("type")
        , cf(opt(layout()))
        , cf(iter-star(sort("TypeConstr")))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("LetBinding"))
      , attrs([term(cons("BindingNew"))])
      )
    , 3587
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([86])
        , char-class([97])
        , char-class([108])
        , char-class([117])
        , char-class([101])
        , char-class([80])
        , char-class([97])
        , char-class([116])
        , char-class([104])
        ]
      , lit("$ValuePath")
      , no-attrs()
      )
    , 3586
    )
  , label(
      prod(
        [lit("-")]
      , cf(sort("Variance"))
      , attrs([term(cons("NegVariance"))])
      )
    , 3585
    )
  , label(
      prod(
        [lit("("), cf(opt(layout())), lit(")")]
      , cf(sort("Constant"))
      , attrs([term(cons("EmptyParenthesis"))])
      )
    , 3584
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 3583
    )
  , label(
      prod(
        [ char-class([99])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        ]
      , lit("class")
      , no-attrs()
      )
    , 3582
    )
  , label(
      prod(
        [ cf(iter-sep(sort("FieldOrFieldEqPattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("FieldOrFieldEqPattern"))
        ]
      , cf(iter-sep(sort("FieldOrFieldEqPattern"), lit(";")))
      , no-attrs()
      )
    , 3581
    )
  , label(
      prod(
        [lit(":"), cf(opt(layout())), cf(sort("TypeExpr"))]
      , cf(sort("ColonTypeExprOpt"))
      , attrs([term(cons("TypeExpr"))])
      )
    , 3580
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([86])
        , char-class([97])
        , char-class([108])
        , char-class([117])
        , char-class([101])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        ]
      , lit("$ValueName")
      , no-attrs()
      )
    , 3579
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 3578
    )
  , label(
      prod(
        [lit("while")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3577
    )
  , label(
      prod(
        [lit("$ModTypeName")]
      , cf(sort("ModTypeName"))
      , attrs([term(cons("ModTypeName-Plhdr")), term(placeholder())])
      )
    , 3576
    )
  , label(
      prod(
        [ cf(iter(sort("TypeConstraint")))
        , cf(opt(layout()))
        , cf(sort("TypeConstraint"))
        ]
      , cf(iter(sort("TypeConstraint")))
      , no-attrs()
      )
    , 3575
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 3574
    )
  , label(
      prod(
        [cf(iter-sep(sort("TagSpecFull"), lit("|")))]
      , cf(iter-star-sep(sort("TagSpecFull"), lit("|")))
      , no-attrs()
      )
    , 3573
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("ConstantNegative"))
      , no-attrs()
      )
    , 3572
    )
  , label(
      prod(
        [ char-class([116])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        ]
      , lit("type")
      , no-attrs()
      )
    , 3571
    )
  , label(
      prod(
        []
      , cf(sort("ColonModuleTypeOpt"))
      , attrs([term(cons("NoModuleType"))])
      )
    , 3570
    )
  , label(
      prod(
        [ lit("method")
        , cf(opt(layout()))
        , lit("virtual")
        , cf(opt(layout()))
        , cf(sort("Private"))
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("PolyTypeExpr"))
        ]
      , cf(sort("ClassField"))
      , attrs([term(cons("Method4"))])
      )
    , 3569
    )
  , label(
      prod(
        [lit("$ValuePath")]
      , cf(sort("ValuePath"))
      , attrs([term(cons("ValuePath-Plhdr")), term(placeholder())])
      )
    , 3568
    )
  , label(
      prod(
        [lit("if")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3567
    )
  , label(
      prod(
        [cf(sort("StringLiteral"))]
      , cf(sort("Constant"))
      , attrs([term(cons("StringLiteral"))])
      )
    , 3566
    )
  , label(
      prod(
        [cf(sort("TypeConstraint"))]
      , cf(iter(sort("TypeConstraint")))
      , no-attrs()
      )
    , 3565
    )
  , label(
      prod(
        [lit("or")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3564
    )
  , label(
      prod(
        [lit("&"), cf(opt(layout())), cf(sort("TypeExpr"))]
      , cf(sort("AndTypeExpr"))
      , attrs([term(cons("TypeExpr"))])
      )
    , 3563
    )
  , label(
      prod(
        [lit("inherit")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3562
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([67])
        , char-class([111])
        , char-class([110])
        , char-class([115])
        , char-class([116])
        , char-class([114])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        ]
      , lit("$TypeConstrName")
      , no-attrs()
      )
    , 3561
    )
  , label(
      prod(
        [lit("lsl")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3560
    )
  , label(
      prod(
        [lit("done")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3559
    )
  , label(
      prod(
        [lit("mod")]
      , lex(
          alt(
            lit("lsl")
          , alt(
              lit("lsr")
            , alt(
                lit("asr")
              , alt(
                  lit("mod")
                , alt(lit("land"), alt(lit("lor"), lit("lxor")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3558
    )
  , label(
      prod(
        [char-class([58]), char-class([58])]
      , lit("::")
      , no-attrs()
      )
    , 3557
    )
  , label(
      prod(
        [lit("end")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3556
    )
  , label(
      prod(
        [ lit("|")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("when")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("InnerPatternMatching"))
      , attrs([term(cons("InnerPatternMatching"))])
      )
    , 3555
    )
  , label(
      prod(
        [lit("asr")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3554
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([86])
        , char-class([97])
        , char-class([108])
        ]
      , lit("$Val")
      , no-attrs()
      )
    , 3553
    )
  , label(prod([], cf(opt(layout())), no-attrs()), 3552)
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 3551
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 3550
    )
  , label(
      prod(
        [lit("match")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3549
    )
  , label(
      prod([], cf(iter-star(sort("QuoteTagName"))), no-attrs())
    , 3548
    )
  , label(
      prod(
        []
      , cf(sort("ColonPackageTypeOpt"))
      , attrs([term(cons("NoPackageType"))])
      )
    , 3547
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 3546
    )
  , label(
      prod(
        [lit("$PackageConstraint")]
      , cf(sort("PackageConstraint"))
      , attrs([term(cons("PackageConstraint-Plhdr")), term(placeholder())])
      )
    , 3545
    )
  , label(
      prod(
        [lex(sort("OptLabelColon"))]
      , cf(sort("OptLabelColon"))
      , no-attrs()
      )
    , 3544
    )
  , label(
      prod(
        [lit("$ClassBinding")]
      , cf(sort("ClassBinding"))
      , attrs([term(cons("ClassBinding-Plhdr")), term(placeholder())])
      )
    , 3543
    )
  , label(
      prod(
        [lit("land")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3542
    )
  , label(
      prod(
        [ lex(
            seq(
              char-class([92])
            , [char-class(
                 [34, 39, 92, 98, 110, 114, 116]
               )]
            )
          )
        ]
      , lex(sort("EscapeSequence"))
      , no-attrs()
      )
    , 3541
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([86])
        , char-class([97])
        , char-class([114])
        , char-class([105])
        , char-class([97])
        , char-class([110])
        , char-class([99])
        , char-class([101])
        ]
      , lit("$Variance")
      , no-attrs()
      )
    , 3540
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([80])
        , char-class([97])
        , char-class([99])
        , char-class([107])
        , char-class([97])
        , char-class([103])
        , char-class([101])
        , char-class([67])
        , char-class([111])
        , char-class([110])
        , char-class([115])
        , char-class([116])
        , char-class([114])
        , char-class([97])
        , char-class([105])
        , char-class([110])
        , char-class([116])
        ]
      , lit("$PackageConstraint")
      , no-attrs()
      )
    , 3539
    )
  , label(
      prod(
        [char-class([60]), char-class([45])]
      , lit("<-")
      , no-attrs()
      )
    , 3538
    )
  , label(
      prod(
        [ char-class([116])
        , char-class([114])
        , char-class([117])
        , char-class([101])
        ]
      , lit("true")
      , no-attrs()
      )
    , 3537
    )
  , label(
      prod(
        [lit("-"), lex(sort("PositiveInt"))]
      , lex(sort("NegativeInt"))
      , no-attrs()
      )
    , 3536
    )
  , label(
      prod(
        [cf(sort("ConstrDecl"))]
      , cf(iter-sep(sort("ConstrDecl"), lit("|")))
      , no-attrs()
      )
    , 3535
    )
  , label(
      prod(
        [lit("$ValueName")]
      , cf(sort("ValueName"))
      , attrs([term(cons("ValueName-Plhdr")), term(placeholder())])
      )
    , 3534
    )
  , label(
      prod(
        [ char-class([105])
        , char-class([110])
        , char-class([104])
        , char-class([101])
        , char-class([114])
        , char-class([105])
        , char-class([116])
        , char-class([33])
        ]
      , lit("inherit!")
      , no-attrs()
      )
    , 3533
    )
  , label(
      prod(
        [lit("new")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3532
    )
  , label(
      prod(
        [lit("val")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3531
    )
  , label(
      prod(
        [ lex(
            alt(
              lit("mod")
            , alt(
                lit("land")
              , alt(
                  lit("lor")
                , alt(
                    lit("lxor")
                  , alt(lit("/"), alt(lit("%"), lit("*")))
                  )
                )
              )
            )
          )
        ]
      , cf(
          alt(
            lit("mod")
          , alt(
              lit("land")
            , alt(
                lit("lor")
              , alt(
                  lit("lxor")
                , alt(lit("/"), alt(lit("%"), lit("*")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3530
    )
  , label(
      prod(
        [lit(";;")]
      , cf(sort("DoubleSemiColonOpt"))
      , attrs([term(cons("DoubleSemiColon"))])
      )
    , 3529
    )
  , label(
      prod(
        [lit("$ModTypePath")]
      , cf(sort("ModTypePath"))
      , attrs([term(cons("ModTypePath-Plhdr")), term(placeholder())])
      )
    , 3528
    )
  , label(
      prod(
        [lit("lsr")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3527
    )
  , label(
      prod(
        [lit("fun")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3526
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([73])
        , char-class([110])
        , char-class([115])
        , char-class([116])
        , char-class([86])
        , char-class([97])
        , char-class([114])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        ]
      , lit("$InstVarName")
      , no-attrs()
      )
    , 3525
    )
  , label(
      prod(
        [char-class([110]), char-class([101]), char-class([119])]
      , lit("new")
      , no-attrs()
      )
    , 3524
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash2"))])
      )
    , 3523
    )
  , label(
      prod(
        [lit("open")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3522
    )
  , label(
      prod(
        [lit("/")]
      , lex(
          alt(
            lit("mod")
          , alt(
              lit("land")
            , alt(
                lit("lor")
              , alt(
                  lit("lxor")
                , alt(lit("/"), alt(lit("%"), lit("*")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3521
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 3520
    )
  , label(
      prod(
        [char-class([59]), char-class([59])]
      , lit(";;")
      , no-attrs()
      )
    , 3519
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("ModConstraint"), lit("and")))
      , no-attrs()
      )
    , 3518
    )
  , label(
      prod(
        [ lit("[>")
        , cf(opt(layout()))
        , cf(iter-star-sep(sort("TagSpec"), lit("|")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("PolymorphicVariantType"))
      , attrs([term(cons("PolymorphicVariantType2"))])
      )
    , 3517
    )
  , label(
      prod([], cf(iter-star(sort("TypeConstrName"))), no-attrs())
    , 3516
    )
  , label(prod([], cf(sort("OptTypeExpr")), no-attrs()), 3515)
  , label(
      prod(
        [ char-class([36])
        , char-class([73])
        , char-class([110])
        , char-class([102])
        , char-class([105])
        , char-class([120])
        , char-class([83])
        , char-class([121])
        , char-class([109])
        , char-class([98])
        , char-class([111])
        , char-class([108])
        , char-class([56])
        ]
      , lit("$InfixSymbol8")
      , no-attrs()
      )
    , 3514
    )
  , label(
      prod([], cf(opt(sort("Private"))), no-attrs())
    , 3513
    )
  , label(
      prod(
        [lit("$TypeParam")]
      , cf(sort("TypeParam"))
      , attrs([term(cons("TypeParam-Plhdr")), term(placeholder())])
      )
    , 3512
    )
  , label(
      prod(
        [ cf(iter(sort("DefinitionOrExprList")))
        , cf(opt(layout()))
        , cf(sort("DefinitionOrExprList"))
        ]
      , cf(iter(sort("DefinitionOrExprList")))
      , no-attrs()
      )
    , 3511
    )
  , label(
      prod(
        [lit("include")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3510
    )
  , label(
      prod(
        [lit("of")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3509
    )
  , label(
      prod(
        [cf(sort("ModConstraint"))]
      , cf(iter-sep(sort("ModConstraint"), lit("and")))
      , no-attrs()
      )
    , 3508
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 3507
    )
  , label(
      prod([char-class([36])], lit("$"), no-attrs())
    , 3506
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 3505
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("QuoteIdent"), lit(",")))
      , no-attrs()
      )
    , 3504
    )
  , label(
      prod(
        [cf(iter-sep(sort("QuoteIdent"), lit(",")))]
      , cf(sort("TypeParameters"))
      , attrs([term(cons("TypeParameters"))])
      )
    , 3503
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([76])
        , char-class([97])
        , char-class([98])
        , char-class([101])
        , char-class([108])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        ]
      , lit("$LabelNameOpt")
      , no-attrs()
      )
    , 3502
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("LetBinding"), lit("and")))
      , no-attrs()
      )
    , 3501
    )
  , label(
      prod(
        [ lex(
            alt(
              char-class([range(0, 41), range(43, 255)])
            , alt(sort("Comment"), sort("Star"))
            )
          )
        ]
      , cf(
          alt(
            char-class([range(0, 41), range(43, 255)])
          , alt(sort("Comment"), sort("Star"))
          )
        )
      , no-attrs()
      )
    , 3500
    )
  , label(
      prod(
        [cf(iter-sep(sort("ClassSpec"), lit("and")))]
      , cf(iter-star-sep(sort("ClassSpec"), lit("and")))
      , no-attrs()
      )
    , 3499
    )
  , label(
      prod(
        []
      , cf(sort("LabelNameOpt"))
      , attrs([term(cons("NoLabelName"))])
      )
    , 3498
    )
  , label(
      prod(
        [lex(sort("Star"))]
      , cf(sort("Star"))
      , no-attrs()
      )
    , 3497
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , cf(sort("ColonTypeExprOpt"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Parameter"))
      , attrs([term(cons("Param7"))])
      )
    , 3496
    )
  , label(
      prod(
        [char-class([124]), char-class([124])]
      , lit("||")
      , no-attrs()
      )
    , 3495
    )
  , label(
      prod(
        [ lex(alt(lit("0b"), lit("0B")))
        , char-class([range(48, 49)])
        , lex(iter-star(char-class([range(48, 49), 95])))
        ]
      , lex(sort("PositiveInt"))
      , no-attrs()
      )
    , 3494
    )
  , label(
      prod(
        [ lex(
            iter(
              char-class(
                [ range(48, 57)
                , range(65, 70)
                , 95
                , range(97, 102)
                ]
              )
            )
          )
        ]
      , lex(
          iter-star(
            char-class(
              [ range(48, 57)
              , range(65, 70)
              , 95
              , range(97, 102)
              ]
            )
          )
        )
      , no-attrs()
      )
    , 3493
    )
  , label(
      prod(
        [ lex(
            iter(
              char-class(
                [ range(48, 57)
                , range(65, 70)
                , 95
                , range(97, 102)
                ]
              )
            )
          )
        ]
      , cf(
          iter(
            char-class(
              [ range(48, 57)
              , range(65, 70)
              , 95
              , range(97, 102)
              ]
            )
          )
        )
      , no-attrs()
      )
    , 3492
    )
  , label(
      prod(
        [ lex(
            iter-star(
              char-class(
                [ range(48, 57)
                , range(65, 70)
                , 95
                , range(97, 102)
                ]
              )
            )
          )
        ]
      , cf(
          iter-star(
            char-class(
              [ range(48, 57)
              , range(65, 70)
              , 95
              , range(97, 102)
              ]
            )
          )
        )
      , no-attrs()
      )
    , 3491
    )
  , label(
      prod(
        [char-class([105]), char-class([102])]
      , lit("if")
      , no-attrs()
      )
    , 3490
    )
  , label(
      prod(
        [cf(sort("TypeParam"))]
      , cf(sort("TypeParams"))
      , attrs([term(cons("SingleTypeParam"))])
      )
    , 3489
    )
  , label(
      prod(
        [lit("try")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3488
    )
  , label(
      prod(
        [lit("$ExternalDeclaration")]
      , cf(sort("ExternalDeclaration"))
      , attrs([term(cons("ExternalDeclaration-Plhdr")), term(placeholder())])
      )
    , 3487
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([80])
        , char-class([97])
        , char-class([116])
        , char-class([104])
        ]
      , lit("$ClassPath")
      , no-attrs()
      )
    , 3486
    )
  , label(
      prod(
        [ lit("module")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        , cf(opt(layout()))
        , cf(iter-star(sort("AndModuleType")))
        ]
      , cf(sort("Definition"))
      , attrs([term(cons("ModuleRec2"))])
      )
    , 3485
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName"))])
      )
    , 3484
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        , char-class([68])
        , char-class([111])
        , char-class([116])
        ]
      , lit("$ModuleNameDot")
      , no-attrs()
      )
    , 3483
    )
  , label(
      prod(
        [lit("0X")]
      , lex(alt(lit("0x"), lit("0X")))
      , no-attrs()
      )
    , 3482
    )
  , label(
      prod(
        [cf(sort("ClassBodyType"))]
      , cf(sort("ClassType"))
      , no-attrs()
      )
    , 3481
    )
  , label(
      prod([lit("*")], lex(sort("Star")), no-attrs())
    , 3480
    )
  , label(
      prod(
        [lit("$TagSpec")]
      , cf(sort("TagSpec"))
      , attrs([term(cons("TagSpec-Plhdr")), term(placeholder())])
      )
    , 3479
    )
  , label(
      prod(
        [lit("as"), cf(opt(layout())), cf(sort("LowerCaseIdent"))]
      , cf(sort("AsOption"))
      , attrs([term(cons("AsValue"))])
      )
    , 3478
    )
  , label(
      prod(
        [lit("sig")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3477
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("val")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("ModuleExpr"))
      , attrs([term(cons("ModuleExprVal"))])
      )
    , 3476
    )
  , label(
      prod(
        [ char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([101])
        , char-class([114])
        , char-class([116])
        ]
      , lit("assert")
      , no-attrs()
      )
    , 3475
    )
  , label(
      prod(
        [lit("constraint")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3474
    )
  , label(
      prod(
        [ char-class([109])
        , char-class([101])
        , char-class([116])
        , char-class([104])
        , char-class([111])
        , char-class([100])
        , char-class([33])
        ]
      , lit("method!")
      , no-attrs()
      )
    , 3473
    )
  , label(
      prod(
        [ cf(iter(sort("AndTypeExpr")))
        , cf(opt(layout()))
        , cf(sort("AndTypeExpr"))
        ]
      , cf(iter(sort("AndTypeExpr")))
      , no-attrs()
      )
    , 3472
    )
  , label(
      prod(
        [lit("$Specification")]
      , cf(sort("Specification"))
      , attrs([term(placeholder()), term(cons("Specification-Plhdr"))])
      )
    , 3471
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([73])
        , char-class([116])
        , char-class([101])
        , char-class([109])
        , char-class([115])
        ]
      , lit("$ModuleItems")
      , no-attrs()
      )
    , 3470
    )
  , label(
      prod(
        [ cf(iter(sort("StringLiteral")))
        , cf(opt(layout()))
        , cf(sort("StringLiteral"))
        ]
      , cf(iter(sort("StringLiteral")))
      , no-attrs()
      )
    , 3469
    )
  , label(
      prod(
        [cf(sort("OptTypeExprList")), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("ClassBodyType"))
      , attrs([term(cons("ClassBodyType"))])
      )
    , 3468
    )
  , label(
      prod(
        [cf(iter(sort("Definition")))]
      , cf(iter-star(sort("Definition")))
      , no-attrs()
      )
    , 3467
    )
  , label(
      prod(
        [ lit("functor")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        ]
      , cf(sort("ModuleExpr"))
      , attrs([term(cons("Functor"))])
      )
    , 3466
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("MethodType"), lit(";")))
        , cf(opt(layout()))
        , cf(sort("SemiColonDotsOpt"))
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AngleBrackets"))])
      )
    , 3465
    )
  , label(
      prod(
        [ cf(sort("ModulePath"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("FieldName"))
        ]
      , cf(sort("Field"))
      , attrs([term(cons("PathFieldName"))])
      )
    , 3464
    )
  , label(
      prod(
        [lit("exception")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3463
    )
  , label(
      prod(
        [lex(sort("OperatorChar"))]
      , cf(sort("OperatorChar"))
      , no-attrs()
      )
    , 3462
    )
  , label(
      prod(
        [cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr2"))])
      )
    , 3461
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([82])
        , char-class([101])
        , char-class([112])
        , char-class([114])
        , char-class([101])
        , char-class([115])
        , char-class([101])
        , char-class([110])
        , char-class([116])
        , char-class([97])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$TypeRepresentation")
      , no-attrs()
      )
    , 3460
    )
  , label(
      prod(
        [char-class([111]), char-class([114])]
      , lit("or")
      , no-attrs()
      )
    , 3459
    )
  , label(
      prod(
        [lit("land")]
      , lex(
          alt(
            lit("mod")
          , alt(
              lit("land")
            , alt(
                lit("lor")
              , alt(
                  lit("lxor")
                , alt(lit("/"), alt(lit("%"), lit("*")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3458
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([78])
        , char-class([101])
        , char-class([103])
        , char-class([97])
        , char-class([116])
        , char-class([105])
        , char-class([118])
        , char-class([101])
        , char-class([70])
        , char-class([108])
        , char-class([111])
        , char-class([97])
        , char-class([116])
        ]
      , lit("$NegativeFloat")
      , no-attrs()
      )
    , 3457
    )
  , label(
      prod(
        [cf(sort("ClassPath"))]
      , cf(sort("ClassExpr"))
      , attrs([term(cons("ClassPath"))])
      )
    , 3456
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("FieldDecl"), lit(";")))
      , no-attrs()
      )
    , 3455
    )
  , label(
      prod(
        [lit("$Parameter")]
      , cf(sort("Parameter"))
      , attrs([term(cons("Parameter-Plhdr")), term(placeholder())])
      )
    , 3454
    )
  , label(
      prod(
        [cf(sort("PackageConstraint"))]
      , cf(iter-sep(sort("PackageConstraint"), lit("and")))
      , no-attrs()
      )
    , 3453
    )
  , label(
      prod(
        [lit("$ClassTypeDef")]
      , cf(sort("ClassTypeDef"))
      , attrs([term(placeholder()), term(cons("ClassTypeDef-Plhdr"))])
      )
    , 3452
    )
  , label(
      prod(
        [cf(sort("Definition"))]
      , cf(iter(sort("Definition")))
      , no-attrs()
      )
    , 3451
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([76])
        , char-class([97])
        , char-class([98])
        , char-class([101])
        , char-class([108])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        ]
      , lit("$LabelName")
      , no-attrs()
      )
    , 3450
    )
  , label(
      prod(
        [cf(iter-sep(sort("FieldDecl"), lit(";")))]
      , cf(iter-star-sep(sort("FieldDecl"), lit(";")))
      , no-attrs()
      )
    , 3449
    )
  , label(
      prod(
        []
      , cf(sort("ColonClassTypeOpt"))
      , attrs([term(cons("NoClassType"))])
      )
    , 3448
    )
  , label(
      prod(
        [lit("lazy")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3447
    )
  , label(
      prod(
        [lit("open")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3446
    )
  , label(
      prod(
        [cf(iter(sort("ModuleItems")))]
      , cf(iter-star(sort("ModuleItems")))
      , no-attrs()
      )
    , 3445
    )
  , label(
      prod(
        [lit("private")]
      , cf(sort("Private"))
      , attrs([term(cons("Private"))])
      )
    , 3444
    )
  , label(
      prod(
        [cf(sort("AndModuleTypeModuleExpr"))]
      , cf(iter(sort("AndModuleTypeModuleExpr")))
      , no-attrs()
      )
    , 3443
    )
  , label(
      prod(
        [cf(sort("SemiColon"))]
      , cf(opt(sort("SemiColon")))
      , no-attrs()
      )
    , 3442
    )
  , label(
      prod(
        [lit("lsr")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3441
    )
  , label(
      prod(
        [lit("downto")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3440
    )
  , label(
      prod(
        [lit("private")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3439
    )
  , label(
      prod(
        [lit("val")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3438
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([73])
        , char-class([110])
        , char-class([102])
        , char-class([105])
        , char-class([120])
        , char-class([83])
        , char-class([121])
        , char-class([109])
        , char-class([98])
        , char-class([111])
        , char-class([108])
        , char-class([54])
        ]
      , lit("$InfixSymbol6")
      , no-attrs()
      )
    , 3437
    )
  , label(
      prod(
        [ cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter-star(sort("InnerPatternMatching")))
        ]
      , cf(sort("PatternMatching"))
      , attrs([term(cons("PatternMatching")), term(nlm())])
      )
    , 3436
    )
  , label(
      prod(
        [ cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("InnerPatternMatching")))
        ]
      , cf(sort("PatternMatching"))
      , no-attrs()
      )
    , 3435
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("OptTypeExprList"))
      , attrs([term(cons("TypeExprList"))])
      )
    , 3434
    )
  , label(
      prod(
        [lit("object")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3433
    )
  , label(
      prod(
        [lex(sort("RegularChar"))]
      , lex(alt(sort("RegularChar"), sort("EscapeSequence")))
      , no-attrs()
      )
    , 3432
    )
  , label(
      prod(
        [ lit("[<")
        , cf(opt(layout()))
        , cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(iter-sep(sort("TagSpecFull"), lit("|")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("PolymorphicVariantType"))
      , attrs([term(cons("PolymorphicVariantType3"))])
      )
    , 3431
    )
  , label(
      prod(
        [ char-class([108])
        , char-class([97])
        , char-class([122])
        , char-class([121])
        ]
      , lit("lazy")
      , no-attrs()
      )
    , 3430
    )
  , label(
      prod(
        [lit("**")]
      , lex(sort("InfixSymbol2"))
      , attrs([reject()])
      )
    , 3429
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("ClassExpr"))
      , attrs([term(cons("TEClassPath"))])
      )
    , 3428
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 3427
    )
  , label(
      prod(
        [lit("sig")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3426
    )
  , label(
      prod(
        [cf(sort("ModuleItems"))]
      , cf(iter(sort("ModuleItems")))
      , no-attrs()
      )
    , 3425
    )
  , label(
      prod(
        [ lit("struct")
        , cf(opt(layout()))
        , cf(sort("DoubleSemiColonOpt"))
        , cf(opt(layout()))
        , cf(iter-star(sort("ModuleItems")))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("ModuleExpr"))
      , attrs([term(cons("Struct"))])
      )
    , 3424
    )
  , label(
      prod([char-class([38])], lit("&"), no-attrs())
    , 3423
    )
  , label(
      prod(
        [lit("try")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3422
    )
  , label(
      prod(
        [ lex(
            alt(
              lit("=")
            , alt(
                lit("<")
              , alt(
                  lit(">")
                , alt(lit("|"), alt(lit("&"), lit("$")))
                )
              )
            )
          )
        , lex(iter-star(sort("OperatorChar")))
        ]
      , lex(sort("InfixSymbol5"))
      , no-attrs()
      )
    , 3421
    )
  , label(
      prod(
        [lit("function")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3420
    )
  , label(
      prod(
        [cf(sort("TypeExpr"))]
      , cf(sort("TagSpecFull"))
      , no-attrs()
      )
    , 3419
    )
  , label(
      prod(
        [lit("$Start")]
      , cf(sort("Start"))
      , attrs([term(cons("Start-Plhdr")), term(placeholder())])
      )
    , 3418
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Parameter"))
      , attrs([term(cons("Param6"))])
      )
    , 3417
    )
  , label(
      prod(
        [cf(sort("NegativeFloat"))]
      , cf(sort("ConstantNegative"))
      , no-attrs()
      )
    , 3416
    )
  , label(
      prod(
        [ lit("constraint")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("ClassField"))
      , attrs([term(cons("ClassConstraint"))])
      )
    , 3415
    )
  , label(
      prod(
        [lit("$Pattern")]
      , cf(sort("Pattern"))
      , attrs([term(cons("Pattern-Plhdr")), term(placeholder())])
      )
    , 3414
    )
  , label(
      prod(
        [lit("$OptLabel")]
      , cf(sort("OptLabel"))
      , attrs([term(placeholder()), term(cons("OptLabel-Plhdr"))])
      )
    , 3413
    )
  , label(
      prod(
        [lit("as")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3412
    )
  , label(prod([], cf(sort("SemiColonDotsOpt")), no-attrs()), 3411)
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([70])
        , char-class([105])
        , char-class([101])
        , char-class([108])
        , char-class([100])
        ]
      , lit("$ClassField")
      , no-attrs()
      )
    , 3410
    )
  , label(
      prod(
        [lit("constraint")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3409
    )
  , label(
      prod(
        [lit("initializer")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3408
    )
  , label(
      prod(
        [ cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("ModuleExpr"))
      , attrs([term(cons("ModuleExprAppl"))])
      )
    , 3407
    )
  , label(
      prod(
        [lit("$TypeInformation")]
      , cf(sort("TypeInformation"))
      , attrs([term(placeholder()), term(cons("TypeInformation-Plhdr"))])
      )
    , 3406
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(bracket())])
      )
    , 3405
    )
  , label(
      prod(
        [lex(sort("FloatLiteral"))]
      , cf(sort("FloatLiteral"))
      , no-attrs()
      )
    , 3404
    )
  , label(
      prod(
        [lit("false")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3403
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([66])
        , char-class([105])
        , char-class([110])
        , char-class([100])
        , char-class([105])
        , char-class([110])
        , char-class([103])
        ]
      , lit("$ClassBinding")
      , no-attrs()
      )
    , 3402
    )
  , label(
      prod(
        [lit("begin")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3401
    )
  , label(
      prod(
        [cf(iter-sep(sort("Pattern"), lit(";")))]
      , cf(iter-star-sep(sort("Pattern"), lit(";")))
      , no-attrs()
      )
    , 3400
    )
  , label(
      prod(
        [cf(sort("ClassTypeDefinition"))]
      , cf(sort("Definition"))
      , attrs([term(cons("ClassTypeDef"))])
      )
    , 3399
    )
  , label(
      prod(
        [ char-class(
            [range(0, 33), range(35, 91), range(93, 255)]
          )
        ]
      , lex(sort("RegularCharStr"))
      , no-attrs()
      )
    , 3398
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([65])
        , char-class([114])
        , char-class([103])
        ]
      , lit("$Arg")
      , no-attrs()
      )
    , 3397
    )
  , label(
      prod([], cf(opt(sort("TypeParameters"))), no-attrs())
    , 3396
    )
  , label(
      prod([char-class([39])], lit("'"), no-attrs())
    , 3395
    )
  , label(
      prod(
        [cf(sort("LabelName")), cf(opt(layout())), lit(":")]
      , cf(sort("LabelNameOpt"))
      , attrs([term(cons("LabelName"))])
      )
    , 3394
    )
  , label(
      prod(
        [ lit("module")
        , cf(opt(layout()))
        , cf(sort("ModulePath"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ExtendedModulePath"))
        ]
      , cf(sort("ModConstraint"))
      , attrs([term(cons("ModeConsModule"))])
      )
    , 3393
    )
  , label(
      prod(
        [lex(alt(lit("||"), lit("or")))]
      , cf(alt(lit("||"), lit("or")))
      , no-attrs()
      )
    , 3392
    )
  , label(
      prod(
        [ cf(sort("LabelNameOpt"))
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("ClassType"))
        ]
      , cf(sort("ClassType"))
      , attrs([term(cons("ClassType"))])
      )
    , 3391
    )
  , label(
      prod(
        [lex(alt(lit("@"), lit("^")))]
      , cf(alt(lit("@"), lit("^")))
      , no-attrs()
      )
    , 3390
    )
  , label(
      prod(
        [ lex(iter(char-class([range(48, 55), 95])))
        , char-class([range(48, 55), 95])
        ]
      , lex(iter(char-class([range(48, 55), 95])))
      , no-attrs()
      )
    , 3389
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([80])
        , char-class([97])
        , char-class([116])
        , char-class([116])
        , char-class([101])
        , char-class([114])
        , char-class([110])
        ]
      , lit("$Pattern")
      , no-attrs()
      )
    , 3388
    )
  , label(
      prod([], cf(opt(sort("TypeParams"))), no-attrs())
    , 3387
    )
  , label(
      prod(
        [ lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , cf(iter-star(sort("ModuleNameTypeParam")))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        ]
      , cf(sort("Specification"))
      , attrs([term(cons("ModuleDef1"))])
      )
    , 3386
    )
  , label(
      prod([], cf(iter-star(sort("SpecificationSemi"))), no-attrs())
    , 3385
    )
  , label(
      prod(
        [lit("exception"), cf(opt(layout())), cf(sort("ConstrName"))]
      , cf(sort("ExceptionDefinition"))
      , attrs([term(cons("Exception"))])
      )
    , 3384
    )
  , label(
      prod(
        [cf(sort("QuoteIdent"))]
      , cf(iter(sort("QuoteIdent")))
      , no-attrs()
      )
    , 3383
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([66])
        , char-class([111])
        , char-class([100])
        , char-class([121])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        ]
      , lit("$ClassBodyType")
      , no-attrs()
      )
    , 3382
    )
  , label(
      prod(
        [ lit("|")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("InnerPatternMatching"))
      , attrs([term(cons("InnerPatternMatching"))])
      )
    , 3381
    )
  , label(
      prod(
        [ lex(
            alt(
              lit("_")
            , alt(
                lit("and")
              , alt(
                  lit("as")
                , alt(
                    lit("assert")
                  , alt(
                      lit("asr")
                    , alt(
                        lit("begin")
                      , alt(
                          lit("class")
                        , alt(
                            lit("constraint")
                          , alt(
                              lit("do")
                            , alt(
                                lit("done")
                              , alt(
                                  lit("downto")
                                , alt(
                                    lit("else")
                                  , alt(
                                      lit("end")
                                    , alt(
                                        lit("exception")
                                      , alt(
                                          lit("external")
                                        , alt(
                                            lit("false")
                                          , alt(
                                              lit("for")
                                            , alt(
                                                lit("fun")
                                              , alt(
                                                  lit("function")
                                                , alt(
                                                    lit("functor")
                                                  , alt(
                                                      lit("if")
                                                    , alt(
                                                        lit("in")
                                                      , alt(
                                                          lit("include")
                                                        , alt(
                                                            lit("inherit")
                                                          , alt(
                                                              lit("initializer")
                                                            , alt(
                                                                lit("land")
                                                              , alt(
                                                                  lit("lazy")
                                                                , alt(
                                                                    lit("let")
                                                                  , alt(
                                                                      lit("lor")
                                                                    , alt(
                                                                        lit("lsl")
                                                                      , alt(
                                                                          lit("lsr")
                                                                        , alt(
                                                                            lit("lxor")
                                                                          , alt(
                                                                              lit("match")
                                                                            , alt(
                                                                                lit("method")
                                                                              , alt(
                                                                                  lit("mod")
                                                                                , alt(
                                                                                    lit("module")
                                                                                  , alt(
                                                                                      lit("mutable")
                                                                                    , alt(
                                                                                        lit("new")
                                                                                      , alt(
                                                                                          lit("object")
                                                                                        , alt(
                                                                                            lit("of")
                                                                                          , alt(
                                                                                              lit("open")
                                                                                            , alt(
                                                                                                lit("or")
                                                                                              , alt(
                                                                                                  lit("private")
                                                                                                , alt(
                                                                                                    lit("rec")
                                                                                                  , alt(
                                                                                                      lit("sig")
                                                                                                    , alt(
                                                                                                        lit("struct")
                                                                                                      , alt(
                                                                                                          lit("then")
                                                                                                        , alt(
                                                                                                            lit("to")
                                                                                                          , alt(
                                                                                                              lit("true")
                                                                                                            , alt(
                                                                                                                lit("try")
                                                                                                              , alt(
                                                                                                                  lit("type")
                                                                                                                , alt(
                                                                                                                    lit("val")
                                                                                                                  , alt(
                                                                                                                      lit("virtual")
                                                                                                                    , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        ]
      , cf(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3380
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        , char-class([66])
        , char-class([97])
        , char-class([114])
        ]
      , lit("$OptBar")
      , no-attrs()
      )
    , 3379
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(iter-sep(sort("Expr"), lit(";")))
      , no-attrs()
      )
    , 3378
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("TypeExpr"), lit(",")))
      , no-attrs()
      )
    , 3377
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 3376
    )
  , label(
      prod(
        [lit("$OptSemiColon")]
      , cf(sort("OptSemiColon"))
      , attrs([term(cons("OptSemiColon-Plhdr")), term(placeholder())])
      )
    , 3375
    )
  , label(
      prod(
        [cf(sort("Field"))]
      , cf(sort("FieldOrFieldEqPattern"))
      , attrs([term(cons("FieldPattern"))])
      )
    , 3374
    )
  , label(
      prod(
        [cf(sort("QuoteIdent"))]
      , cf(iter-sep(sort("QuoteIdent"), lit(",")))
      , no-attrs()
      )
    , 3373
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeParam"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeParams"))
      , attrs([term(cons("TypeParamList"))])
      )
    , 3372
    )
  , label(
      prod(
        [lit("else")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3371
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([97])
        , char-class([103])
        , char-class([83])
        , char-class([112])
        , char-class([101])
        , char-class([99])
        ]
      , lit("$TagSpec")
      , no-attrs()
      )
    , 3370
    )
  , label(
      prod(
        [lit("$Method")]
      , cf(sort("Method"))
      , attrs([term(placeholder()), term(cons("Method-Plhdr"))])
      )
    , 3369
    )
  , label(
      prod(
        [lit("lxor")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3368
    )
  , label(
      prod(
        [cf(sort("ModTypePath"))]
      , cf(sort("PackageType"))
      , attrs([term(cons("PackageType"))])
      )
    , 3367
    )
  , label(
      prod(
        [lex(sort("SemiColon2"))]
      , cf(sort("SemiColon2"))
      , no-attrs()
      )
    , 3366
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternValueName"))])
      )
    , 3365
    )
  , label(
      prod(
        [lit("@")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3364
    )
  , label(
      prod(
        [cf(sort("TypeExpr"))]
      , cf(sort("TagSpec"))
      , attrs([term(cons("TagSpec2"))])
      )
    , 3363
    )
  , label(
      prod(
        [cf(iter-sep(sort("PackageConstraint"), lit("and")))]
      , cf(iter-star-sep(sort("PackageConstraint"), lit("and")))
      , no-attrs()
      )
    , 3362
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(sort("TypeParameters"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("OptTypeParameters"))
      , attrs([term(cons("Params"))])
      )
    , 3361
    )
  , label(
      prod(
        [ char-class([109])
        , char-class([117])
        , char-class([116])
        , char-class([97])
        , char-class([98])
        , char-class([108])
        , char-class([101])
        ]
      , lit("mutable")
      , no-attrs()
      )
    , 3360
    )
  , label(
      prod(
        [lit("true")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3359
    )
  , label(
      prod(
        [lex(sort("Comment"))]
      , lex(
          alt(
            char-class([range(0, 41), range(43, 255)])
          , alt(sort("Comment"), sort("Star"))
          )
        )
      , no-attrs()
      )
    , 3358
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([73])
        , char-class([110])
        , char-class([102])
        , char-class([105])
        , char-class([120])
        , char-class([83])
        , char-class([121])
        , char-class([109])
        , char-class([98])
        , char-class([111])
        , char-class([108])
        , char-class([52])
        ]
      , lit("$InfixSymbol4")
      , no-attrs()
      )
    , 3357
    )
  , label(
      prod(
        [lit("!"), lit("=")]
      , lex(sort("PrefixSymbol"))
      , attrs([reject()])
      )
    , 3356
    )
  , label(
      prod(
        [ lit("and")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        ]
      , cf(sort("AndModuleType"))
      , attrs([term(cons("NamedTypedModule"))])
      )
    , 3355
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 3354
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([101])
        , char-class([116])
        , char-class([104])
        , char-class([111])
        , char-class([100])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        ]
      , lit("$MethodName")
      , no-attrs()
      )
    , 3353
    )
  , label(
      prod(
        [lit("$Variance")]
      , cf(sort("Variance"))
      , attrs([term(cons("Variance-Plhdr")), term(placeholder())])
      )
    , 3352
    )
  , label(
      prod(
        [lit("$StringLiteral")]
      , cf(sort("StringLiteral"))
      , attrs([term(cons("StringLiteral-Plhdr")), term(placeholder())])
      )
    , 3351
    )
  , label(
      prod(
        [lex(sort("Comment"))]
      , cf(sort("Comment"))
      , no-attrs()
      )
    , 3350
    )
  , label(
      prod(
        [lit("true")]
      , cf(sort("Constant"))
      , attrs([term(cons("True"))])
      )
    , 3349
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([69])
        , char-class([120])
        , char-class([112])
        , char-class([114])
        ]
      , lit("$ModuleExpr")
      , no-attrs()
      )
    , 3348
    )
  , label(
      prod(
        [lit("|")]
      , lex(sort("InfixSymbol5"))
      , attrs([reject()])
      )
    , 3347
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([65])
        , char-class([115])
        , char-class([115])
        , char-class([105])
        , char-class([103])
        , char-class([110])
        , char-class([73])
        , char-class([110])
        , char-class([115])
        , char-class([116])
        , char-class([86])
        , char-class([97])
        , char-class([114])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        ]
      , lit("$AssignInstVarName")
      , no-attrs()
      )
    , 3346
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 3345
    )
  , label(
      prod(
        [cf(iter-sep(sort("ClassBinding"), lit("and")))]
      , cf(iter-star-sep(sort("ClassBinding"), lit("and")))
      , no-attrs()
      )
    , 3344
    )
  , label(
      prod(
        [cf(sort("ExtendedModulePathDotOpt")), cf(opt(layout())), cf(sort("TypeConstrName"))]
      , cf(sort("TypeConstr"))
      , attrs([term(cons("TypeConstr"))])
      )
    , 3343
    )
  , label(
      prod(
        [ char-class([105])
        , char-class([110])
        , char-class([105])
        , char-class([116])
        , char-class([105])
        , char-class([97])
        , char-class([108])
        , char-class([105])
        , char-class([122])
        , char-class([101])
        , char-class([114])
        ]
      , lit("initializer")
      , no-attrs()
      )
    , 3342
    )
  , label(
      prod(
        [lit("*")]
      , lex(
          alt(
            lit("mod")
          , alt(
              lit("land")
            , alt(
                lit("lor")
              , alt(
                  lit("lxor")
                , alt(lit("/"), alt(lit("%"), lit("*")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3341
    )
  , label(
      prod(
        [lit("asr")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3340
    )
  , label(
      prod(
        [lit("_")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3339
    )
  , label(
      prod(
        [lit("$Private")]
      , cf(sort("Private"))
      , attrs([term(placeholder()), term(cons("Private-Plhdr"))])
      )
    , 3338
    )
  , label(
      prod(
        [lit("$TagSpecFull")]
      , cf(sort("TagSpecFull"))
      , attrs([term(placeholder()), term(cons("TagSpecFull-Plhdr"))])
      )
    , 3337
    )
  , label(
      prod(
        []
      , lex(opt(char-class([43, 45])))
      , no-attrs()
      )
    , 3336
    )
  , label(
      prod(
        [cf(sort("OptLabel"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabel"))])
      )
    , 3335
    )
  , label(
      prod(
        [lit("assert")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3334
    )
  , label(
      prod(
        [ cf(iter-sep(sort("MethodType"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("MethodType"))
        ]
      , cf(iter-sep(sort("MethodType"), lit(";")))
      , no-attrs()
      )
    , 3333
    )
  , label(
      prod(
        [lit("$NegativeFloat")]
      , cf(sort("NegativeFloat"))
      , attrs([term(cons("NegativeFloat-Plhdr")), term(placeholder())])
      )
    , 3332
    )
  , label(
      prod(
        [lit("$ColonTypeExprOpt")]
      , cf(sort("ColonTypeExprOpt"))
      , attrs([term(cons("ColonTypeExprOpt-Plhdr")), term(placeholder())])
      )
    , 3331
    )
  , label(
      prod(
        [ lex(alt(lit("0o"), lit("0O")))
        , char-class([range(48, 55)])
        , lex(iter-star(char-class([range(48, 55), 95])))
        ]
      , lex(sort("PositiveInt"))
      , no-attrs()
      )
    , 3330
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([80])
        , char-class([97])
        , char-class([114])
        , char-class([97])
        , char-class([109])
        ]
      , lit("$ModuleNameTypeParam")
      , no-attrs()
      )
    , 3329
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets"))])
      )
    , 3328
    )
  , label(
      prod(
        [cf(iter(sort("QuoteIdent")))]
      , cf(iter-star(sort("QuoteIdent")))
      , no-attrs()
      )
    , 3327
    )
  , label(
      prod(
        [char-class([97]), char-class([115])]
      , lit("as")
      , no-attrs()
      )
    , 3326
    )
  , label(
      prod(
        [lit("match")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3325
    )
  , label(
      prod(
        [lit("initializer")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3324
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([78])
        , char-class([101])
        , char-class([103])
        , char-class([97])
        , char-class([116])
        , char-class([105])
        , char-class([118])
        , char-class([101])
        , char-class([73])
        , char-class([110])
        , char-class([116])
        ]
      , lit("$NegativeInt")
      , no-attrs()
      )
    , 3323
    )
  , label(
      prod(
        [lit("val!")]
      , cf(sort("Val"))
      , attrs([term(cons("Val2"))])
      )
    , 3322
    )
  , label(
      prod(
        [char-class([45]), char-class([46])]
      , lit("-.")
      , no-attrs()
      )
    , 3321
    )
  , label(
      prod(
        [ char-class([98])
        , char-class([101])
        , char-class([103])
        , char-class([105])
        , char-class([110])
        ]
      , lit("begin")
      , no-attrs()
      )
    , 3320
    )
  , label(
      prod(
        [lit("&")]
      , lex(alt(lit("&"), lit("&&")))
      , no-attrs()
      )
    , 3319
    )
  , label(
      prod(
        [ cf(iter-star(sort("ModuleNameDot")))
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        ]
      , cf(sort("ModulePath"))
      , attrs([term(cons("ModulePath"))])
      )
    , 3318
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , cf(iter-star(sort("ClassField")))
        ]
      , cf(sort("ClassBody"))
      , attrs([term(cons("ClassBody"))])
      )
    , 3317
    )
  , label(
      prod(
        [lex(sort("OptLabel"))]
      , cf(sort("OptLabel"))
      , no-attrs()
      )
    , 3316
    )
  , label(
      prod(
        [lit("`"), cf(opt(layout())), cf(sort("TagName"))]
      , cf(sort("Constant"))
      , attrs([term(cons("TagName"))])
      )
    , 3315
    )
  , label(
      prod(
        [lit("fun")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3314
    )
  , label(
      prod([char-class([41])], lit(")"), no-attrs())
    , 3313
    )
  , label(
      prod([lit("|")], cf(sort("OptBar")), no-attrs())
    , 3312
    )
  , label(
      prod(
        [lit("new")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3311
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([111])
        , char-class([112])
        , char-class([76])
        , char-class([101])
        , char-class([118])
        , char-class([101])
        , char-class([108])
        ]
      , lit("$TopLevel")
      , no-attrs()
      )
    , 3310
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(bracket())])
      )
    , 3309
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , cf(iter-star(sort("Parameter")))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("LetBinding"))
      , attrs([term(cons("LetBinding"))])
      )
    , 3308
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([68])
        , char-class([101])
        , char-class([102])
        , char-class([105])
        , char-class([110])
        , char-class([105])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$Definition")
      , no-attrs()
      )
    , 3307
    )
  , label(
      prod(
        [cf(iter-sep(sort("ClassTypeDef"), lit("and")))]
      , cf(iter-star-sep(sort("ClassTypeDef"), lit("and")))
      , no-attrs()
      )
    , 3306
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("Pattern"), lit(",")))
      , no-attrs()
      )
    , 3305
    )
  , label(
      prod(
        [lex(sort("RegularChar"))]
      , cf(sort("RegularChar"))
      , no-attrs()
      )
    , 3304
    )
  , label(
      prod(
        [lex(alt(lit("&"), lit("&&")))]
      , cf(alt(lit("&"), lit("&&")))
      , no-attrs()
      )
    , 3303
    )
  , label(
      prod(
        [ char-class([39])
        , lex(alt(sort("RegularChar"), sort("EscapeSequence")))
        , char-class([39])
        ]
      , lex(sort("CharLiteral"))
      , no-attrs()
      )
    , 3302
    )
  , label(
      prod(
        [char-class([92]), char-class([32])]
      , lex(sort("StringChar"))
      , no-attrs()
      )
    , 3301
    )
  , label(
      prod(
        [cf(iter-sep(sort("ModConstraint"), lit("and")))]
      , cf(iter-star-sep(sort("ModConstraint"), lit("and")))
      , no-attrs()
      )
    , 3300
    )
  , label(
      prod(
        [ char-class([92])
        , char-class([range(48, 57)])
        , char-class([range(48, 57)])
        , char-class([range(48, 57)])
        ]
      , lex(
          seq(
            char-class([92])
          , [ char-class([range(48, 57)])
            , char-class([range(48, 57)])
            , char-class([range(48, 57)])
            ]
          )
        )
      , no-attrs()
      )
    , 3299
    )
  , label(
      prod(
        []
      , lex(iter-star(char-class([range(48, 55), 95])))
      , no-attrs()
      )
    , 3298
    )
  , label(
      prod(
        [cf(iter(sort("ClassFieldSpec")))]
      , cf(iter-star(sort("ClassFieldSpec")))
      , no-attrs()
      )
    , 3297
    )
  , label(
      prod(
        [lit("$PackageType")]
      , cf(sort("PackageType"))
      , attrs([term(cons("PackageType-Plhdr")), term(placeholder())])
      )
    , 3296
    )
  , label(
      prod(
        [char-class([114]), char-class([101]), char-class([99])]
      , lit("rec")
      , no-attrs()
      )
    , 3295
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("ClassExpr"))
        ]
      , cf(sort("ClassExpr"))
      , attrs([term(cons("LetClass"))])
      )
    , 3294
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([69])
        , char-class([120])
        , char-class([112])
        , char-class([114])
        , char-class([76])
        , char-class([105])
        , char-class([115])
        , char-class([116])
        ]
      , lit("$OptTypeExprList")
      , no-attrs()
      )
    , 3293
    )
  , label(
      prod(
        [ cf(iter-sep(sort("PackageConstraint"), lit("and")))
        , cf(opt(layout()))
        , lit("and")
        , cf(opt(layout()))
        , cf(sort("PackageConstraint"))
        ]
      , cf(iter-sep(sort("PackageConstraint"), lit("and")))
      , no-attrs()
      )
    , 3292
    )
  , label(
      prod(
        [char-class([102]), char-class([117]), char-class([110])]
      , lit("fun")
      , no-attrs()
      )
    , 3291
    )
  , label(
      prod(
        [lit("end")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3290
    )
  , label(
      prod([char-class([58])], lit(":"), no-attrs())
    , 3289
    )
  , label(
      prod(
        [lit("include")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3288
    )
  , label(
      prod(
        [lit("when")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3287
    )
  , label(
      prod(
        [lit("$QuoteIdent")]
      , cf(sort("QuoteIdent"))
      , attrs([term(cons("QuoteIdent-Plhdr")), term(placeholder())])
      )
    , 3286
    )
  , label(
      prod(
        [ cf(sort("ClassExpr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("ClassExpr"))
      , attrs([term(cons("ClassArgs")), term(nlm())])
      )
    , 3285
    )
  , label(
      prod(
        [lit("then")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3284
    )
  , label(
      prod(
        [lit("~"), lex(sort("LowerCaseIdent")), lit(":")]
      , lex(sort("LabelColon"))
      , no-attrs()
      )
    , 3283
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("*")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit("*")))
        ]
      , cf(sort("TypeExpr"))
      , attrs(
          [term(cons("Star")), term(non-assoc()), term(nlm())]
        )
      )
    , 3282
    )
  , label(
      prod(
        [lit("val")]
      , cf(sort("Val"))
      , attrs([term(cons("Val1"))])
      )
    , 3281
    )
  , label(
      prod(
        [lit("lxor")]
      , lex(
          alt(
            lit("lsl")
          , alt(
              lit("lsr")
            , alt(
                lit("asr")
              , alt(
                  lit("mod")
                , alt(lit("land"), alt(lit("lor"), lit("lxor")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3280
    )
  , label(
      prod(
        [lit("method")]
      , cf(sort("Method"))
      , attrs([term(cons("Method1"))])
      )
    , 3279
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([73])
        , char-class([110])
        , char-class([102])
        , char-class([105])
        , char-class([120])
        , char-class([83])
        , char-class([121])
        , char-class([109])
        , char-class([98])
        , char-class([111])
        , char-class([108])
        , char-class([50])
        ]
      , lit("$InfixSymbol2")
      , no-attrs()
      )
    , 3278
    )
  , label(
      prod(
        [lit("$TypeParams")]
      , cf(sort("TypeParams"))
      , attrs([term(cons("TypeParams-Plhdr")), term(placeholder())])
      )
    , 3277
    )
  , label(
      prod(
        [sort("<START>"), char-class([256])]
      , sort("<Start>")
      , no-attrs()
      )
    , 3276
    )
  , label(
      prod(
        [char-class([62]), char-class([125])]
      , lit(">}")
      , no-attrs()
      )
    , 3275
    )
  , label(
      prod(
        [cf(sort("ClassFieldSpec"))]
      , cf(iter(sort("ClassFieldSpec")))
      , no-attrs()
      )
    , 3274
    )
  , label(
      prod([char-class([124])], lit("|"), no-attrs())
    , 3273
    )
  , label(
      prod(
        [lex(iter(sort("OperatorChar"))), lex(sort("OperatorChar"))]
      , lex(iter(sort("OperatorChar")))
      , no-attrs()
      )
    , 3272
    )
  , label(
      prod(
        [lex(iter(sort("StringChar"))), lex(sort("StringChar"))]
      , lex(iter(sort("StringChar")))
      , no-attrs()
      )
    , 3271
    )
  , label(
      prod(
        [lit("<-")]
      , lex(sort("InfixSymbol5"))
      , attrs([reject()])
      )
    , 3270
    )
  , label(
      prod(
        [ char-class([111])
        , char-class([98])
        , char-class([106])
        , char-class([101])
        , char-class([99])
        , char-class([116])
        ]
      , lit("object")
      , no-attrs()
      )
    , 3269
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("FieldOrFieldEqPattern"), lit(";")))
      , no-attrs()
      )
    , 3268
    )
  , label(
      prod(
        [cf(sort("Label"))]
      , cf(sort("Arg"))
      , attrs([term(cons("Label"))])
      )
    , 3267
    )
  , label(
      prod([], cf(opt(sort("Virtual"))), no-attrs())
    , 3266
    )
  , label(
      prod(
        [ char-class([range(48, 57)])
        , lex(iter-star(char-class([range(48, 57), 95])))
        ]
      , lex(sort("PositiveInt"))
      , no-attrs()
      )
    , 3265
    )
  , label(
      prod(
        [cf(iter-sep(sort("TagSpec"), lit("|")))]
      , cf(iter-star-sep(sort("TagSpec"), lit("|")))
      , no-attrs()
      )
    , 3264
    )
  , label(
      prod(
        [char-class([42]), char-class([41])]
      , lit("*)")
      , no-attrs()
      )
    , 3263
    )
  , label(
      prod(
        [ lex(
            alt(
              lit("lsl")
            , alt(lit("lsr"), alt(lit("asr"), lit("**")))
            )
          )
        ]
      , cf(
          alt(
            lit("lsl")
          , alt(lit("lsr"), alt(lit("asr"), lit("**")))
          )
        )
      , no-attrs()
      )
    , 3262
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternArray2"))])
      )
    , 3261
    )
  , label(
      prod(
        [ lex(alt(lit("0x"), lit("0X")))
        , char-class(
            [range(48, 57), range(65, 70), range(97, 102)]
          )
        , lex(
            iter-star(
              char-class(
                [ range(48, 57)
                , range(65, 70)
                , 95
                , range(97, 102)
                ]
              )
            )
          )
        ]
      , lex(sort("PositiveInt"))
      , no-attrs()
      )
    , 3260
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        ]
      , lit("$ModTypeName")
      , no-attrs()
      )
    , 3259
    )
  , label(
      prod(
        [cf(sort("ExceptionDefinition"))]
      , cf(sort("Definition"))
      , attrs([term(cons("ExceptionDef"))])
      )
    , 3258
    )
  , label(
      prod(
        [cf(sort("ModulePath"))]
      , cf(sort("ModuleExpr"))
      , attrs([term(cons("ModExprModPath"))])
      )
    , 3257
    )
  , label(
      prod(
        [lit("private")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3256
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([68])
        , char-class([111])
        , char-class([117])
        , char-class([98])
        , char-class([108])
        , char-class([101])
        , char-class([83])
        , char-class([101])
        , char-class([109])
        , char-class([105])
        , char-class([67])
        , char-class([111])
        , char-class([108])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$DoubleSemiColon")
      , no-attrs()
      )
    , 3255
    )
  , label(
      prod(
        [lit("$OptTypeParameters")]
      , cf(sort("OptTypeParameters"))
      , attrs([term(cons("OptTypeParameters-Plhdr")), term(placeholder())])
      )
    , 3254
    )
  , label(
      prod(
        [lit("$NegativeInt")]
      , cf(sort("NegativeInt"))
      , attrs([term(cons("NegativeInt-Plhdr")), term(placeholder())])
      )
    , 3253
    )
  , label(
      prod(
        [lit("%")]
      , lex(
          alt(
            lit("mod")
          , alt(
              lit("land")
            , alt(
                lit("lor")
              , alt(
                  lit("lxor")
                , alt(lit("/"), alt(lit("%"), lit("*")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3252
    )
  , label(
      prod(
        [cf(iter-sep(sort("QuoteIdent"), lit(",")))]
      , cf(iter-star-sep(sort("QuoteIdent"), lit(",")))
      , no-attrs()
      )
    , 3251
    )
  , label(
      prod([], cf(iter-star(sort("TypeConstraint"))), no-attrs())
    , 3250
    )
  , label(
      prod(
        [ cf(iter(sort("QuoteIdent")))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("PolyTypeExpr"))
      , attrs([term(cons("Polytype2"))])
      )
    , 3249
    )
  , label(
      prod(
        [lit("mutable")]
      , cf(sort("Mutable"))
      , attrs([term(cons("Mutable"))])
      )
    , 3248
    )
  , label(
      prod(
        [lex(sort("PositiveFloat"))]
      , cf(sort("PositiveFloat"))
      , no-attrs()
      )
    , 3247
    )
  , label(
      prod(
        [lex(alt(lit("0b"), lit("0B")))]
      , cf(alt(lit("0b"), lit("0B")))
      , no-attrs()
      )
    , 3246
    )
  , label(
      prod(
        [lit("|")]
      , lex(
          alt(
            lit("=")
          , alt(
              lit("<")
            , alt(
                lit(">")
              , alt(lit("|"), alt(lit("&"), lit("$")))
              )
            )
          )
        )
      , no-attrs()
      )
    , 3245
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Pattern"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("LazyPattern"))])
      )
    , 3244
    )
  , label(
      prod(
        [ char-class([102])
        , char-class([117])
        , char-class([110])
        , char-class([99])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        ]
      , lit("function")
      , no-attrs()
      )
    , 3243
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("PackageType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPackage"))])
      )
    , 3242
    )
  , label(
      prod(
        [lex(alt(lit("0x"), lit("0X")))]
      , cf(alt(lit("0x"), lit("0X")))
      , no-attrs()
      )
    , 3241
    )
  , label(
      prod(
        [lit("$ClassExpr")]
      , cf(sort("ClassExpr"))
      , attrs([term(placeholder()), term(cons("ClassExpr-Plhdr"))])
      )
    , 3240
    )
  , label(
      prod(
        [lit("of")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3239
    )
  , label(
      prod(
        [cf(sort("Definition"))]
      , cf(sort("DefinitionOrExprList"))
      , attrs([term(cons("Def2"))])
      )
    , 3238
    )
  , label(
      prod(
        [lex(sort("Operations"))]
      , cf(sort("Operations"))
      , no-attrs()
      )
    , 3237
    )
  , label(
      prod(
        [lit("$DoubleSemiColon")]
      , cf(sort("DoubleSemiColon"))
      , attrs([term(cons("DoubleSemiColon-Plhdr")), term(placeholder())])
      )
    , 3236
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("|")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Pattern"))
      , attrs([assoc(left()), term(cons("PatternBar"))])
      )
    , 3235
    )
  , label(
      prod(
        [cf(sort("AssignInstVarName"))]
      , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
      , no-attrs()
      )
    , 3234
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 3233
    )
  , label(
      prod(
        [lex(sort("CapitalizedIdent"))]
      , cf(sort("CapitalizedIdent"))
      , no-attrs()
      )
    , 3232
    )
  , label(
      prod(
        [cf(iter(sort("TypeConstrName")))]
      , cf(iter-star(sort("TypeConstrName")))
      , no-attrs()
      )
    , 3231
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("ModuleType"))
      , attrs([term(bracket())])
      )
    , 3230
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 3229
    )
  , label(
      prod(
        [lit("method")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3228
    )
  , label(
      prod(
        [ lex(iter(char-class([range(48, 57), 95])))
        , char-class([range(48, 57), 95])
        ]
      , lex(iter(char-class([range(48, 57), 95])))
      , no-attrs()
      )
    , 3227
    )
  , label(
      prod(
        [cf(opt(sort("Variance"))), cf(opt(layout())), lit("_")]
      , cf(sort("TypeParam"))
      , attrs([term(cons("TypeParam2"))])
      )
    , 3226
    )
  , label(
      prod(
        [ char-class([118])
        , char-class([97])
        , char-class([108])
        , char-class([33])
        ]
      , lit("val!")
      , no-attrs()
      )
    , 3225
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([80])
        , char-class([111])
        , char-class([115])
        , char-class([105])
        , char-class([116])
        , char-class([105])
        , char-class([118])
        , char-class([101])
        , char-class([73])
        , char-class([110])
        , char-class([116])
        ]
      , lit("$PositiveInt")
      , no-attrs()
      )
    , 3224
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("Pattern"), lit(";")))
      , no-attrs()
      )
    , 3223
    )
  , label(
      prod(
        [lit("$Definition")]
      , cf(sort("Definition"))
      , attrs([term(cons("Definition-Plhdr")), term(placeholder())])
      )
    , 3222
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([80])
        , char-class([97])
        , char-class([114])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        , char-class([116])
        , char-class([101])
        , char-class([114])
        , char-class([115])
        ]
      , lit("$OptTypeParameters")
      , no-attrs()
      )
    , 3221
    )
  , label(
      prod([char-class([43])], lit("+"), no-attrs())
    , 3220
    )
  , label(
      prod(
        [ lex(
            iter(
              alt(
                lit("!")
              , alt(
                  lit("$")
                , alt(
                    lit("%")
                  , alt(
                      lit("&")
                    , alt(
                        lit("*")
                      , alt(
                          lit("+")
                        , alt(
                            lit("-")
                          , alt(
                              lit(".")
                            , alt(
                                lit("/")
                              , alt(
                                  lit(":")
                                , alt(
                                    lit("<")
                                  , alt(
                                      lit("=")
                                    , alt(
                                        lit(">")
                                      , alt(
                                          lit("?")
                                        , alt(
                                            lit("@")
                                          , alt(lit("|"), alt(lit("~"), lit("^")))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        , lex(
            alt(
              lit("!")
            , alt(
                lit("$")
              , alt(
                  lit("%")
                , alt(
                    lit("&")
                  , alt(
                      lit("*")
                    , alt(
                        lit("+")
                      , alt(
                          lit("-")
                        , alt(
                            lit(".")
                          , alt(
                              lit("/")
                            , alt(
                                lit(":")
                              , alt(
                                  lit("<")
                                , alt(
                                    lit("=")
                                  , alt(
                                      lit(">")
                                    , alt(
                                        lit("?")
                                      , alt(
                                          lit("@")
                                        , alt(lit("|"), alt(lit("~"), lit("^")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        ]
      , lex(
          iter(
            alt(
              lit("!")
            , alt(
                lit("$")
              , alt(
                  lit("%")
                , alt(
                    lit("&")
                  , alt(
                      lit("*")
                    , alt(
                        lit("+")
                      , alt(
                          lit("-")
                        , alt(
                            lit(".")
                          , alt(
                              lit("/")
                            , alt(
                                lit(":")
                              , alt(
                                  lit("<")
                                , alt(
                                    lit("=")
                                  , alt(
                                      lit(">")
                                    , alt(
                                        lit("?")
                                      , alt(
                                          lit("@")
                                        , alt(lit("|"), alt(lit("~"), lit("^")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3219
    )
  , label(
      prod(
        [lit("$InfixSymbol7")]
      , cf(sort("InfixSymbol7"))
      , attrs([term(cons("InfixSymbol7-Plhdr")), term(placeholder())])
      )
    , 3218
    )
  , label(
      prod(
        [ lit("val")
        , cf(opt(layout()))
        , cf(sort("ValueName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("Specification"))
      , attrs([term(cons("SpecificationVal"))])
      )
    , 3217
    )
  , label(
      prod(
        [lit("do")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3216
    )
  , label(
      prod(
        [cf(iter-sep(sort("Expr"), lit(",")))]
      , cf(iter-star-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 3215
    )
  , label(
      prod(
        [lit("class")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3214
    )
  , label(
      prod(
        [lit("type")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3213
    )
  , label(
      prod(
        [cf(sort("LabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("LabelColon"))])
      )
    , 3212
    )
  , label(
      prod(
        [ lex(opt(lit("-")))
        , lex(alt(lit("0o"), lit("0O")))
        , char-class([range(48, 55)])
        , lex(iter-star(char-class([range(48, 55), 95])))
        ]
      , lex(sort("IntegerLiteral"))
      , no-attrs()
      )
    , 3211
    )
  , label(
      prod(
        [cf(sort("ModuleNameTypeParam"))]
      , cf(iter(sort("ModuleNameTypeParam")))
      , no-attrs()
      )
    , 3210
    )
  , label(
      prod(
        [lit("?"), cf(opt(layout())), cf(sort("LabelName"))]
      , cf(sort("Parameter"))
      , attrs([term(cons("Param4"))])
      )
    , 3209
    )
  , label(
      prod(
        [lit("-")]
      , lex(opt(lit("-")))
      , no-attrs()
      )
    , 3208
    )
  , label(
      prod(
        [cf(sort("TypeDef"))]
      , cf(iter-sep(sort("TypeDef"), lit("and")))
      , no-attrs()
      )
    , 3207
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([70])
        , char-class([105])
        , char-class([101])
        , char-class([108])
        , char-class([100])
        , char-class([68])
        , char-class([101])
        , char-class([99])
        , char-class([108])
        ]
      , lit("$FieldDecl")
      , no-attrs()
      )
    , 3206
    )
  , label(
      prod(
        [cf(sort("ClassField"))]
      , cf(iter(sort("ClassField")))
      , no-attrs()
      )
    , 3205
    )
  , label(
      prod([char-class([60])], lit("<"), no-attrs())
    , 3204
    )
  , label(
      prod(
        [lit("$ColonModuleTypeOpt")]
      , cf(sort("ColonModuleTypeOpt"))
      , attrs([term(cons("ColonModuleTypeOpt-Plhdr")), term(placeholder())])
      )
    , 3203
    )
  , label(
      prod(
        [lit("with")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3202
    )
  , label(
      prod(
        [lit("private"), cf(opt(layout())), cf(sort("TypeExpr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPrivate"))])
      )
    , 3201
    )
  , label(
      prod([char-class([126])], lit("~"), no-attrs())
    , 3200
    )
  , label(
      prod(
        [cf(sort("Ident"))]
      , cf(sort("ModTypeName"))
      , no-attrs()
      )
    , 3199
    )
  , label(
      prod(
        [char-class([109]), char-class([111]), char-class([100])]
      , lit("mod")
      , no-attrs()
      )
    , 3198
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("TypeDef"), lit("and")))
      , no-attrs()
      )
    , 3197
    )
  , label(
      prod(
        [lit("="), cf(opt(layout())), cf(sort("TypeExpr"))]
      , cf(sort("TypeEquation"))
      , attrs([term(cons("TypeEquation"))])
      )
    , 3196
    )
  , label(
      prod(
        [lit("inherit"), cf(opt(layout())), cf(sort("ClassType"))]
      , cf(sort("ClassFieldSpec"))
      , attrs([term(cons("Inherit"))])
      )
    , 3195
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash3"))])
      )
    , 3194
    )
  , label(
      prod(
        [lit(")")]
      , lex(sort("InfixSymbol1"))
      , attrs([reject()])
      )
    , 3193
    )
  , label(
      prod(
        [ cf(sort("ConstrName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit("*")))
        ]
      , cf(sort("ConstrDecl"))
      , attrs([term(cons("ConstrDecl2")), term(nlm())])
      )
    , 3192
    )
  , label(
      prod(
        [lit("function")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3191
    )
  , label(
      prod(
        [lit("class")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3190
    )
  , label(
      prod(
        [lit("$OperatorCharList")]
      , cf(sort("OperatorCharList"))
      , attrs([term(placeholder()), term(cons("OperatorCharList-Plhdr"))])
      )
    , 3189
    )
  , label(
      prod(
        [cf(iter(sort("ModuleNameTypeParam")))]
      , cf(iter-star(sort("ModuleNameTypeParam")))
      , no-attrs()
      )
    , 3188
    )
  , label(
      prod([], cf(iter-star(sort("ModuleItems"))), no-attrs())
    , 3187
    )
  , label(
      prod(
        [lit("for")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3186
    )
  , label(
      prod(
        [ char-class([119])
        , char-class([105])
        , char-class([116])
        , char-class([104])
        ]
      , lit("with")
      , no-attrs()
      )
    , 3185
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 3184
    )
  , label(
      prod(
        [lit("$TypeRepresentation")]
      , cf(sort("TypeRepresentation"))
      , attrs([term(cons("TypeRepresentation-Plhdr")), term(placeholder())])
      )
    , 3183
    )
  , label(
      prod(
        [lit("0O")]
      , lex(alt(lit("0o"), lit("0O")))
      , no-attrs()
      )
    , 3182
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        ]
      , lit("$ModuleName")
      , no-attrs()
      )
    , 3181
    )
  , label(
      prod([lit("-")], lex(sort("UnMinus")), no-attrs())
    , 3180
    )
  , label(
      prod(
        [lit("$InfixSymbol5")]
      , cf(sort("InfixSymbol5"))
      , attrs([term(placeholder()), term(cons("InfixSymbol5-Plhdr"))])
      )
    , 3179
    )
  , label(
      prod(
        [lit("false")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3178
    )
  , label(
      prod(
        [lit(";"), cf(opt(layout())), lit("..")]
      , cf(sort("SemiColonDotsOpt"))
      , no-attrs()
      )
    , 3177
    )
  , label(
      prod(
        [cf(sort("StringLiteral"))]
      , cf(iter(sort("StringLiteral")))
      , no-attrs()
      )
    , 3176
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([69])
        , char-class([113])
        , char-class([117])
        , char-class([97])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$TypeEquation")
      , no-attrs()
      )
    , 3175
    )
  , label(
      prod(
        [ lex(
            alt(
              lit("!")
            , alt(
                lit("$")
              , alt(
                  lit("%")
                , alt(
                    lit("&")
                  , alt(
                      lit("*")
                    , alt(
                        lit("+")
                      , alt(
                          lit("-")
                        , alt(
                            lit(".")
                          , alt(
                              lit("/")
                            , alt(
                                lit(":")
                              , alt(
                                  lit("<")
                                , alt(
                                    lit("=")
                                  , alt(
                                      lit(">")
                                    , alt(
                                        lit("?")
                                      , alt(
                                          lit("@")
                                        , alt(lit("|"), alt(lit("~"), lit("^")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        ]
      , lex(sort("OperatorChar"))
      , no-attrs()
      )
    , 3174
    )
  , label(
      prod(
        [lit("$FieldName")]
      , cf(sort("FieldName"))
      , attrs([term(cons("FieldName-Plhdr")), term(placeholder())])
      )
    , 3173
    )
  , label(
      prod(
        [cf(iter-sep(sort("AssignInstVarName"), lit(";")))]
      , cf(iter-star-sep(sort("AssignInstVarName"), lit(";")))
      , no-attrs()
      )
    , 3172
    )
  , label(
      prod(
        [lit("'"), cf(opt(layout())), cf(sort("Ident"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("Tag"))])
      )
    , 3171
    )
  , label(
      prod(
        [lit("@")]
      , lex(alt(lit("@"), lit("^")))
      , no-attrs()
      )
    , 3170
    )
  , label(
      prod(
        [cf(sort("TypeDefinition"))]
      , cf(sort("Specification"))
      , attrs([term(cons("TypeDef"))])
      )
    , 3169
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        , char-class([76])
        , char-class([97])
        , char-class([98])
        , char-class([101])
        , char-class([108])
        ]
      , lit("$OptLabel")
      , no-attrs()
      )
    , 3168
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([80])
        , char-class([97])
        , char-class([114])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        , char-class([116])
        , char-class([101])
        , char-class([114])
        , char-class([115])
        ]
      , lit("$TypeParameters")
      , no-attrs()
      )
    , 3167
    )
  , label(
      prod(
        [cf(sort("TypeConstrName"))]
      , cf(iter(sort("TypeConstrName")))
      , no-attrs()
      )
    , 3166
    )
  , label(
      prod(
        [lex(sort("OperatorCharList"))]
      , cf(sort("OperatorCharList"))
      , no-attrs()
      )
    , 3165
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([68])
        , char-class([101])
        , char-class([102])
        , char-class([105])
        , char-class([110])
        , char-class([105])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$ClassDefinition")
      , no-attrs()
      )
    , 3164
    )
  , label(
      prod(
        [lit("$ColonPackageTypeOpt")]
      , cf(sort("ColonPackageTypeOpt"))
      , attrs([term(cons("ColonPackageTypeOpt-Plhdr")), term(placeholder())])
      )
    , 3163
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 3162
    )
  , label(
      prod(
        []
      , lex(iter-star(char-class([range(48, 57), 95])))
      , no-attrs()
      )
    , 3161
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("TypeExpr"), lit("*")))
      , no-attrs()
      )
    , 3160
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 3159
    )
  , label(
      prod(
        [ char-class([115])
        , char-class([116])
        , char-class([114])
        , char-class([117])
        , char-class([99])
        , char-class([116])
        ]
      , lit("struct")
      , no-attrs()
      )
    , 3158
    )
  , label(
      prod(
        [lex(opt(lit("-")))]
      , cf(opt(lit("-")))
      , no-attrs()
      )
    , 3157
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([80])
        , char-class([97])
        , char-class([116])
        , char-class([104])
        ]
      , lit("$ModulePath")
      , no-attrs()
      )
    , 3156
    )
  , label(
      prod(
        [ cf(iter-sep(sort("QuoteIdent"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("QuoteIdent"))
        ]
      , cf(iter-sep(sort("QuoteIdent"), lit(",")))
      , no-attrs()
      )
    , 3155
    )
  , label(
      prod(
        []
      , lex(
          iter-star(
            char-class(
              [ 39
              , range(48, 57)
              , range(65, 90)
              , 95
              , range(97, 122)
              ]
            )
          )
        )
      , no-attrs()
      )
    , 3154
    )
  , label(
      prod(
        [lit("$ClassBody")]
      , cf(sort("ClassBody"))
      , attrs([term(cons("ClassBody-Plhdr")), term(placeholder())])
      )
    , 3153
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("TagSpecFull"), lit("|")))
      , no-attrs()
      )
    , 3152
    )
  , label(
      prod([lex(sort("Comment"))], lex(layout()), no-attrs())
    , 3151
    )
  , label(
      prod(
        [char-class([101]), char-class([110]), char-class([100])]
      , lit("end")
      , no-attrs()
      )
    , 3150
    )
  , label(
      prod(
        [cf(sort("ModulePath")), cf(opt(layout())), lit(".")]
      , cf(sort("DotModulePathOpt"))
      , attrs([term(cons("ModulePath"))])
      )
    , 3149
    )
  , label(
      prod([char-class([94])], lit("^"), no-attrs())
    , 3148
    )
  , label(
      prod(
        [lit("|")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3147
    )
  , label(
      prod(
        [lit(":")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3146
    )
  , label(
      prod(
        [lit("||")]
      , lex(alt(lit("||"), lit("or")))
      , no-attrs()
      )
    , 3145
    )
  , label(
      prod(
        [lit("do")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3144
    )
  , label(
      prod(
        [ lit("module")
        , cf(opt(layout()))
        , lit("type")
        , cf(opt(layout()))
        , lit("of")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        ]
      , cf(sort("ModuleType"))
      , attrs([term(cons("ModuleTypeOf"))])
      )
    , 3143
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("as")
        , cf(opt(layout()))
        , lit("'")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprAsId"))])
      )
    , 3142
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([68])
        , char-class([101])
        , char-class([102])
        ]
      , lit("$TypeDef")
      , no-attrs()
      )
    , 3141
    )
  , label(
      prod(
        [lit("$DotModulePathOpt")]
      , cf(sort("DotModulePathOpt"))
      , attrs([term(cons("DotModulePathOpt-Plhdr")), term(placeholder())])
      )
    , 3140
    )
  , label(
      prod(
        [ lex(
            alt(
              lit("lsl")
            , alt(
                lit("lsr")
              , alt(
                  lit("asr")
                , alt(
                    lit("mod")
                  , alt(lit("land"), alt(lit("lor"), lit("lxor")))
                  )
                )
              )
            )
          )
        ]
      , cf(
          alt(
            lit("lsl")
          , alt(
              lit("lsr")
            , alt(
                lit("asr")
              , alt(
                  lit("mod")
                , alt(lit("land"), alt(lit("lor"), lit("lxor")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3139
    )
  , label(
      prod(
        [lit("$ModConstraint")]
      , cf(sort("ModConstraint"))
      , attrs([term(placeholder()), term(cons("ModConstraint-Plhdr"))])
      )
    , 3138
    )
  , label(
      prod(
        [cf(sort("ModTypePath"))]
      , cf(sort("ModuleType"))
      , attrs([term(cons("ModuleTypePath"))])
      )
    , 3137
    )
  , label(
      prod(
        [lit(":"), cf(opt(layout())), cf(sort("PackageType"))]
      , cf(sort("ColonPackageTypeOpt"))
      , attrs([term(cons("PackageType"))])
      )
    , 3136
    )
  , label(
      prod(
        [lit("$LetBinding")]
      , cf(sort("LetBinding"))
      , attrs([term(cons("LetBinding-Plhdr")), term(placeholder())])
      )
    , 3135
    )
  , label(
      prod(
        [lit("$Arg")]
      , cf(sort("Arg"))
      , attrs([term(placeholder()), term(cons("Arg-Plhdr"))])
      )
    , 3134
    )
  , label(
      prod(
        [lit("inherit!")]
      , cf(sort("Inherit"))
      , attrs([term(cons("Inherit2"))])
      )
    , 3133
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([111])
        , char-class([108])
        , char-class([111])
        , char-class([110])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([69])
        , char-class([120])
        , char-class([112])
        , char-class([114])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        ]
      , lit("$ColonTypeExprOpt")
      , no-attrs()
      )
    , 3132
    )
  , label(
      prod(
        [ lit("fun")
        , cf(opt(layout()))
        , cf(iter(sort("Parameter")))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("ClassExpr"))
        ]
      , cf(sort("ClassExpr"))
      , attrs([term(cons("ClassFun"))])
      )
    , 3131
    )
  , label(
      prod(
        [char-class([105]), char-class([110])]
      , lit("in")
      , no-attrs()
      )
    , 3130
    )
  , label(
      prod(
        [cf(iter-sep(sort("TypeDef"), lit("and")))]
      , cf(iter-star-sep(sort("TypeDef"), lit("and")))
      , no-attrs()
      )
    , 3129
    )
  , label(
      prod(
        [lit("val")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3128
    )
  , label(
      prod(
        [cf(iter(sort("Parameter")))]
      , cf(iter-star(sort("Parameter")))
      , no-attrs()
      )
    , 3127
    )
  , label(
      prod(
        [lit("lxor")]
      , lex(
          alt(
            lit("mod")
          , alt(
              lit("land")
            , alt(
                lit("lor")
              , alt(
                  lit("lxor")
                , alt(lit("/"), alt(lit("%"), lit("*")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3126
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([111])
        , char-class([110])
        , char-class([115])
        , char-class([116])
        , char-class([97])
        , char-class([110])
        , char-class([116])
        ]
      , lit("$Constant")
      , no-attrs()
      )
    , 3125
    )
  , label(
      prod(
        [lit("=")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3124
    )
  , label(
      prod(
        [cf(sort("PositiveFloat"))]
      , cf(sort("Constant"))
      , attrs([term(cons("FloatLiteral"))])
      )
    , 3123
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(iter-star-sep(sort("TagSpec"), lit("|")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("PolymorphicVariantType"))
      , attrs([term(cons("PolymorphicVariantType1"))])
      )
    , 3122
    )
  , label(
      prod(
        [lit("downto")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3121
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , cf(sort("ColonTypeExprOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Parameter"))
      , attrs([term(cons("Param5"))])
      )
    , 3120
    )
  , label(
      prod([char-class([45])], lit("-"), no-attrs())
    , 3119
    )
  , label(
      prod(
        [cf(sort("PositiveInt"))]
      , cf(sort("Constant"))
      , attrs([term(cons("PosInt"))])
      )
    , 3118
    )
  , label(
      prod(
        [lit("method")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3117
    )
  , label(prod([], cf(sort("DoubleSemiColonOpt")), no-attrs()), 3116)
  , label(
      prod(
        [ lit("~")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Parameter"))
      , attrs([term(cons("Param2"))])
      )
    , 3115
    )
  , label(
      prod(
        [ cf(iter(sort("QuoteIdent")))
        , cf(opt(layout()))
        , cf(sort("QuoteIdent"))
        ]
      , cf(iter(sort("QuoteIdent")))
      , no-attrs()
      )
    , 3114
    )
  , label(
      prod(
        [cf(sort("ExtendedModulePathDotOpt")), cf(opt(layout())), cf(sort("ModTypeName"))]
      , cf(sort("ModTypePath"))
      , attrs([term(cons("ModTypePath"))])
      )
    , 3113
    )
  , label(
      prod(
        [ char-class([range(65, 90)])
        , lex(
            iter-star(
              char-class(
                [ 39
                , range(48, 57)
                , range(65, 90)
                , 95
                , range(97, 122)
                ]
              )
            )
          )
        ]
      , lex(sort("CapitalizedIdent"))
      , no-attrs()
      )
    , 3112
    )
  , label(
      prod(
        [cf(sort("LowerCaseIdent"))]
      , cf(sort("InstVarName"))
      , no-attrs()
      )
    , 3111
    )
  , label(
      prod(
        [cf(sort("Parameter"))]
      , cf(iter(sort("Parameter")))
      , no-attrs()
      )
    , 3110
    )
  , label(
      prod(
        [lit("virtual")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3109
    )
  , label(
      prod(
        [lit("functor")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3108
    )
  , label(
      prod(
        [lit("~")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3107
    )
  , label(
      prod(
        [lit("$ColonClassTypeOpt")]
      , cf(sort("ColonClassTypeOpt"))
      , attrs([term(cons("ColonClassTypeOpt-Plhdr")), term(placeholder())])
      )
    , 3106
    )
  , label(
      prod(
        [ char-class([102])
        , char-class([97])
        , char-class([108])
        , char-class([115])
        , char-class([101])
        ]
      , lit("false")
      , no-attrs()
      )
    , 3105
    )
  , label(
      prod(
        [cf(sort("Ident"))]
      , cf(sort("TagName"))
      , no-attrs()
      )
    , 3104
    )
  , label(
      prod(
        [lit("$OptLabelColon")]
      , cf(sort("OptLabelColon"))
      , attrs([term(placeholder()), term(cons("OptLabelColon-Plhdr"))])
      )
    , 3103
    )
  , label(
      prod(
        [lit("<")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3102
    )
  , label(
      prod([char-class([62])], lit(">"), no-attrs())
    , 3101
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([104])
        , char-class([97])
        , char-class([114])
        , char-class([76])
        , char-class([105])
        , char-class([116])
        , char-class([101])
        , char-class([114])
        , char-class([97])
        , char-class([108])
        ]
      , lit("$CharLiteral")
      , no-attrs()
      )
    , 3100
    )
  , label(
      prod(
        [lit("then")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3099
    )
  , label(
      prod(
        [lit("$AndModuleTypeModuleExpr")]
      , cf(sort("AndModuleTypeModuleExpr"))
      , attrs([term(cons("AndModuleTypeModuleExpr-Plhdr")), term(placeholder())])
      )
    , 3098
    )
  , label(
      prod(
        [ cf(opt(sort("Virtual")))
        , cf(opt(layout()))
        , cf(sort("OptTypeParameters"))
        , cf(opt(layout()))
        , cf(sort("ClassName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("ClassType"))
        ]
      , cf(sort("ClassSpec"))
      , attrs([term(cons("ClassSpec"))])
      )
    , 3097
    )
  , label(
      prod(
        [cf(sort("Definition"))]
      , cf(sort("DefinitionOrExpr"))
      , no-attrs()
      )
    , 3096
    )
  , label(
      prod(
        [lex(sort("Label"))]
      , cf(sort("Label"))
      , no-attrs()
      )
    , 3095
    )
  , label(
      prod([], cf(iter-star(sort("ModuleNameDot"))), no-attrs())
    , 3094
    )
  , label(
      prod(
        [lex(sort("RegularCharStr"))]
      , lex(sort("StringChar"))
      , no-attrs()
      )
    , 3093
    )
  , label(
      prod(
        [lex(sort("InfixSymbol8"))]
      , cf(sort("InfixSymbol8"))
      , no-attrs()
      )
    , 3092
    )
  , label(
      prod(
        [lit("inherit")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3091
    )
  , label(
      prod(
        [cf(iter(sort("InnerPatternMatching")))]
      , cf(iter-star(sort("InnerPatternMatching")))
      , no-attrs()
      )
    , 3090
    )
  , label(
      prod(
        [ lit("`")
        , cf(opt(layout()))
        , cf(sort("TagName"))
        , cf(opt(layout()))
        , lit("of")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TagSpec"))
      , attrs([term(cons("TagSpec1"))])
      )
    , 3089
    )
  , label(
      prod(
        [ cf(sort("ConstrName"))
        , cf(opt(layout()))
        , lit("of")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit("*")))
        ]
      , cf(sort("ConstrDecl"))
      , attrs([term(cons("ConstrDecl1")), term(nlm())])
      )
    , 3088
    )
  , label(
      prod(
        [lit("lsl")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3087
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("type")
        , cf(opt(layout()))
        , cf(sort("TypeConstrName"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Parameter"))
      , attrs([term(cons("TypeParam"))])
      )
    , 3086
    )
  , label(
      prod(
        [lit("of")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3085
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("ConstrDecl"), lit("|")))
      , no-attrs()
      )
    , 3084
    )
  , label(
      prod(
        [lit("?")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3083
    )
  , label(
      prod(
        [cf(iter(sort("ClassField")))]
      , cf(iter-star(sort("ClassField")))
      , no-attrs()
      )
    , 3082
    )
  , label(
      prod(
        [ lit("method")
        , cf(opt(layout()))
        , cf(opt(sort("Private")))
        , cf(opt(layout()))
        , lit("virtual")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("PolyTypeExpr"))
        ]
      , cf(sort("ClassField"))
      , attrs([term(cons("Method3"))])
      )
    , 3081
    )
  , label(
      prod(
        [lit("while")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3080
    )
  , label(
      prod([], cf(iter-star(sort("AndModuleTypeModuleExpr"))), no-attrs())
    , 3079
    )
  , label(
      prod(
        [ cf(sort("Field"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("FieldAssign"))
      , attrs([term(cons("FieldAssign"))])
      )
    , 3078
    )
  , label(
      prod(
        [lex(sort("Keyword"))]
      , cf(sort("Keyword"))
      , no-attrs()
      )
    , 3077
    )
  , label(
      prod(
        [lit("$LabelColon")]
      , cf(sort("LabelColon"))
      , attrs([term(cons("LabelColon-Plhdr")), term(placeholder())])
      )
    , 3076
    )
  , label(
      prod(
        [cf(opt(layout())), cf(sort("Start")), cf(opt(layout()))]
      , sort("<START>")
      , no-attrs()
      )
    , 3075
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 3074
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([76])
        , char-class([97])
        , char-class([98])
        , char-class([101])
        , char-class([108])
        , char-class([67])
        , char-class([111])
        , char-class([108])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$LabelColon")
      , no-attrs()
      )
    , 3073
    )
  , label(
      prod(
        [ char-class([range(48, 57)])
        , lex(iter-star(char-class([range(48, 57), 95])))
        , lit(".")
        , lex(iter-star(char-class([range(48, 57), 95])))
        , char-class([69, 101])
        , lex(opt(char-class([43, 45])))
        , char-class([range(48, 57)])
        , lex(iter-star(char-class([range(48, 57), 95])))
        ]
      , lex(sort("PositiveFloat"))
      , no-attrs()
      )
    , 3072
    )
  , label(
      prod(
        [ lit("module")
        , cf(opt(layout()))
        , lit("type")
        , cf(opt(layout()))
        , cf(sort("ModTypeName"))
        ]
      , cf(sort("Specification"))
      , attrs([term(cons("ModuleType1"))])
      )
    , 3071
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 3070
    )
  , label(
      prod(
        [lit("$ExtendedModulePathDotOpt")]
      , cf(sort("ExtendedModulePathDotOpt"))
      , attrs([term(placeholder()), term(cons("ExtendedModulePathDotOpt-Plhdr"))])
      )
    , 3069
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 3068
    )
  , label(
      prod(
        [lit("$CapitalizedIdent")]
      , cf(sort("CapitalizedIdent"))
      , attrs([term(placeholder()), term(cons("CapitalizedIdent-Plhdr"))])
      )
    , 3067
    )
  , label(
      prod(
        [cf(sort("InnerPatternMatching"))]
      , cf(iter(sort("InnerPatternMatching")))
      , no-attrs()
      )
    , 3066
    )
  , label(
      prod(
        [lit("$TopLevel")]
      , cf(sort("TopLevel"))
      , attrs([term(cons("TopLevel-Plhdr")), term(placeholder())])
      )
    , 3065
    )
  , label(
      prod([char-class([96])], lit("`"), no-attrs())
    , 3064
    )
  , label(
      prod(
        [ lex(opt(lit("-")))
        , char-class([range(48, 57)])
        , lex(iter-star(char-class([range(48, 57), 95])))
        , char-class([69, 101])
        , lex(opt(char-class([43, 45])))
        , char-class([range(48, 57)])
        , lex(iter-star(char-class([range(48, 57), 95])))
        ]
      , lex(sort("FloatLiteral"))
      , no-attrs()
      )
    , 3063
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 3062
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , cf(iter-star(sort("ClassField")))
        ]
      , cf(sort("ClassBody"))
      , attrs([term(cons("ClassBody"))])
      )
    , 3061
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([86])
        , char-class([105])
        , char-class([114])
        , char-class([116])
        , char-class([117])
        , char-class([97])
        , char-class([108])
        ]
      , lit("$Virtual")
      , no-attrs()
      )
    , 3060
    )
  , label(
      prod(
        [cf(sort("CapitalizedIdent"))]
      , cf(sort("ModuleName"))
      , no-attrs()
      )
    , 3059
    )
  , label(
      prod(
        [lit(">")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3058
    )
  , label(
      prod(
        [lit("in")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3057
    )
  , label(
      prod(
        [lit("0b")]
      , lex(alt(lit("0b"), lit("0B")))
      , no-attrs()
      )
    , 3056
    )
  , label(
      prod(
        [lit("land")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3055
    )
  , label(
      prod(
        [char-class([33]), char-class([61])]
      , lit("!=")
      , no-attrs()
      )
    , 3054
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 3053
    )
  , label(
      prod([], cf(iter-star(sort("AndTypeExpr"))), no-attrs())
    , 3052
    )
  , label(
      prod(
        [lit("$PolymorphicVariantType")]
      , cf(sort("PolymorphicVariantType"))
      , attrs([term(cons("PolymorphicVariantType-Plhdr")), term(placeholder())])
      )
    , 3051
    )
  , label(
      prod(
        [lit("asr")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3050
    )
  , label(
      prod(
        [lit("method")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3049
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([81])
        , char-class([117])
        , char-class([111])
        , char-class([116])
        , char-class([101])
        , char-class([73])
        , char-class([100])
        , char-class([101])
        , char-class([110])
        , char-class([116])
        ]
      , lit("$QuoteIdent")
      , no-attrs()
      )
    , 3048
    )
  , label(
      prod(
        [char-class([38]), char-class([38])]
      , lit("&&")
      , no-attrs()
      )
    , 3047
    )
  , label(
      prod(
        [ lex(opt(lit("-")))
        , char-class([range(48, 57)])
        , lex(iter-star(char-class([range(48, 57), 95])))
        ]
      , lex(sort("IntegerLiteral"))
      , no-attrs()
      )
    , 3046
    )
  , label(
      prod(
        [lex(sort("NegativeFloat"))]
      , cf(sort("NegativeFloat"))
      , no-attrs()
      )
    , 3045
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("OperatorCharList"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("ValueName"))
      , attrs([term(cons("OperatorChar"))])
      )
    , 3044
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 3043
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 3042
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([83])
        , char-class([112])
        , char-class([101])
        , char-class([99])
        , char-class([105])
        , char-class([102])
        , char-class([105])
        , char-class([99])
        , char-class([97])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        , char-class([83])
        , char-class([101])
        , char-class([109])
        , char-class([105])
        ]
      , lit("$SpecificationSemi")
      , no-attrs()
      )
    , 3041
    )
  , label(
      prod(
        [lex(alt(sort("RegularChar"), sort("EscapeSequence")))]
      , cf(alt(sort("RegularChar"), sort("EscapeSequence")))
      , no-attrs()
      )
    , 3040
    )
  , label(
      prod(
        [cf(iter-sep(sort("FieldAssign"), lit(";")))]
      , cf(iter-star-sep(sort("FieldAssign"), lit(";")))
      , no-attrs()
      )
    , 3039
    )
  , label(
      prod(
        [ lit("(*")
        , lex(
            iter-star(
              alt(
                char-class([range(0, 41), range(43, 255)])
              , alt(sort("Comment"), sort("Star"))
              )
            )
          )
        , lit("*)")
        ]
      , lex(sort("Comment"))
      , no-attrs()
      )
    , 3038
    )
  , label(
      prod(
        [ lex(opt(lit("-")))
        , char-class([range(48, 57)])
        , lex(iter-star(char-class([range(48, 57), 95])))
        , lit(".")
        , lex(iter-star(char-class([range(48, 57), 95])))
        , char-class([69, 101])
        , lex(opt(char-class([43, 45])))
        , char-class([range(48, 57)])
        , lex(iter-star(char-class([range(48, 57), 95])))
        ]
      , lex(sort("FloatLiteral"))
      , no-attrs()
      )
    , 3037
    )
  , label(
      prod(
        [ lit("module")
        , cf(opt(layout()))
        , lit("type")
        , cf(opt(layout()))
        , cf(sort("ModTypeName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        ]
      , cf(sort("Definition"))
      , attrs([term(cons("ModuleType"))])
      )
    , 3036
    )
  , label(
      prod(
        [lit("lsr")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3035
    )
  , label(
      prod([], cf(iter-star(sort("StringLiteral"))), no-attrs())
    , 3034
    )
  , label(
      prod(
        [lex(sort("EscapeSequence"))]
      , lex(alt(sort("RegularChar"), sort("EscapeSequence")))
      , no-attrs()
      )
    , 3033
    )
  , label(
      prod(
        [lit("$ClassDefinition")]
      , cf(sort("ClassDefinition"))
      , attrs([term(placeholder()), term(cons("ClassDefinition-Plhdr"))])
      )
    , 3032
    )
  , label(
      prod(
        [ cf(iter-sep(sort("TagSpec"), lit("|")))
        , cf(opt(layout()))
        , lit("|")
        , cf(opt(layout()))
        , cf(sort("TagSpec"))
        ]
      , cf(iter-sep(sort("TagSpec"), lit("|")))
      , no-attrs()
      )
    , 3031
    )
  , label(
      prod(
        [ char-class([111])
        , char-class([112])
        , char-class([101])
        , char-class([110])
        ]
      , lit("open")
      , no-attrs()
      )
    , 3030
    )
  , label(
      prod(
        [lit("when")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3029
    )
  , label(
      prod(
        [ char-class([34])
        , lex(iter-star(sort("StringChar")))
        , char-class([34])
        ]
      , lex(sort("StringLiteral"))
      , no-attrs()
      )
    , 3028
    )
  , label(
      prod(
        [lit("lsl")]
      , lex(
          alt(
            lit("lsl")
          , alt(
              lit("lsr")
            , alt(
                lit("asr")
              , alt(
                  lit("mod")
                , alt(lit("land"), alt(lit("lor"), lit("lxor")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3027
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 3026
    )
  , label(
      prod(
        [cf(sort("Variance"))]
      , cf(opt(sort("Variance")))
      , no-attrs()
      )
    , 3025
    )
  , label(
      prod(
        [lit("**")]
      , lex(
          alt(
            lit("lsl")
          , alt(lit("lsr"), alt(lit("asr"), lit("**")))
          )
        )
      , no-attrs()
      )
    , 3024
    )
  , label(
      prod(
        [cf(sort("TypeRepresentation"))]
      , cf(opt(sort("TypeRepresentation")))
      , no-attrs()
      )
    , 3023
    )
  , label(
      prod(
        [lit("initializer")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 3022
    )
  , label(
      prod(
        [ char-class([119])
        , char-class([104])
        , char-class([105])
        , char-class([108])
        , char-class([101])
        ]
      , lit("while")
      , no-attrs()
      )
    , 3021
    )
  , label(
      prod(
        [ cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("when")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter-star(sort("InnerPatternMatching")))
        ]
      , cf(sort("PatternMatching"))
      , attrs([term(cons("PatternMatching")), term(nlm())])
      )
    , 3020
    )
  , label(
      prod(
        [ cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("when")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("InnerPatternMatching")))
        ]
      , cf(sort("PatternMatching"))
      , no-attrs()
      )
    , 3019
    )
  , label(
      prod(
        [lit("object")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3018
    )
  , label(
      prod(
        [lit("$ConstrDecl")]
      , cf(sort("ConstrDecl"))
      , attrs([term(placeholder()), term(cons("ConstrDecl-Plhdr"))])
      )
    , 3017
    )
  , label(
      prod([], cf(opt(sort("TypeRepresentation"))), no-attrs())
    , 3016
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([70])
        , char-class([105])
        , char-class([101])
        , char-class([108])
        , char-class([100])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        ]
      , lit("$FieldName")
      , no-attrs()
      )
    , 3015
    )
  , label(
      prod(
        [lex(sort("InfixSymbol7"))]
      , cf(sort("InfixSymbol7"))
      , no-attrs()
      )
    , 3014
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([80])
        , char-class([97])
        , char-class([116])
        , char-class([104])
        , char-class([68])
        , char-class([111])
        , char-class([116])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        ]
      , lit("$ModulePathDotOpt")
      , no-attrs()
      )
    , 3013
    )
  , label(
      prod(
        [cf(sort("NegativeInt"))]
      , cf(sort("ConstantNegative"))
      , no-attrs()
      )
    , 3012
    )
  , label(
      prod(
        [cf(sort("ClassTypeDef"))]
      , cf(iter-sep(sort("ClassTypeDef"), lit("and")))
      , no-attrs()
      )
    , 3011
    )
  , label(
      prod(
        [lit("false")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3010
    )
  , label(
      prod(
        [lit("function")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3009
    )
  , label(
      prod(
        [lit("end")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3008
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([70])
        , char-class([105])
        , char-class([101])
        , char-class([108])
        , char-class([100])
        , char-class([65])
        , char-class([115])
        , char-class([115])
        , char-class([105])
        , char-class([103])
        , char-class([110])
        ]
      , lit("$FieldAssign")
      , no-attrs()
      )
    , 3007
    )
  , label(
      prod(
        [lit("$ModuleItems")]
      , cf(sort("ModuleItems"))
      , attrs([term(cons("ModuleItems-Plhdr")), term(placeholder())])
      )
    , 3006
    )
  , label(
      prod(
        [lit("$ClassField")]
      , cf(sort("ClassField"))
      , attrs([term(cons("ClassField-Plhdr")), term(placeholder())])
      )
    , 3005
    )
  , label(
      prod(
        [lit("as")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3004
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 3003
    )
  , label(
      prod(
        [char-class([58]), char-class([61])]
      , lit(":=")
      , no-attrs()
      )
    , 3002
    )
  , label(
      prod(
        [lit("mutable")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 3001
    )
  , label(
      prod(
        [lit("private")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 3000
    )
  , label(
      prod(
        [ lit("sig")
        , cf(opt(layout()))
        , cf(iter-star(sort("SpecificationSemi")))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("ModuleType"))
      , attrs([term(cons("Signature"))])
      )
    , 2999
    )
  , label(
      prod(
        [lit("in")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2998
    )
  , label(
      prod(
        [lit("functor")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2997
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTuple"))])
      )
    , 2996
    )
  , label(
      prod(
        [cf(sort("LowerCaseIdent"))]
      , cf(sort("MethodName"))
      , no-attrs()
      )
    , 2995
    )
  , label(
      prod(
        [lit("assert")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2994
    )
  , label(
      prod(
        [lit("$InstVarName")]
      , cf(sort("InstVarName"))
      , attrs([term(cons("InstVarName-Plhdr")), term(placeholder())])
      )
    , 2993
    )
  , label(
      prod(
        [cf(sort("ConstantNegative"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternConst"))])
      )
    , 2992
    )
  , label(
      prod(
        [lit("$OptTypeExprList")]
      , cf(sort("OptTypeExprList"))
      , attrs([term(placeholder()), term(cons("OptTypeExprList-Plhdr"))])
      )
    , 2991
    )
  , label(
      prod(
        [lit("begin")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2990
    )
  , label(
      prod(
        [lex(sort("PrefixSymbol"))]
      , cf(sort("PrefixSymbol"))
      , no-attrs()
      )
    , 2989
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([69])
        , char-class([120])
        , char-class([116])
        , char-class([101])
        , char-class([110])
        , char-class([100])
        , char-class([101])
        , char-class([100])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([80])
        , char-class([97])
        , char-class([116])
        , char-class([104])
        , char-class([68])
        , char-class([111])
        , char-class([116])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        ]
      , lit("$ExtendedModulePathDotOpt")
      , no-attrs()
      )
    , 2988
    )
  , label(
      prod(
        [char-class([91]), char-class([62])]
      , lit("[>")
      , no-attrs()
      )
    , 2987
    )
  , label(
      prod(
        [cf(sort("ExtendedModulePath")), cf(opt(layout())), lit(".")]
      , cf(sort("ExtendedModulePathDotOpt"))
      , attrs([term(cons("ExtendedModulePath"))])
      )
    , 2986
    )
  , label(
      prod(
        [lit("sig")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2985
    )
  , label(
      prod(
        [lit(";;"), cf(opt(layout())), cf(sort("Definition"))]
      , cf(sort("DefinitionOrExprList"))
      , attrs([term(cons("Def1"))])
      )
    , 2984
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([68])
        , char-class([111])
        , char-class([116])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([80])
        , char-class([97])
        , char-class([116])
        , char-class([104])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        ]
      , lit("$DotModulePathOpt")
      , no-attrs()
      )
    , 2983
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([111])
        , char-class([108])
        , char-class([111])
        , char-class([110])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        ]
      , lit("$ColonModuleTypeOpt")
      , no-attrs()
      )
    , 2982
    )
  , label(
      prod(
        [cf(iter(sort("TypeConstr")))]
      , cf(iter-star(sort("TypeConstr")))
      , no-attrs()
      )
    , 2981
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([68])
        , char-class([101])
        , char-class([102])
        , char-class([105])
        , char-class([110])
        , char-class([105])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        , char-class([79])
        , char-class([114])
        , char-class([69])
        , char-class([120])
        , char-class([112])
        , char-class([114])
        , char-class([76])
        , char-class([105])
        , char-class([115])
        , char-class([116])
        ]
      , lit("$DefinitionOrExprList")
      , no-attrs()
      )
    , 2980
    )
  , label(
      prod(
        [cf(sort("MethodType"))]
      , cf(iter-sep(sort("MethodType"), lit(";")))
      , no-attrs()
      )
    , 2979
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2978
    )
  , label(
      prod(
        [ cf(sort("ConstrName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit("*")))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("ConstrDecl"))
      , attrs([term(cons("ConstrDecl2"))])
      )
    , 2977
    )
  , label(
      prod(
        [ cf(sort("ModTypePath"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-star-sep(sort("PackageConstraint"), lit("and")))
        ]
      , cf(sort("PackageType"))
      , attrs([term(cons("PackageType"))])
      )
    , 2976
    )
  , label(
      prod(
        [lit("lxor")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2975
    )
  , label(
      prod(
        [ cf(opt(sort("Variance")))
        , cf(opt(layout()))
        , lit("'")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("TypeParam"))
      , attrs([term(cons("TypeParam1"))])
      )
    , 2974
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([117])
        , char-class([116])
        , char-class([97])
        , char-class([98])
        , char-class([108])
        , char-class([101])
        ]
      , lit("$Mutable")
      , no-attrs()
      )
    , 2973
    )
  , label(
      prod(
        [lit("while")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2972
    )
  , label(
      prod(
        [lex(sort("InfixSymbol5"))]
      , cf(sort("InfixSymbol5"))
      , no-attrs()
      )
    , 2971
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("ClassExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("ClassExpr"))
      , attrs([term(bracket())])
      )
    , 2970
    )
  , label(
      prod(
        [lex(sort("EscapeSequence"))]
      , lex(sort("StringChar"))
      , no-attrs()
      )
    , 2969
    )
  , label(
      prod(
        [cf(layout()), cf(layout())]
      , cf(layout())
      , attrs([assoc(left())])
      )
    , 2968
    )
  , label(
      prod(
        [lit("false")]
      , cf(sort("Constant"))
      , attrs([term(cons("False"))])
      )
    , 2967
    )
  , label(
      prod(
        [ char-class([101])
        , char-class([120])
        , char-class([99])
        , char-class([101])
        , char-class([112])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        ]
      , lit("exception")
      , no-attrs()
      )
    , 2966
    )
  , label(
      prod(
        [char-class([111]), char-class([102])]
      , lit("of")
      , no-attrs()
      )
    , 2965
    )
  , label(
      prod(
        [cf(sort("ClassDefinition"))]
      , cf(sort("Definition"))
      , attrs([term(cons("ClassDef"))])
      )
    , 2964
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([83])
        , char-class([101])
        , char-class([109])
        , char-class([105])
        , char-class([67])
        , char-class([111])
        , char-class([108])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$SemiColon")
      , no-attrs()
      )
    , 2963
    )
  , label(
      prod(
        [lit("$TypeConstr")]
      , cf(sort("TypeConstr"))
      , attrs([term(placeholder()), term(cons("TypeConstr-Plhdr"))])
      )
    , 2962
    )
  , label(
      prod(
        [cf(sort("TypeConstr"))]
      , cf(iter(sort("TypeConstr")))
      , no-attrs()
      )
    , 2961
    )
  , label(
      prod(
        [lit("$ClassTypeDefinition")]
      , cf(sort("ClassTypeDefinition"))
      , attrs([term(cons("ClassTypeDefinition-Plhdr")), term(placeholder())])
      )
    , 2960
    )
  , label(
      prod(
        [ lit("module")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(iter-star(sort("AndModuleTypeModuleExpr")))
        ]
      , cf(sort("Definition"))
      , attrs([term(cons("ModuleRec1"))])
      )
    , 2959
    )
  , label(
      prod(
        [lit("$ModuleExpr")]
      , cf(sort("ModuleExpr"))
      , attrs([term(cons("ModuleExpr-Plhdr")), term(placeholder())])
      )
    , 2958
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , cf(sort("ColonTypeExprOpt"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Parameter"))
      , attrs([term(cons("Param5"))])
      )
    , 2957
    )
  , label(
      prod(
        [cf(iter(sort("StringLiteral")))]
      , cf(sort("ExternalDeclaration"))
      , attrs([term(cons("ExternalDecl"))])
      )
    , 2956
    )
  , label(
      prod(
        [cf(sort("ClassBinding"))]
      , cf(iter-sep(sort("ClassBinding"), lit("and")))
      , no-attrs()
      )
    , 2955
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("ClassExpr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("ClassType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("ClassExpr"))
      , attrs([term(cons("ClassExprCT"))])
      )
    , 2954
    )
  , label(
      prod(
        [lex(sort("RegularCharStr"))]
      , cf(sort("RegularCharStr"))
      , no-attrs()
      )
    , 2953
    )
  , label(
      prod(
        [ lit("class")
        , cf(opt(layout()))
        , cf(iter-sep(sort("ClassSpec"), lit("and")))
        ]
      , cf(sort("ClassSpecification"))
      , attrs([term(cons("ClassSpecification"))])
      )
    , 2952
    )
  , label(
      prod(
        [cf(sort("TypeExpr"))]
      , cf(sort("PolyTypeExpr"))
      , attrs([term(cons("Polytype1"))])
      )
    , 2951
    )
  , label(
      prod(
        [ lex(
            alt(
              char-class([range(0, 41), range(43, 255)])
            , alt(sort("Comment"), sort("Star"))
            )
          )
        ]
      , lex(
          iter(
            alt(
              char-class([range(0, 41), range(43, 255)])
            , alt(sort("Comment"), sort("Star"))
            )
          )
        )
      , no-attrs()
      )
    , 2950
    )
  , label(
      prod(
        [lit("$InfixSymbol3")]
      , cf(sort("InfixSymbol3"))
      , attrs([term(cons("InfixSymbol3-Plhdr")), term(placeholder())])
      )
    , 2949
    )
  , label(prod([], cf(sort("ExtendedModulePathDotOpt")), no-attrs()), 2948)
  , label(
      prod(
        [ lit("val")
        , cf(opt(layout()))
        , cf(sort("ValueName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("Definition"))
      , attrs([term(cons("DefinitionVal"))])
      )
    , 2947
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 2946
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        ]
      , lit("$ClassType")
      , no-attrs()
      )
    , 2945
    )
  , label(
      prod(
        [lit("module")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2944
    )
  , label(
      prod(
        [lit("asr")]
      , lex(
          alt(
            lit("lsl")
          , alt(
              lit("lsr")
            , alt(
                lit("asr")
              , alt(
                  lit("mod")
                , alt(lit("land"), alt(lit("lor"), lit("lxor")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2943
    )
  , label(
      prod(
        [lit("$AssignInstVarName")]
      , cf(sort("AssignInstVarName"))
      , attrs([term(cons("AssignInstVarName-Plhdr")), term(placeholder())])
      )
    , 2942
    )
  , label(
      prod(
        [char-class([123]), char-class([60])]
      , lit("{<")
      , no-attrs()
      )
    , 2941
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([65])
        , char-class([110])
        , char-class([100])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([69])
        , char-class([120])
        , char-class([112])
        , char-class([114])
        ]
      , lit("$AndTypeExpr")
      , no-attrs()
      )
    , 2940
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([111])
        , char-class([108])
        , char-class([111])
        , char-class([110])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        ]
      , lit("$ColonClassTypeOpt")
      , no-attrs()
      )
    , 2939
    )
  , label(
      prod(
        [ lex(
            seq(
              char-class([92])
            , [ char-class([120])
              , char-class(
                  [range(48, 57), range(65, 70), range(97, 102)]
                )
              , char-class(
                  [range(48, 57), range(65, 70), range(97, 102)]
                )
              ]
            )
          )
        ]
      , cf(
          seq(
            char-class([92])
          , [ char-class([120])
            , char-class(
                [range(48, 57), range(65, 70), range(97, 102)]
              )
            , char-class(
                [range(48, 57), range(65, 70), range(97, 102)]
              )
            ]
          )
        )
      , no-attrs()
      )
    , 2938
    )
  , label(
      prod([], cf(opt(sort("SemiColon"))), no-attrs())
    , 2937
    )
  , label(
      prod(
        [lit("$Mutable")]
      , cf(sort("Mutable"))
      , attrs([term(placeholder()), term(cons("Mutable-Plhdr"))])
      )
    , 2936
    )
  , label(
      prod(
        [lit("land")]
      , lex(
          alt(
            lit("lsl")
          , alt(
              lit("lsr")
            , alt(
                lit("asr")
              , alt(
                  lit("mod")
                , alt(lit("land"), alt(lit("lor"), lit("lxor")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2935
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 2934
    )
  , label(
      prod(
        [char-class([108]), char-class([111]), char-class([114])]
      , lit("lor")
      , no-attrs()
      )
    , 2933
    )
  , label(
      prod(
        [char-class([116]), char-class([111])]
      , lit("to")
      , no-attrs()
      )
    , 2932
    )
  , label(
      prod(
        [lit("virtual")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2931
    )
  , label(
      prod(
        [lex(sort("InfixSymbol3"))]
      , cf(sort("InfixSymbol3"))
      , no-attrs()
      )
    , 2930
    )
  , label(
      prod(
        [lit("$Constant")]
      , cf(sort("Constant"))
      , attrs([term(placeholder()), term(cons("Constant-Plhdr"))])
      )
    , 2929
    )
  , label(
      prod(
        [lit("&")]
      , lex(sort("InfixSymbol5"))
      , attrs([reject()])
      )
    , 2928
    )
  , label(
      prod(
        [lit("$ModulePath")]
      , cf(sort("ModulePath"))
      , attrs([term(cons("ModulePath-Plhdr")), term(placeholder())])
      )
    , 2927
    )
  , label(
      prod(
        [cf(sort("Field"))]
      , cf(sort("FieldAssign"))
      , attrs([term(cons("Field"))])
      )
    , 2926
    )
  , label(
      prod([char-class([33])], lit("!"), no-attrs())
    , 2925
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([80])
        , char-class([97])
        , char-class([116])
        , char-class([116])
        , char-class([101])
        , char-class([114])
        , char-class([110])
        , char-class([77])
        , char-class([97])
        , char-class([116])
        , char-class([99])
        , char-class([104])
        , char-class([105])
        , char-class([110])
        , char-class([103])
        ]
      , lit("$PatternMatching")
      , no-attrs()
      )
    , 2924
    )
  , label(
      prod(
        [ lex(
            iter(
              alt(
                char-class([range(0, 41), range(43, 255)])
              , alt(sort("Comment"), sort("Star"))
              )
            )
          )
        ]
      , lex(
          iter-star(
            alt(
              char-class([range(0, 41), range(43, 255)])
            , alt(sort("Comment"), sort("Star"))
            )
          )
        )
      , no-attrs()
      )
    , 2923
    )
  , label(
      prod(
        [ lex(
            iter(
              alt(
                char-class([range(0, 41), range(43, 255)])
              , alt(sort("Comment"), sort("Star"))
              )
            )
          )
        ]
      , cf(
          iter(
            alt(
              char-class([range(0, 41), range(43, 255)])
            , alt(sort("Comment"), sort("Star"))
            )
          )
        )
      , no-attrs()
      )
    , 2922
    )
  , label(
      prod(
        [ lex(
            iter-star(
              alt(
                char-class([range(0, 41), range(43, 255)])
              , alt(sort("Comment"), sort("Star"))
              )
            )
          )
        ]
      , cf(
          iter-star(
            alt(
              char-class([range(0, 41), range(43, 255)])
            , alt(sort("Comment"), sort("Star"))
            )
          )
        )
      , no-attrs()
      )
    , 2921
    )
  , label(
      prod(
        [ char-class([119])
        , char-class([104])
        , char-class([101])
        , char-class([110])
        ]
      , lit("when")
      , no-attrs()
      )
    , 2920
    )
  , label(
      prod(
        [ cf(opt(sort("Virtual")))
        , cf(opt(layout()))
        , cf(sort("OptTypeParameters"))
        , cf(opt(layout()))
        , cf(sort("ClassName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ClassBodyType"))
        ]
      , cf(sort("ClassTypeDef"))
      , attrs([term(cons("ClassTypeDef"))])
      )
    , 2919
    )
  , label(
      prod(
        [lex(alt(lit("&"), lit("&&")))]
      , lex(sort("InfixSymbol6"))
      , no-attrs()
      )
    , 2918
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        , char-class([83])
        , char-class([101])
        , char-class([109])
        , char-class([105])
        , char-class([67])
        , char-class([111])
        , char-class([108])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$OptSemiColon")
      , no-attrs()
      )
    , 2917
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([80])
        , char-class([111])
        , char-class([108])
        , char-class([121])
        , char-class([109])
        , char-class([111])
        , char-class([114])
        , char-class([112])
        , char-class([104])
        , char-class([105])
        , char-class([99])
        , char-class([86])
        , char-class([97])
        , char-class([114])
        , char-class([105])
        , char-class([97])
        , char-class([110])
        , char-class([116])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        ]
      , lit("$PolymorphicVariantType")
      , no-attrs()
      )
    , 2916
    )
  , label(
      prod(
        [lex(sort("EscapeSequence"))]
      , cf(sort("EscapeSequence"))
      , no-attrs()
      )
    , 2915
    )
  , label(
      prod(
        [lit("$ClassFieldSpec")]
      , cf(sort("ClassFieldSpec"))
      , attrs([term(cons("ClassFieldSpec-Plhdr")), term(placeholder())])
      )
    , 2914
    )
  , label(
      prod(
        [cf(iter(sort("StringLiteral")))]
      , cf(iter-star(sort("StringLiteral")))
      , no-attrs()
      )
    , 2913
    )
  , label(
      prod(
        [lit(":"), cf(opt(layout())), cf(sort("ModuleType"))]
      , cf(sort("ColonModuleTypeOpt"))
      , attrs([term(cons("Moduletype"))])
      )
    , 2912
    )
  , label(
      prod(
        [char-class([100]), char-class([111])]
      , lit("do")
      , no-attrs()
      )
    , 2911
    )
  , label(
      prod(
        [char-class([48]), char-class([111])]
      , lit("0o")
      , no-attrs()
      )
    , 2910
    )
  , label(
      prod([], cf(iter-star(sort("ClassFieldSpec"))), no-attrs())
    , 2909
    )
  , label(
      prod(
        [cf(sort("TypeDefinition"))]
      , cf(sort("Definition"))
      , attrs([term(cons("TypeDef"))])
      )
    , 2908
    )
  , label(
      prod(
        [lit("exception")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2907
    )
  , label(
      prod(
        [lit("$TypeDefinition")]
      , cf(sort("TypeDefinition"))
      , attrs([term(cons("TypeDefinition-Plhdr")), term(placeholder())])
      )
    , 2906
    )
  , label(
      prod(
        [lit("$TypeDef")]
      , cf(sort("TypeDef"))
      , attrs([term(cons("TypeDef-Plhdr")), term(placeholder())])
      )
    , 2905
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([65])
        , char-class([115])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$AsOption")
      , no-attrs()
      )
    , 2904
    )
  , label(
      prod(
        [ cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("AssignInstVarName"))
        ]
      , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
      , no-attrs()
      )
    , 2903
    )
  , label(
      prod(
        [lex(sort("IntegerLiteral"))]
      , cf(sort("IntegerLiteral"))
      , no-attrs()
      )
    , 2902
    )
  , label(
      prod(
        [ cf(iter-sep(sort("TypeDef"), lit("and")))
        , cf(opt(layout()))
        , lit("and")
        , cf(opt(layout()))
        , cf(sort("TypeDef"))
        ]
      , cf(iter-sep(sort("TypeDef"), lit("and")))
      , no-attrs()
      )
    , 2901
    )
  , label(
      prod(
        [lit("constraint")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2900
    )
  , label(
      prod(
        [char-class([91]), char-class([60])]
      , lit("[<")
      , no-attrs()
      )
    , 2899
    )
  , label(
      prod(
        [lit("$AsOption")]
      , cf(sort("AsOption"))
      , attrs([term(placeholder()), term(cons("AsOption-Plhdr"))])
      )
    , 2898
    )
  , label(
      prod(
        [ cf(sort("Method"))
        , cf(opt(layout()))
        , cf(opt(sort("Private")))
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        , cf(opt(layout()))
        , cf(iter-star(sort("Parameter")))
        , cf(opt(layout()))
        , cf(sort("ColonTypeExprOpt"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("ClassField"))
      , attrs([term(cons("Method1"))])
      )
    , 2897
    )
  , label(
      prod(
        [lit("open"), cf(opt(layout())), cf(sort("ModulePath"))]
      , cf(sort("Definition"))
      , attrs([term(cons("Open"))])
      )
    , 2896
    )
  , label(
      prod(
        [lit("$QuoteTagName")]
      , cf(sort("QuoteTagName"))
      , attrs([term(cons("QuoteTagName-Plhdr")), term(placeholder())])
      )
    , 2895
    )
  , label(
      prod(
        [lit("$ModulePathDotOpt")]
      , cf(sort("ModulePathDotOpt"))
      , attrs([term(cons("ModulePathDotOpt-Plhdr")), term(placeholder())])
      )
    , 2894
    )
  , label(
      prod(
        [lit("$InfixSymbol1")]
      , cf(sort("InfixSymbol1"))
      , attrs([term(placeholder()), term(cons("InfixSymbol1-Plhdr"))])
      )
    , 2893
    )
  , label(
      prod(
        []
      , cf(sort("TopLevel"))
      , attrs([term(cons("TopLevelEmpty"))])
      )
    , 2892
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([68])
        , char-class([111])
        , char-class([117])
        , char-class([98])
        , char-class([108])
        , char-class([101])
        , char-class([83])
        , char-class([101])
        , char-class([109])
        , char-class([105])
        , char-class([67])
        , char-class([111])
        , char-class([108])
        , char-class([111])
        , char-class([110])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        ]
      , lit("$DoubleSemiColonOpt")
      , no-attrs()
      )
    , 2891
    )
  , label(
      prod(
        [lit("$OptTypeExpr")]
      , cf(sort("OptTypeExpr"))
      , attrs([term(placeholder()), term(cons("OptTypeExpr-Plhdr"))])
      )
    , 2890
    )
  , label(
      prod([lit(";")], lex(sort("SemiColon")), no-attrs())
    , 2889
    )
  , label(
      prod(
        [ cf(iter-sep(sort("TypeParam"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("TypeParam"))
        ]
      , cf(iter-sep(sort("TypeParam"), lit(",")))
      , no-attrs()
      )
    , 2888
    )
  , label(
      prod(
        [lit("+")]
      , lex(alt(lit("+"), lit("-")))
      , no-attrs()
      )
    , 2887
    )
  , label(
      prod(
        [lit("new")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2886
    )
  , label(
      prod(
        [cf(sort("Virtual"))]
      , cf(opt(sort("Virtual")))
      , no-attrs()
      )
    , 2885
    )
  , label(
      prod(
        [ lex(
            alt(
              lit("!")
            , alt(
                lit("$")
              , alt(
                  lit("%")
                , alt(
                    lit("&")
                  , alt(
                      lit("*")
                    , alt(
                        lit("+")
                      , alt(
                          lit("-")
                        , alt(
                            lit(".")
                          , alt(
                              lit("/")
                            , alt(
                                lit(":")
                              , alt(
                                  lit("<")
                                , alt(
                                    lit("=")
                                  , alt(
                                      lit(">")
                                    , alt(
                                        lit("?")
                                      , alt(
                                          lit("@")
                                        , alt(lit("|"), alt(lit("~"), lit("^")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        ]
      , cf(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2884
    )
  , label(
      prod(
        [lit("fun")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2883
    )
  , label(
      prod(
        [lit("$ModuleType")]
      , cf(sort("ModuleType"))
      , attrs([term(cons("ModuleType-Plhdr")), term(placeholder())])
      )
    , 2882
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("OptTypeExpr"))
        , cf(opt(layout()))
        , cf(iter-star(sort("ClassFieldSpec")))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("ClassBodyType"))
      , attrs([term(cons("ClassBodyTypeObject"))])
      )
    , 2881
    )
  , label(
      prod(
        [lex(sort("InfixSymbol1"))]
      , cf(sort("InfixSymbol1"))
      , no-attrs()
      )
    , 2880
    )
  , label(
      prod(
        [ char-class([95, range(97, 122)])
        , lex(
            iter-star(
              char-class(
                [ 39
                , range(48, 57)
                , range(65, 90)
                , 95
                , range(97, 122)
                ]
              )
            )
          )
        ]
      , lex(sort("LowerCaseIdent"))
      , no-attrs()
      )
    , 2879
    )
  , label(
      prod(
        [ lit("and")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        ]
      , cf(sort("AndModuleTypeModuleExpr"))
      , attrs([term(cons("NamedTypedModuleEquals"))])
      )
    , 2878
    )
  , label(
      prod(
        [lit("inherit")]
      , cf(sort("Inherit"))
      , attrs([term(cons("Inherit1"))])
      )
    , 2877
    )
  , label(
      prod(
        [ cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName2"))])
      )
    , 2876
    )
  , label(
      prod(
        [ char-class([101])
        , char-class([108])
        , char-class([115])
        , char-class([101])
        ]
      , lit("else")
      , no-attrs()
      )
    , 2875
    )
  , label(
      prod(
        [ cf(iter(sort("QuoteTagName")))
        , cf(opt(layout()))
        , cf(sort("QuoteTagName"))
        ]
      , cf(iter(sort("QuoteTagName")))
      , no-attrs()
      )
    , 2874
    )
  , label(
      prod(
        [ cf(iter-sep(sort("ClassTypeDef"), lit("and")))
        , cf(opt(layout()))
        , lit("and")
        , cf(opt(layout()))
        , cf(sort("ClassTypeDef"))
        ]
      , cf(iter-sep(sort("ClassTypeDef"), lit("and")))
      , no-attrs()
      )
    , 2873
    )
  , label(
      prod([lit(":=")], lex(sort("InfixSymbol8")), no-attrs())
    , 2872
    )
  , label(
      prod(
        [ cf(iter(sort("Parameter")))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("MultipleMatching"))
      , attrs([term(cons("MultipleMatching"))])
      )
    , 2871
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([80])
        , char-class([97])
        , char-class([116])
        , char-class([104])
        ]
      , lit("$ModTypePath")
      , no-attrs()
      )
    , 2870
    )
  , label(
      prod(
        [lit("try")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2869
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([83])
        , char-class([116])
        , char-class([114])
        , char-class([105])
        , char-class([110])
        , char-class([103])
        , char-class([76])
        , char-class([105])
        , char-class([116])
        , char-class([101])
        , char-class([114])
        , char-class([97])
        , char-class([108])
        ]
      , lit("$StringLiteral")
      , no-attrs()
      )
    , 2868
    )
  , label(
      prod(
        [cf(sort("Private"))]
      , cf(opt(sort("Private")))
      , no-attrs()
      )
    , 2867
    )
  , label(
      prod(
        []
      , cf(sort("AsOption"))
      , attrs([term(cons("NoAsValue"))])
      )
    , 2866
    )
  , label(
      prod(
        [char-class([48]), char-class([79])]
      , lit("0O")
      , no-attrs()
      )
    , 2865
    )
  , label(
      prod(
        [lex(sort("PositiveInt"))]
      , cf(sort("PositiveInt"))
      , no-attrs()
      )
    , 2864
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([69])
        , char-class([120])
        , char-class([99])
        , char-class([101])
        , char-class([112])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        , char-class([68])
        , char-class([101])
        , char-class([102])
        , char-class([105])
        , char-class([110])
        , char-class([105])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$ExceptionDefinition")
      , no-attrs()
      )
    , 2863
    )
  , label(
      prod(
        [cf(sort("TypeParams"))]
      , cf(opt(sort("TypeParams")))
      , no-attrs()
      )
    , 2862
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("AssignInstVarName"), lit(";")))
      , no-attrs()
      )
    , 2861
    )
  , label(
      prod([char-class([35])], lit("#"), no-attrs())
    , 2860
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([80])
        , char-class([97])
        , char-class([114])
        , char-class([97])
        , char-class([109])
        ]
      , lit("$TypeParam")
      , no-attrs()
      )
    , 2859
    )
  , label(
      prod(
        [ char-class([108])
        , char-class([97])
        , char-class([110])
        , char-class([100])
        ]
      , lit("land")
      , no-attrs()
      )
    , 2858
    )
  , label(
      prod(
        [cf(sort("ClassSpec"))]
      , cf(iter-sep(sort("ClassSpec"), lit("and")))
      , no-attrs()
      )
    , 2857
    )
  , label(
      prod(
        [ lex(
            iter(
              char-class(
                [ 39
                , range(48, 57)
                , range(65, 90)
                , 95
                , range(97, 122)
                ]
              )
            )
          )
        , char-class(
            [ 39
            , range(48, 57)
            , range(65, 90)
            , 95
            , range(97, 122)
            ]
          )
        ]
      , lex(
          iter(
            char-class(
              [ 39
              , range(48, 57)
              , range(65, 90)
              , 95
              , range(97, 122)
              ]
            )
          )
        )
      , no-attrs()
      )
    , 2856
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("TypeParam"), lit(",")))
      , no-attrs()
      )
    , 2855
    )
  , label(
      prod(
        [lex(sort("CapitalizedIdent"))]
      , lex(sort("Ident"))
      , no-attrs()
      )
    , 2854
    )
  , label(
      prod(
        [lit("lor")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2853
    )
  , label(
      prod(
        [cf(sort("ModulePath")), cf(opt(layout())), lit(".")]
      , cf(sort("ModulePathDotOpt"))
      , attrs([term(cons("ModulePath"))])
      )
    , 2852
    )
  , label(
      prod(
        [lit("$DoubleSemiColonOpt")]
      , cf(sort("DoubleSemiColonOpt"))
      , attrs([term(cons("DoubleSemiColonOpt-Plhdr")), term(placeholder())])
      )
    , 2851
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([83])
        , char-class([116])
        , char-class([97])
        , char-class([114])
        , char-class([116])
        ]
      , lit("$Start")
      , no-attrs()
      )
    , 2850
    )
  , label(
      prod(
        [lit("$PolyTypeExpr")]
      , cf(sort("PolyTypeExpr"))
      , attrs([term(cons("PolyTypeExpr-Plhdr")), term(placeholder())])
      )
    , 2849
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([79])
        , char-class([112])
        , char-class([101])
        , char-class([114])
        , char-class([97])
        , char-class([116])
        , char-class([111])
        , char-class([114])
        , char-class([67])
        , char-class([104])
        , char-class([97])
        , char-class([114])
        , char-class([76])
        , char-class([105])
        , char-class([115])
        , char-class([116])
        ]
      , lit("$OperatorCharList")
      , no-attrs()
      )
    , 2848
    )
  , label(
      prod(
        [char-class([124]), char-class([93])]
      , lit("|]")
      , no-attrs()
      )
    , 2847
    )
  , label(
      prod(
        [cf(sort("Constr")), cf(opt(layout())), cf(sort("Pattern"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("ConstrPattern"))])
      )
    , 2846
    )
  , label(
      prod(
        [lit("-")]
      , lex(alt(lit("+"), lit("-")))
      , no-attrs()
      )
    , 2845
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , cf(iter-star(sort("Parameter")))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("PolyTypeExpr"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("LetBinding"))
      , attrs([term(cons("LetBinding2"))])
      )
    , 2844
    )
  , label(
      prod(
        [lit("rec")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2843
    )
  , label(
      prod(
        [ lit("constraint")
        , cf(opt(layout()))
        , lit("'")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeConstraint"))
      , attrs([term(cons("TypeConstraint"))])
      )
    , 2842
    )
  , label(
      prod(
        [ cf(opt(sort("TypeParams")))
        , cf(opt(layout()))
        , cf(sort("TypeConstrName"))
        , cf(opt(layout()))
        , cf(sort("TypeInformation"))
        ]
      , cf(sort("TypeDef"))
      , attrs([term(cons("TypeDef"))])
      )
    , 2841
    )
  , label(
      prod(
        [lit("<")]
      , lex(
          alt(
            lit("=")
          , alt(
              lit("<")
            , alt(
                lit(">")
              , alt(lit("|"), alt(lit("&"), lit("$")))
              )
            )
          )
        )
      , no-attrs()
      )
    , 2840
    )
  , label(
      prod([], cf(iter-star(sort("ClassField"))), no-attrs())
    , 2839
    )
  , label(
      prod(
        [lex(sort("LowerCaseIdent"))]
      , cf(sort("LowerCaseIdent"))
      , no-attrs()
      )
    , 2838
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternPackage"))])
      )
    , 2837
    )
  , label(
      prod(
        [lit("else")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2836
    )
  , label(
      prod(
        [cf(sort("FieldDecl"))]
      , cf(iter-sep(sort("FieldDecl"), lit(";")))
      , no-attrs()
      )
    , 2835
    )
  , label(
      prod(
        [ cf(iter(sort("ModuleNameTypeParam")))
        , cf(opt(layout()))
        , cf(sort("ModuleNameTypeParam"))
        ]
      , cf(iter(sort("ModuleNameTypeParam")))
      , no-attrs()
      )
    , 2834
    )
  , label(
      prod(
        [lit("$ClassName")]
      , cf(sort("ClassName"))
      , attrs([term(placeholder()), term(cons("ClassName-Plhdr"))])
      )
    , 2833
    )
  , label(
      prod(
        [lex(sort("Star"))]
      , lex(
          alt(
            char-class([range(0, 41), range(43, 255)])
          , alt(sort("Comment"), sort("Star"))
          )
        )
      , no-attrs()
      )
    , 2832
    )
  , label(
      prod(
        [ char-class([109])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        ]
      , lit("module")
      , no-attrs()
      )
    , 2831
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([80])
        , char-class([97])
        , char-class([99])
        , char-class([107])
        , char-class([97])
        , char-class([103])
        , char-class([101])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        ]
      , lit("$PackageType")
      , no-attrs()
      )
    , 2830
    )
  , label(
      prod(
        [lit("struct")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2829
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([70])
        , char-class([105])
        , char-class([101])
        , char-class([108])
        , char-class([100])
        ]
      , lit("$Field")
      , no-attrs()
      )
    , 2828
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([76])
        , char-class([101])
        , char-class([116])
        , char-class([66])
        , char-class([105])
        , char-class([110])
        , char-class([100])
        , char-class([105])
        , char-class([110])
        , char-class([103])
        ]
      , lit("$LetBinding")
      , no-attrs()
      )
    , 2827
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        , char-class([76])
        , char-class([97])
        , char-class([98])
        , char-class([101])
        , char-class([108])
        , char-class([67])
        , char-class([111])
        , char-class([108])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$OptLabelColon")
      , no-attrs()
      )
    , 2826
    )
  , label(
      prod([], cf(iter-star(sort("TypeConstr"))), no-attrs())
    , 2825
    )
  , label(
      prod(
        [lit("=")]
      , lex(
          alt(
            lit("=")
          , alt(
              lit("<")
            , alt(
                lit(">")
              , alt(lit("|"), alt(lit("&"), lit("$")))
              )
            )
          )
        )
      , no-attrs()
      )
    , 2824
    )
  , label(
      prod(
        [lit("+")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2823
    )
  , label(
      prod(
        [lit("0x")]
      , lex(alt(lit("0x"), lit("0X")))
      , no-attrs()
      )
    , 2822
    )
  , label(
      prod(
        [lit("or")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2821
    )
  , label(
      prod(
        [ lit("`")
        , cf(opt(layout()))
        , cf(sort("TagName"))
        , cf(opt(layout()))
        , lit("of")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , cf(iter-star(sort("AndTypeExpr")))
        ]
      , cf(sort("TagSpecFull"))
      , attrs([term(cons("TagSpecFull1"))])
      )
    , 2820
    )
  , label(
      prod(
        [ lit("class")
        , cf(opt(layout()))
        , cf(iter-sep(sort("ClassBinding"), lit("and")))
        ]
      , cf(sort("ClassDefinition"))
      , attrs([term(cons("ClassDefinition"))])
      )
    , 2819
    )
  , label(
      prod(
        [lit("$TypeExpr")]
      , cf(sort("TypeExpr"))
      , attrs([term(placeholder()), term(cons("TypeExpr-Plhdr"))])
      )
    , 2818
    )
  , label(
      prod(
        [lit("lsr")]
      , lex(
          alt(
            lit("lsl")
          , alt(
              lit("lsr")
            , alt(
                lit("asr")
              , alt(
                  lit("mod")
                , alt(lit("land"), alt(lit("lor"), lit("lxor")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2817
    )
  , label(
      prod(
        [ cf(iter-sep(sort("ClassBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("and")
        , cf(opt(layout()))
        , cf(sort("ClassBinding"))
        ]
      , cf(iter-sep(sort("ClassBinding"), lit("and")))
      , no-attrs()
      )
    , 2816
    )
  , label(
      prod(
        [char-class([91]), char-class([124])]
      , lit("[|")
      , no-attrs()
      )
    , 2815
    )
  , label(
      prod([], cf(opt(sort("TypeEquation"))), no-attrs())
    , 2814
    )
  , label(
      prod(
        [lex(sort("OperatorChar"))]
      , lex(iter(sort("OperatorChar")))
      , no-attrs()
      )
    , 2813
    )
  , label(
      prod(
        [ lex(
            alt(
              lit("lsl")
            , alt(lit("lsr"), alt(lit("asr"), lit("**")))
            )
          )
        , lex(iter-star(sort("OperatorChar")))
        ]
      , lex(sort("InfixSymbol1"))
      , no-attrs()
      )
    , 2812
    )
  , label(
      prod(
        [cf(sort("TopLevel"))]
      , cf(sort("Start"))
      , no-attrs()
      )
    , 2811
    )
  , label(
      prod(
        [lit("or")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2810
    )
  , label(
      prod(
        [lit("if")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2809
    )
  , label(
      prod(
        [ cf(sort("Inherit"))
        , cf(opt(layout()))
        , cf(sort("ClassExpr"))
        , cf(opt(layout()))
        , cf(sort("AsOption"))
        ]
      , cf(sort("ClassField"))
      , attrs([term(cons("Inheritance"))])
      )
    , 2808
    )
  , label(
      prod(
        [lit("let")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2807
    )
  , label(
      prod(
        [lit("mod")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2806
    )
  , label(
      prod(
        [ lit("exception")
        , cf(opt(layout()))
        , cf(sort("ConstrName"))
        , cf(opt(layout()))
        , lit("of")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit("*")))
        ]
      , cf(sort("ExceptionDefinition"))
      , attrs([term(cons("Exception"))])
      )
    , 2805
    )
  , label(
      prod(
        [lit("done")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2804
    )
  , label(
      prod(
        [ cf(iter(sort("ClassField")))
        , cf(opt(layout()))
        , cf(sort("ClassField"))
        ]
      , cf(iter(sort("ClassField")))
      , no-attrs()
      )
    , 2803
    )
  , label(
      prod(
        [char-class([92]), char-class([10])]
      , lex(sort("StringChar"))
      , no-attrs()
      )
    , 2802
    )
  , label(
      prod(
        [lit(">")]
      , lex(
          alt(
            lit("=")
          , alt(
              lit("<")
            , alt(
                lit(">")
              , alt(lit("|"), alt(lit("&"), lit("$")))
              )
            )
          )
        )
      , no-attrs()
      )
    , 2801
    )
  , label(
      prod(
        [lit("to")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2800
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([69])
        , char-class([120])
        , char-class([112])
        , char-class([114])
        ]
      , lit("$OptTypeExpr")
      , no-attrs()
      )
    , 2799
    )
  , label(
      prod(
        [ lex(
            alt(
              lit("_")
            , alt(
                lit("and")
              , alt(
                  lit("as")
                , alt(
                    lit("assert")
                  , alt(
                      lit("asr")
                    , alt(
                        lit("begin")
                      , alt(
                          lit("class")
                        , alt(
                            lit("constraint")
                          , alt(
                              lit("do")
                            , alt(
                                lit("done")
                              , alt(
                                  lit("downto")
                                , alt(
                                    lit("else")
                                  , alt(
                                      lit("end")
                                    , alt(
                                        lit("exception")
                                      , alt(
                                          lit("external")
                                        , alt(
                                            lit("false")
                                          , alt(
                                              lit("for")
                                            , alt(
                                                lit("fun")
                                              , alt(
                                                  lit("function")
                                                , alt(
                                                    lit("functor")
                                                  , alt(
                                                      lit("if")
                                                    , alt(
                                                        lit("in")
                                                      , alt(
                                                          lit("include")
                                                        , alt(
                                                            lit("inherit")
                                                          , alt(
                                                              lit("initializer")
                                                            , alt(
                                                                lit("land")
                                                              , alt(
                                                                  lit("lazy")
                                                                , alt(
                                                                    lit("let")
                                                                  , alt(
                                                                      lit("lor")
                                                                    , alt(
                                                                        lit("lsl")
                                                                      , alt(
                                                                          lit("lsr")
                                                                        , alt(
                                                                            lit("lxor")
                                                                          , alt(
                                                                              lit("match")
                                                                            , alt(
                                                                                lit("method")
                                                                              , alt(
                                                                                  lit("mod")
                                                                                , alt(
                                                                                    lit("module")
                                                                                  , alt(
                                                                                      lit("mutable")
                                                                                    , alt(
                                                                                        lit("new")
                                                                                      , alt(
                                                                                          lit("object")
                                                                                        , alt(
                                                                                            lit("of")
                                                                                          , alt(
                                                                                              lit("open")
                                                                                            , alt(
                                                                                                lit("or")
                                                                                              , alt(
                                                                                                  lit("private")
                                                                                                , alt(
                                                                                                    lit("rec")
                                                                                                  , alt(
                                                                                                      lit("sig")
                                                                                                    , alt(
                                                                                                        lit("struct")
                                                                                                      , alt(
                                                                                                          lit("then")
                                                                                                        , alt(
                                                                                                            lit("to")
                                                                                                          , alt(
                                                                                                              lit("true")
                                                                                                            , alt(
                                                                                                                lit("try")
                                                                                                              , alt(
                                                                                                                  lit("type")
                                                                                                                , alt(
                                                                                                                    lit("val")
                                                                                                                  , alt(
                                                                                                                      lit("virtual")
                                                                                                                    , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        ]
      , lex(sort("Keyword"))
      , no-attrs()
      )
    , 2798
    )
  , label(
      prod(
        [ cf(sort("ModuleType"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("ModConstraint"), lit("and")))
        ]
      , cf(sort("ModuleType"))
      , attrs([term(cons("ModuleTypeWith"))])
      )
    , 2797
    )
  , label(
      prod(
        [ lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , cf(iter-star(sort("ModuleNameTypeParam")))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        ]
      , cf(sort("Definition"))
      , attrs([term(cons("ModuleDef2"))])
      )
    , 2796
    )
  , label(
      prod(
        [lit("*")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2795
    )
  , label(
      prod(
        [cf(sort("DefinitionOrExpr")), cf(opt(layout())), lit(";;")]
      , cf(sort("ModuleItems"))
      , attrs([term(cons("ModuleItem"))])
      )
    , 2794
    )
  , label(
      prod(
        [ lit("type")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeDef"), lit("and")))
        ]
      , cf(sort("TypeDefinition"))
      , attrs([term(cons("TypeDefinition"))])
      )
    , 2793
    )
  , label(
      prod(
        [lit("$PrefixSymbol")]
      , cf(sort("PrefixSymbol"))
      , attrs([term(cons("PrefixSymbol-Plhdr")), term(placeholder())])
      )
    , 2792
    )
  , label(
      prod(
        [lex(sort("StringChar"))]
      , cf(sort("StringChar"))
      , no-attrs()
      )
    , 2791
    )
  , label(
      prod(
        [lit("include"), cf(opt(layout())), cf(sort("ModuleType"))]
      , cf(sort("Specification"))
      , attrs([term(cons("Include"))])
      )
    , 2790
    )
  , label(
      prod(
        [cf(sort("ClassTypeDefinition"))]
      , cf(sort("Specification"))
      , attrs([term(cons("ClassTypeDef"))])
      )
    , 2789
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        ]
      , lit("$ModuleType")
      , no-attrs()
      )
    , 2788
    )
  , label(
      prod(
        [lit("if")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2787
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([97])
        , char-class([103])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        ]
      , lit("$TagName")
      , no-attrs()
      )
    , 2786
    )
  , label(
      prod([cf(layout())], cf(opt(layout())), no-attrs())
    , 2785
    )
  , label(
      prod(
        [lex(alt(lit("+"), lit("-")))]
      , cf(alt(lit("+"), lit("-")))
      , no-attrs()
      )
    , 2784
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([73])
        , char-class([110])
        , char-class([102])
        , char-class([105])
        , char-class([120])
        , char-class([83])
        , char-class([121])
        , char-class([109])
        , char-class([98])
        , char-class([111])
        , char-class([108])
        , char-class([55])
        ]
      , lit("$InfixSymbol7")
      , no-attrs()
      )
    , 2783
    )
  , label(
      prod(
        [lit("or")]
      , lex(alt(lit("||"), lit("or")))
      , no-attrs()
      )
    , 2782
    )
  , label(
      prod(
        [lit("$TypeParameters")]
      , cf(sort("TypeParameters"))
      , attrs([term(placeholder()), term(cons("TypeParameters-Plhdr"))])
      )
    , 2781
    )
  , label(
      prod(
        [cf(iter-sep(sort("FieldOrFieldEqPattern"), lit(";")))]
      , cf(iter-star-sep(sort("FieldOrFieldEqPattern"), lit(";")))
      , no-attrs()
      )
    , 2780
    )
  , label(
      prod([], cf(iter-star(sort("AndModuleType"))), no-attrs())
    , 2779
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprTypeConstr"))])
      )
    , 2778
    )
  , label(
      prod(
        [lit("-")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2777
    )
  , label(
      prod(
        [cf(sort("Pattern"))]
      , cf(iter-sep(sort("Pattern"), lit(";")))
      , no-attrs()
      )
    , 2776
    )
  , label(prod([], cf(sort("ModulePathDotOpt")), no-attrs()), 2775)
  , label(
      prod([char-class([37])], lit("%"), no-attrs())
    , 2774
    )
  , label(
      prod(
        [ char-class(
            [range(0, 38), range(40, 91), range(93, 255)]
          )
        ]
      , lex(sort("RegularChar"))
      , no-attrs()
      )
    , 2773
    )
  , label(
      prod(
        [lit("rec")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2772
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("AssignInstVarName"))
      , attrs([term(cons("Assign"))])
      )
    , 2771
    )
  , label(
      prod(
        [lit("$ClassSpec")]
      , cf(sort("ClassSpec"))
      , attrs([term(placeholder()), term(cons("ClassSpec-Plhdr"))])
      )
    , 2770
    )
  , label(
      prod(
        [lit("[|"), cf(opt(layout())), lit("|]")]
      , cf(sort("Constant"))
      , attrs([term(cons("EmptyArray"))])
      )
    , 2769
    )
  , label(
      prod(
        [char-class([48]), char-class([98])]
      , lit("0b")
      , no-attrs()
      )
    , 2768
    )
  , label(
      prod(
        [lit("$Ident")]
      , cf(sort("Ident"))
      , attrs([term(placeholder()), term(cons("Ident-Plhdr"))])
      )
    , 2767
    )
  , label(
      prod(
        [lit("!"), lex(iter-star(sort("OperatorChar")))]
      , lex(sort("PrefixSymbol"))
      , no-attrs()
      )
    , 2766
    )
  , label(
      prod(
        [lit("match")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2765
    )
  , label(
      prod(
        [lit("$DefinitionOrExpr")]
      , cf(sort("DefinitionOrExpr"))
      , attrs([term(placeholder()), term(cons("DefinitionOrExpr-Plhdr"))])
      )
    , 2764
    )
  , label(
      prod(
        [cf(sort("ModulePathDotOpt")), cf(opt(layout())), cf(sort("ConstrName"))]
      , cf(sort("Constr"))
      , attrs([term(cons("Const"))])
      )
    , 2763
    )
  , label(
      prod(
        [char-class([97]), char-class([115]), char-class([114])]
      , lit("asr")
      , no-attrs()
      )
    , 2762
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([80])
        , char-class([111])
        , char-class([108])
        , char-class([121])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([69])
        , char-class([120])
        , char-class([112])
        , char-class([114])
        ]
      , lit("$PolyTypeExpr")
      , no-attrs()
      )
    , 2761
    )
  , label(
      prod(
        [lit("external")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2760
    )
  , label(
      prod(
        [lit("$LabelNameOpt")]
      , cf(sort("LabelNameOpt"))
      , attrs([term(placeholder()), term(cons("LabelNameOpt-Plhdr"))])
      )
    , 2759
    )
  , label(
      prod(
        [lex(sort("Ident"))]
      , cf(sort("Ident"))
      , no-attrs()
      )
    , 2758
    )
  , label(
      prod(
        [lit("$PatternMatching")]
      , cf(sort("PatternMatching"))
      , attrs([term(cons("PatternMatching-Plhdr")), term(placeholder())])
      )
    , 2757
    )
  , label(
      prod(
        [ cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("and")
        , cf(opt(layout()))
        , cf(sort("LetBinding"))
        ]
      , cf(iter-sep(sort("LetBinding"), lit("and")))
      , no-attrs()
      )
    , 2756
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 2755
    )
  , label(
      prod(
        [ char-class([100])
        , char-class([111])
        , char-class([110])
        , char-class([101])
        ]
      , lit("done")
      , no-attrs()
      )
    , 2754
    )
  , label(
      prod(
        [lex(iter(sort("OperatorChar")))]
      , lex(iter-star(sort("OperatorChar")))
      , no-attrs()
      )
    , 2753
    )
  , label(
      prod(
        [lex(iter(sort("OperatorChar")))]
      , cf(iter(sort("OperatorChar")))
      , no-attrs()
      )
    , 2752
    )
  , label(
      prod(
        [lex(iter-star(sort("OperatorChar")))]
      , cf(iter-star(sort("OperatorChar")))
      , no-attrs()
      )
    , 2751
    )
  , label(
      prod(
        [ cf(sort("DoubleSemiColonOpt"))
        , cf(opt(layout()))
        , cf(sort("DefinitionOrExpr"))
        , cf(opt(layout()))
        , cf(iter-star(sort("DefinitionOrExprList")))
        , cf(opt(layout()))
        , cf(sort("DoubleSemiColonOpt"))
        ]
      , cf(sort("TopLevel"))
      , attrs([term(cons("TopLevel"))])
      )
    , 2750
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(iter-sep(sort("Expr"), lit(";")))
      , no-attrs()
      )
    , 2749
    )
  , label(
      prod(
        [lit("struct")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2748
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash1"))])
      )
    , 2747
    )
  , label(
      prod(
        [lit("and")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2746
    )
  , label(
      prod(
        [lit("include")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2745
    )
  , label(
      prod(
        []
      , cf(sort("OptTypeParameters"))
      , attrs([term(cons("NoParam"))])
      )
    , 2744
    )
  , label(
      prod(
        [lit("$CharLiteral")]
      , cf(sort("CharLiteral"))
      , attrs([term(cons("CharLiteral-Plhdr")), term(placeholder())])
      )
    , 2743
    )
  , label(
      prod(
        []
      , lex(
          iter-star(
            alt(
              lit("!")
            , alt(
                lit("$")
              , alt(
                  lit("%")
                , alt(
                    lit("&")
                  , alt(
                      lit("*")
                    , alt(
                        lit("+")
                      , alt(
                          lit("-")
                        , alt(
                            lit(".")
                          , alt(
                              lit("/")
                            , alt(
                                lit(":")
                              , alt(
                                  lit("<")
                                , alt(
                                    lit("=")
                                  , alt(
                                      lit(">")
                                    , alt(
                                        lit("?")
                                      , alt(
                                          lit("@")
                                        , alt(lit("|"), alt(lit("~"), lit("^")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2742
    )
  , label(
      prod(
        [ cf(opt(sort("TypeEquation")))
        , cf(opt(layout()))
        , cf(opt(sort("TypeRepresentation")))
        , cf(opt(layout()))
        , cf(iter-star(sort("TypeConstraint")))
        ]
      , cf(sort("TypeInformation"))
      , attrs([term(cons("TypeInformation"))])
      )
    , 2741
    )
  , label(
      prod(
        [lit("true")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2740
    )
  , label(
      prod(
        [cf(sort("TypeExpr")), cf(opt(layout())), cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr1"))])
      )
    , 2739
    )
  , label(
      prod(
        [lit("mod")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2738
    )
  , label(
      prod(
        [lit("/")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2737
    )
  , label(
      prod(
        [ cf(sort("CharLiteral"))
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , cf(sort("CharLiteral"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRange"))])
      )
    , 2736
    )
  , label(
      prod(
        [cf(iter-sep(sort("Expr"), lit(";")))]
      , cf(iter-star-sep(sort("Expr"), lit(";")))
      , no-attrs()
      )
    , 2735
    )
  , label(
      prod(
        [lit("$AndModuleType")]
      , cf(sort("AndModuleType"))
      , attrs([term(cons("AndModuleType-Plhdr")), term(placeholder())])
      )
    , 2734
    )
  , label(
      prod(
        [lit("$Field")]
      , cf(sort("Field"))
      , attrs([term(cons("Field-Plhdr")), term(placeholder())])
      )
    , 2733
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 2732
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([66])
        , char-class([111])
        , char-class([100])
        , char-class([121])
        ]
      , lit("$ClassBody")
      , no-attrs()
      )
    , 2731
    )
  , label(
      prod(
        [lit(":"), cf(opt(layout())), cf(sort("ClassType"))]
      , cf(sort("ColonClassTypeOpt"))
      , attrs([term(cons("ClassType"))])
      )
    , 2730
    )
  , label(
      prod(
        [char-class([48]), char-class([66])]
      , lit("0B")
      , no-attrs()
      )
    , 2729
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([67])
        , char-class([111])
        , char-class([110])
        , char-class([115])
        , char-class([116])
        , char-class([114])
        , char-class([97])
        , char-class([105])
        , char-class([110])
        , char-class([116])
        ]
      , lit("$ModConstraint")
      , no-attrs()
      )
    , 2728
    )
  , label(
      prod([lit(";")], cf(sort("OptSemiColon")), no-attrs())
    , 2727
    )
  , label(
      prod(
        [lit(";;")]
      , cf(sort("DoubleSemiColon"))
      , attrs([term(cons("DoubleSemiColon"))])
      )
    , 2726
    )
  , label(
      prod(
        [ cf(sort("MethodName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("PolyTypeExpr"))
        ]
      , cf(sort("MethodType"))
      , attrs([term(cons("MethodType"))])
      )
    , 2725
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([65])
        , char-class([110])
        , char-class([100])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([77])
        , char-class([111])
        , char-class([100])
        , char-class([117])
        , char-class([108])
        , char-class([101])
        , char-class([69])
        , char-class([120])
        , char-class([112])
        , char-class([114])
        ]
      , lit("$AndModuleTypeModuleExpr")
      , no-attrs()
      )
    , 2724
    )
  , label(
      prod(
        []
      , lex(
          iter-star(
            alt(
              char-class([range(0, 41), range(43, 255)])
            , alt(sort("Comment"), sort("Star"))
            )
          )
        )
      , no-attrs()
      )
    , 2723
    )
  , label(
      prod(
        [lit(".")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2722
    )
  , label(
      prod(
        [ lit("`")
        , cf(opt(layout()))
        , cf(sort("TagName"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("TagNamePattern"))])
      )
    , 2721
    )
  , label(
      prod(
        [lex(sort("SemiColon"))]
      , cf(sort("SemiColon"))
      , no-attrs()
      )
    , 2720
    )
  , label(
      prod(
        [ cf(iter(sort("Definition")))
        , cf(opt(layout()))
        , cf(sort("Definition"))
        ]
      , cf(iter(sort("Definition")))
      , no-attrs()
      )
    , 2719
    )
  , label(
      prod(
        [lit("mod")]
      , lex(
          alt(
            lit("mod")
          , alt(
              lit("land")
            , alt(
                lit("lor")
              , alt(
                  lit("lxor")
                , alt(lit("/"), alt(lit("%"), lit("*")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2718
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([73])
        , char-class([110])
        , char-class([102])
        , char-class([105])
        , char-class([120])
        , char-class([83])
        , char-class([121])
        , char-class([109])
        , char-class([98])
        , char-class([111])
        , char-class([108])
        , char-class([53])
        ]
      , lit("$InfixSymbol5")
      , no-attrs()
      )
    , 2717
    )
  , label(
      prod(
        [lex(sort("ToDownTo"))]
      , cf(sort("ToDownTo"))
      , no-attrs()
      )
    , 2716
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([83])
        , char-class([112])
        , char-class([101])
        , char-class([99])
        , char-class([105])
        , char-class([102])
        , char-class([105])
        , char-class([99])
        , char-class([97])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$Specification")
      , no-attrs()
      )
    , 2715
    )
  , label(
      prod(
        [ lit("type")
        , cf(opt(layout()))
        , cf(opt(sort("TypeParams")))
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("ModConstraint"))
      , attrs([term(cons("ModConsType1"))])
      )
    , 2714
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("ClassBinding"), lit("and")))
      , no-attrs()
      )
    , 2713
    )
  , label(
      prod(
        [ lex(
            seq(
              char-class([92])
            , [ char-class([120])
              , char-class(
                  [range(48, 57), range(65, 70), range(97, 102)]
                )
              , char-class(
                  [range(48, 57), range(65, 70), range(97, 102)]
                )
              ]
            )
          )
        ]
      , lex(sort("EscapeSequence"))
      , no-attrs()
      )
    , 2712
    )
  , label(
      prod(
        [ cf(iter-sep(sort("ModConstraint"), lit("and")))
        , cf(opt(layout()))
        , lit("and")
        , cf(opt(layout()))
        , cf(sort("ModConstraint"))
        ]
      , cf(iter-sep(sort("ModConstraint"), lit("and")))
      , no-attrs()
      )
    , 2711
    )
  , label(
      prod(
        [ cf(iter(sort("ClassFieldSpec")))
        , cf(opt(layout()))
        , cf(sort("ClassFieldSpec"))
        ]
      , cf(iter(sort("ClassFieldSpec")))
      , no-attrs()
      )
    , 2710
    )
  , label(
      prod(
        [lit("let")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2709
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([80])
        , char-class([114])
        , char-class([101])
        , char-class([102])
        , char-class([105])
        , char-class([120])
        , char-class([83])
        , char-class([121])
        , char-class([109])
        , char-class([98])
        , char-class([111])
        , char-class([108])
        ]
      , lit("$PrefixSymbol")
      , no-attrs()
      )
    , 2708
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([73])
        , char-class([110])
        , char-class([104])
        , char-class([101])
        , char-class([114])
        , char-class([105])
        , char-class([116])
        ]
      , lit("$Inherit")
      , no-attrs()
      )
    , 2707
    )
  , label(
      prod(
        [char-class([46]), char-class([46])]
      , lit("..")
      , no-attrs()
      )
    , 2706
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([68])
        , char-class([101])
        , char-class([102])
        , char-class([105])
        , char-class([110])
        , char-class([105])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        , char-class([79])
        , char-class([114])
        , char-class([69])
        , char-class([120])
        , char-class([112])
        , char-class([114])
        ]
      , lit("$DefinitionOrExpr")
      , no-attrs()
      )
    , 2705
    )
  , label(
      prod(
        [cf(sort("TypeEquation"))]
      , cf(opt(sort("TypeEquation")))
      , no-attrs()
      )
    , 2704
    )
  , label(
      prod(
        [lit("$LabelName")]
      , cf(sort("LabelName"))
      , attrs([term(cons("LabelName-Plhdr")), term(placeholder())])
      )
    , 2703
    )
  , label(
      prod(
        [lit("$OptBar")]
      , cf(sort("OptBar"))
      , attrs([term(cons("OptBar-Plhdr")), term(placeholder())])
      )
    , 2702
    )
  , label(
      prod(
        [ cf(iter-sep(sort("FieldDecl"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("FieldDecl"))
        ]
      , cf(iter-sep(sort("FieldDecl"), lit(";")))
      , no-attrs()
      )
    , 2701
    )
  , label(
      prod(
        [ cf(iter(sort("InnerPatternMatching")))
        , cf(opt(layout()))
        , cf(sort("InnerPatternMatching"))
        ]
      , cf(iter(sort("InnerPatternMatching")))
      , no-attrs()
      )
    , 2700
    )
  , label(
      prod([], cf(iter-star(sort("DefinitionOrExprList"))), no-attrs())
    , 2699
    )
  , label(
      prod(
        [cf(sort("LowerCaseIdent"))]
      , cf(sort("ValueName"))
      , no-attrs()
      )
    , 2698
    )
  , label(
      prod(
        [lit("$TypeConstrName")]
      , cf(sort("TypeConstrName"))
      , attrs([term(cons("TypeConstrName-Plhdr")), term(placeholder())])
      )
    , 2697
    )
  , label(
      prod(
        [char-class([116]), char-class([114]), char-class([121])]
      , lit("try")
      , no-attrs()
      )
    , 2696
    )
  , label(
      prod(
        [lit("&&")]
      , lex(sort("InfixSymbol5"))
      , attrs([reject()])
      )
    , 2695
    )
  , label(
      prod(
        [ lit("type")
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("PackageConstraint"))
      , attrs([term(cons("PackageConstraint"))])
      )
    , 2694
    )
  , label(
      prod(
        [cf(sort("FieldOrFieldEqPattern"))]
      , cf(iter-sep(sort("FieldOrFieldEqPattern"), lit(";")))
      , no-attrs()
      )
    , 2693
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([73])
        , char-class([110])
        , char-class([110])
        , char-class([101])
        , char-class([114])
        , char-class([80])
        , char-class([97])
        , char-class([116])
        , char-class([116])
        , char-class([101])
        , char-class([114])
        , char-class([110])
        , char-class([77])
        , char-class([97])
        , char-class([116])
        , char-class([99])
        , char-class([104])
        , char-class([105])
        , char-class([110])
        , char-class([103])
        ]
      , lit("$InnerPatternMatching")
      , no-attrs()
      )
    , 2692
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        ]
      , cf(sort("LabelNameOpt"))
      , attrs([term(cons("LabelNameQ"))])
      )
    , 2691
    )
  , label(
      prod(
        [lit("lsl")]
      , lex(
          alt(
            lit("lsl")
          , alt(lit("lsr"), alt(lit("asr"), lit("**")))
          )
        )
      , no-attrs()
      )
    , 2690
    )
  , label(
      prod(
        [lit("0B")]
      , lex(alt(lit("0b"), lit("0B")))
      , no-attrs()
      )
    , 2689
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 2688
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTuple2"))])
      )
    , 2687
    )
  , label(
      prod(
        []
      , lex(
          iter-star(
            char-class(
              [ range(48, 57)
              , range(65, 70)
              , 95
              , range(97, 102)
              ]
            )
          )
        )
      , no-attrs()
      )
    , 2686
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 2685
    )
  , label(
      prod(
        [cf(sort("TypeExpr"))]
      , cf(iter-sep(sort("TypeExpr"), lit("*")))
      , no-attrs()
      )
    , 2684
    )
  , label(
      prod(
        [ char-class([101])
        , char-class([120])
        , char-class([116])
        , char-class([101])
        , char-class([114])
        , char-class([110])
        , char-class([97])
        , char-class([108])
        ]
      , lit("external")
      , no-attrs()
      )
    , 2683
    )
  , label(
      prod(
        [lit("~")]
      , lex(alt(lit("?"), lit("~")))
      , no-attrs()
      )
    , 2682
    )
  , label(
      prod(
        [ cf(iter(sort("TypeConstr")))
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        ]
      , cf(iter(sort("TypeConstr")))
      , no-attrs()
      )
    , 2681
    )
  , label(
      prod(
        [lex(alt(lit("?"), lit("~")))]
      , cf(alt(lit("?"), lit("~")))
      , no-attrs()
      )
    , 2680
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , cf(sort("ColonTypeExprOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Parameter"))
      , attrs([term(cons("Param7"))])
      )
    , 2679
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([79])
        , char-class([112])
        , char-class([101])
        , char-class([114])
        , char-class([97])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        , char-class([115])
        ]
      , lit("$Operations")
      , no-attrs()
      )
    , 2678
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 2677
    )
  , label(
      prod(
        [lit("external")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2676
    )
  , label(
      prod(
        [ lex(
            iter(
              alt(
                lit("!")
              , alt(
                  lit("$")
                , alt(
                    lit("%")
                  , alt(
                      lit("&")
                    , alt(
                        lit("*")
                      , alt(
                          lit("+")
                        , alt(
                            lit("-")
                          , alt(
                              lit(".")
                            , alt(
                                lit("/")
                              , alt(
                                  lit(":")
                                , alt(
                                    lit("<")
                                  , alt(
                                      lit("=")
                                    , alt(
                                        lit(">")
                                      , alt(
                                          lit("?")
                                        , alt(
                                            lit("@")
                                          , alt(lit("|"), alt(lit("~"), lit("^")))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        ]
      , lex(sort("OperatorCharList"))
      , no-attrs()
      )
    , 2675
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 2674
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 2673
    )
  , label(
      prod(
        [lit("$LowerCaseIdent")]
      , cf(sort("LowerCaseIdent"))
      , attrs([term(cons("LowerCaseIdent-Plhdr")), term(placeholder())])
      )
    , 2672
    )
  , label(
      prod(
        [ lex(alt(lit("+"), lit("-")))
        , lex(iter-star(sort("OperatorChar")))
        ]
      , lex(sort("InfixSymbol3"))
      , no-attrs()
      )
    , 2671
    )
  , label(
      prod(
        [lit("$Operations")]
      , cf(sort("Operations"))
      , attrs([term(cons("Operations-Plhdr")), term(placeholder())])
      )
    , 2670
    )
  , label(
      prod([char-class([40])], lit("("), no-attrs())
    , 2669
    )
  , label(
      prod(
        [lit("type")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2668
    )
  , label(
      prod(
        [cf(sort("ExtendedModulePathDotOpt")), cf(opt(layout())), cf(sort("ModuleName"))]
      , cf(sort("ExtendedModulePath"))
      , attrs([term(cons("ExtendedModulePath1"))])
      )
    , 2667
    )
  , label(
      prod([lit(";")], lex(sort("SemiColon2")), no-attrs())
    , 2666
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("ModuleNameTypeParam"))
      , attrs([term(cons("ModuleNameTypeParam"))])
      )
    , 2665
    )
  , label(
      prod(
        [lex(sort("LowerCaseIdent"))]
      , lex(sort("Ident"))
      , no-attrs()
      )
    , 2664
    )
  , label(
      prod(
        [lit("$FieldAssign")]
      , cf(sort("FieldAssign"))
      , attrs([term(cons("FieldAssign-Plhdr")), term(placeholder())])
      )
    , 2663
    )
  , label(
      prod(
        [ lit("=")
        , cf(opt(layout()))
        , cf(opt(sort("Private")))
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldDecl"), lit(";")))
        , cf(opt(layout()))
        , cf(sort("OptSemiColon"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("TypeRepresentation"))
      , attrs([term(cons("FieldDecls"))])
      )
    , 2662
    )
  , label(
      prod(
        [ lit("~")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Parameter"))
      , attrs([term(cons("Param3"))])
      )
    , 2661
    )
  , label(
      prod(
        [lit("done")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2660
    )
  , label(
      prod(
        [ lit("[<")
        , cf(opt(layout()))
        , cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(iter-sep(sort("TagSpecFull"), lit("|")))
        , cf(opt(layout()))
        , lit(">")
        , cf(opt(layout()))
        , cf(iter(sort("QuoteTagName")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("PolymorphicVariantType"))
      , attrs([term(cons("PolymorphicVariantType4"))])
      )
    , 2659
    )
  , label(
      prod(
        [cf(iter(sort("AndModuleTypeModuleExpr")))]
      , cf(iter-star(sort("AndModuleTypeModuleExpr")))
      , no-attrs()
      )
    , 2658
    )
  , label(
      prod(
        [ lit("module")
        , cf(opt(layout()))
        , lit("type")
        , cf(opt(layout()))
        , cf(sort("ModTypeName"))
        ]
      , cf(sort("Definition"))
      , attrs([term(cons("ModuleType"))])
      )
    , 2657
    )
  , label(
      prod(
        [cf(iter(sort("AndTypeExpr")))]
      , cf(iter-star(sort("AndTypeExpr")))
      , no-attrs()
      )
    , 2656
    )
  , label(
      prod(
        [lit("lor")]
      , lex(
          alt(
            lit("lsl")
          , alt(
              lit("lsr")
            , alt(
                lit("asr")
              , alt(
                  lit("mod")
                , alt(lit("land"), alt(lit("lor"), lit("lxor")))
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2655
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([83])
        , char-class([112])
        , char-class([101])
        , char-class([99])
        , char-class([105])
        , char-class([102])
        , char-class([105])
        , char-class([99])
        , char-class([97])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$ClassSpecification")
      , no-attrs()
      )
    , 2654
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 2653
    )
  , label(
      prod(
        [lex(sort("LabelColon"))]
      , cf(sort("LabelColon"))
      , no-attrs()
      )
    , 2652
    )
  , label(
      prod(
        [char-class([range(9, 10), 13, 32])]
      , lex(layout())
      , no-attrs()
      )
    , 2651
    )
  , label(
      prod(
        [char-class([45]), char-class([62])]
      , lit("->")
      , no-attrs()
      )
    , 2650
    )
  , label(
      prod(
        [cf(sort("TagSpec"))]
      , cf(iter-sep(sort("TagSpec"), lit("|")))
      , no-attrs()
      )
    , 2649
    )
  , label(
      prod(
        []
      , cf(sort("ColonTypeExprOpt"))
      , attrs([term(cons("NoValue"))])
      )
    , 2648
    )
  , label(
      prod(
        [ char-class([102])
        , char-class([117])
        , char-class([110])
        , char-class([99])
        , char-class([116])
        , char-class([111])
        , char-class([114])
        ]
      , lit("functor")
      , no-attrs()
      )
    , 2647
    )
  , label(
      prod(
        [ cf(iter(sort("Parameter")))
        , cf(opt(layout()))
        , lit("when")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("MultipleMatching"))
      , attrs([term(cons("MultipleMatching"))])
      )
    , 2646
    )
  , label(
      prod(
        [lit("in")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2645
    )
  , label(
      prod(
        [lit("land")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2644
    )
  , label(
      prod(
        [lit("lsl")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2643
    )
  , label(
      prod(
        [cf(sort("LowerCaseIdent"))]
      , cf(sort("TypeConstrName"))
      , no-attrs()
      )
    , 2642
    )
  , label(
      prod(
        [lit("["), cf(opt(layout())), lit("]")]
      , cf(sort("Constant"))
      , attrs([term(cons("EmptyBrackets"))])
      )
    , 2641
    )
  , label(
      prod(
        [lit("begin")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2640
    )
  , label(
      prod(
        [lit("$ClassSpecification")]
      , cf(sort("ClassSpecification"))
      , attrs([term(cons("ClassSpecification-Plhdr")), term(placeholder())])
      )
    , 2639
    )
  , label(
      prod(
        [lit("$AndTypeExpr")]
      , cf(sort("AndTypeExpr"))
      , attrs([term(placeholder()), term(cons("AndTypeExpr-Plhdr"))])
      )
    , 2638
    )
  , label(
      prod(
        [lit("$ModuleNameDot")]
      , cf(sort("ModuleNameDot"))
      , attrs([term(cons("ModuleNameDot-Plhdr")), term(placeholder())])
      )
    , 2637
    )
  , label(
      prod(
        [lit("!")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2636
    )
  , label(
      prod([char-class([123])], lit("{"), no-attrs())
    , 2635
    )
  , label(
      prod(
        [ cf(sort("ExtendedModulePath"))
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("ExtendedModulePath"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("ExtendedModulePath"))
      , attrs([term(cons("ExtendedModulePath2"))])
      )
    , 2634
    )
  , label(
      prod(
        [lit("$ModuleNameTypeParam")]
      , cf(sort("ModuleNameTypeParam"))
      , attrs([term(placeholder()), term(cons("ModuleNameTypeParam-Plhdr"))])
      )
    , 2633
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([73])
        , char-class([110])
        , char-class([102])
        , char-class([105])
        , char-class([120])
        , char-class([83])
        , char-class([121])
        , char-class([109])
        , char-class([98])
        , char-class([111])
        , char-class([108])
        , char-class([51])
        ]
      , lit("$InfixSymbol3")
      , no-attrs()
      )
    , 2632
    )
  , label(
      prod(
        [lit("$SpecificationSemi")]
      , cf(sort("SpecificationSemi"))
      , attrs([term(cons("SpecificationSemi-Plhdr")), term(placeholder())])
      )
    , 2631
    )
  , label(
      prod(
        [lit("^")]
      , lex(alt(lit("@"), lit("^")))
      , no-attrs()
      )
    , 2630
    )
  , label(
      prod(
        [lit("?")]
      , lex(alt(lit("?"), lit("~")))
      , no-attrs()
      )
    , 2629
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("ListCons"))])
      )
    , 2628
    )
  , label(
      prod(
        [lit("$Virtual")]
      , cf(sort("Virtual"))
      , attrs([term(placeholder()), term(cons("Virtual-Plhdr"))])
      )
    , 2627
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 2626
    )
  , label(
      prod(
        [cf(iter-sep(sort("ConstrDecl"), lit("|")))]
      , cf(iter-star-sep(sort("ConstrDecl"), lit("|")))
      , no-attrs()
      )
    , 2625
    )
  , label(
      prod(
        [cf(sort("Pattern"))]
      , cf(sort("Parameter"))
      , attrs([term(cons("PatternParam"))])
      )
    , 2624
    )
  , label(
      prod(
        [char-class([102]), char-class([111]), char-class([114])]
      , lit("for")
      , no-attrs()
      )
    , 2623
    )
  , label(
      prod(
        [lex(sort("CharLiteral"))]
      , cf(sort("CharLiteral"))
      , no-attrs()
      )
    , 2622
    )
  , label(
      prod(
        [lit("with")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2621
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        ]
      , lit("$ClassName")
      , no-attrs()
      )
    , 2620
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldOrFieldEqPattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRec2"))])
      )
    , 2619
    )
  , label(
      prod(
        [ char-class([118])
        , char-class([105])
        , char-class([114])
        , char-class([116])
        , char-class([117])
        , char-class([97])
        , char-class([108])
        ]
      , lit("virtual")
      , no-attrs()
      )
    , 2618
    )
  , label(
      prod(
        [lit("$")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2617
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 2616
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([83])
        , char-class([112])
        , char-class([101])
        , char-class([99])
        ]
      , lit("$ClassSpec")
      , no-attrs()
      )
    , 2615
    )
  , label(
      prod(
        [lit("$TagName")]
      , cf(sort("TagName"))
      , attrs([term(cons("TagName-Plhdr")), term(placeholder())])
      )
    , 2614
    )
  , label(
      prod(
        [lit("`"), cf(opt(layout())), cf(sort("TagName"))]
      , cf(sort("QuoteTagName"))
      , attrs([term(cons("TagName"))])
      )
    , 2613
    )
  , label(
      prod(
        [cf(iter(sort("SpecificationSemi")))]
      , cf(iter-star(sort("SpecificationSemi")))
      , no-attrs()
      )
    , 2612
    )
  , label(
      prod([lit("to")], lex(sort("ToDownTo")), no-attrs())
    , 2611
    )
  , label(
      prod(
        [ cf(opt(sort("Mutable")))
        , cf(opt(layout()))
        , cf(sort("FieldName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("PolyTypeExpr"))
        ]
      , cf(sort("FieldDecl"))
      , attrs([term(cons("FieldDecl"))])
      )
    , 2610
    )
  , label(
      prod(
        [ lit("val")
        , cf(opt(layout()))
        , lit("virtual")
        , cf(opt(layout()))
        , cf(sort("Mutable"))
        , cf(opt(layout()))
        , cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("ClassField"))
      , attrs([term(cons("VirtualValue2"))])
      )
    , 2609
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("ClassExpr"))
      , attrs([term(cons("Object"))])
      )
    , 2608
    )
  , label(
      prod(
        [lit("do")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2607
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([101])
        , char-class([116])
        , char-class([104])
        , char-class([111])
        , char-class([100])
        ]
      , lit("$Method")
      , no-attrs()
      )
    , 2606
    )
  , label(
      prod(
        [cf(iter-sep(sort("TypeParam"), lit(",")))]
      , cf(iter-star-sep(sort("TypeParam"), lit(",")))
      , no-attrs()
      )
    , 2605
    )
  , label(
      prod(
        [ lex(
            seq(
              char-class([92])
            , [ char-class([range(48, 57)])
              , char-class([range(48, 57)])
              , char-class([range(48, 57)])
              ]
            )
          )
        ]
      , lex(sort("EscapeSequence"))
      , no-attrs()
      )
    , 2604
    )
  , label(
      prod(
        [char-class([108]), char-class([115]), char-class([114])]
      , lit("lsr")
      , no-attrs()
      )
    , 2603
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([69])
        , char-class([120])
        , char-class([112])
        , char-class([114])
        ]
      , lit("$Expr")
      , no-attrs()
      )
    , 2602
    )
  , label(
      prod(
        [ cf(sort("Val"))
        , cf(opt(layout()))
        , cf(opt(sort("Mutable")))
        , cf(opt(layout()))
        , cf(sort("InstVarName"))
        , cf(opt(layout()))
        , cf(sort("ColonTypeExprOpt"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("ClassField"))
      , attrs([term(cons("ClassValue"))])
      )
    , 2601
    )
  , label(
      prod(
        [lit("method!")]
      , cf(sort("Method"))
      , attrs([term(cons("Method2"))])
      )
    , 2600
    )
  , label(
      prod(
        [ cf(iter(sort("TypeConstrName")))
        , cf(opt(layout()))
        , cf(sort("TypeConstrName"))
        ]
      , cf(iter(sort("TypeConstrName")))
      , no-attrs()
      )
    , 2599
    )
  , label(
      prod(
        []
      , cf(sort("DotModulePathOpt"))
      , attrs([term(cons("NoModulePath"))])
      )
    , 2598
    )
  , label(
      prod(
        [lit("asr")]
      , lex(
          alt(
            lit("lsl")
          , alt(lit("lsr"), alt(lit("asr"), lit("**")))
          )
        )
      , no-attrs()
      )
    , 2597
    )
  , label(
      prod(
        [lit("~"), cf(opt(layout())), cf(sort("LabelName"))]
      , cf(sort("Parameter"))
      , attrs([term(cons("Param1"))])
      )
    , 2596
    )
  , label(
      prod(
        [lit("lor")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2595
    )
  , label(
      prod([char-class([91])], lit("["), no-attrs())
    , 2594
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([80])
        , char-class([97])
        , char-class([114])
        , char-class([97])
        , char-class([109])
        , char-class([115])
        ]
      , lit("$TypeParams")
      , no-attrs()
      )
    , 2593
    )
  , label(
      prod(
        [cf(sort("SpecificationSemi"))]
      , cf(iter(sort("SpecificationSemi")))
      , no-attrs()
      )
    , 2592
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 2591
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 2590
    )
  , label(
      prod(
        [ lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , cf(iter-star(sort("ModuleNameTypeParam")))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        ]
      , cf(sort("Specification"))
      , attrs([term(cons("ModuleDef2"))])
      )
    , 2589
    )
  , label(
      prod(
        [cf(sort("Specification")), cf(opt(layout())), cf(sort("DoubleSemiColonOpt"))]
      , cf(sort("SpecificationSemi"))
      , attrs([term(cons("Specification"))])
      )
    , 2588
    )
  , label(
      prod(
        [lit("$ClassPath")]
      , cf(sort("ClassPath"))
      , attrs([term(placeholder()), term(cons("ClassPath-Plhdr"))])
      )
    , 2587
    )
  , label(
      prod([char-class([42])], lit("*"), no-attrs())
    , 2586
    )
  , label(
      prod(
        [lit("object")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2585
    )
  , label(
      prod(
        [lit("-"), lex(sort("PositiveFloat"))]
      , lex(sort("NegativeFloat"))
      , no-attrs()
      )
    , 2584
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AnyTypexpr"))])
      )
    , 2583
    )
  , label(
      prod(
        [lit("&")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2582
    )
  , label(
      prod(
        [lit("functor")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2581
    )
  , label(
      prod(
        [lit("and")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2580
    )
  , label(
      prod(
        [lit("to")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2579
    )
  , label(
      prod(
        [ cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(iter-sep(sort("TypeExpr"), lit(",")))
      , no-attrs()
      )
    , 2578
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([111])
        , char-class([108])
        , char-class([111])
        , char-class([110])
        , char-class([80])
        , char-class([97])
        , char-class([99])
        , char-class([107])
        , char-class([97])
        , char-class([103])
        , char-class([101])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([79])
        , char-class([112])
        , char-class([116])
        ]
      , lit("$ColonPackageTypeOpt")
      , no-attrs()
      )
    , 2577
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([111])
        , char-class([110])
        , char-class([115])
        , char-class([116])
        , char-class([114])
        , char-class([68])
        , char-class([101])
        , char-class([99])
        , char-class([108])
        ]
      , lit("$ConstrDecl")
      , no-attrs()
      )
    , 2576
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 2575
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([80])
        , char-class([111])
        , char-class([115])
        , char-class([105])
        , char-class([116])
        , char-class([105])
        , char-class([118])
        , char-class([101])
        , char-class([70])
        , char-class([108])
        , char-class([111])
        , char-class([97])
        , char-class([116])
        ]
      , lit("$PositiveFloat")
      , no-attrs()
      )
    , 2574
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([76])
        , char-class([111])
        , char-class([119])
        , char-class([101])
        , char-class([114])
        , char-class([67])
        , char-class([97])
        , char-class([115])
        , char-class([101])
        , char-class([73])
        , char-class([100])
        , char-class([101])
        , char-class([110])
        , char-class([116])
        ]
      , lit("$LowerCaseIdent")
      , no-attrs()
      )
    , 2573
    )
  , label(
      prod(
        [ char-class([116])
        , char-class([104])
        , char-class([101])
        , char-class([110])
        ]
      , lit("then")
      , no-attrs()
      )
    , 2572
    )
  , label(
      prod(
        [lit("mutable")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2571
    )
  , label(
      prod(
        [lit("lazy")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2570
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 2569
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("Expr"), lit(";")))
      , no-attrs()
      )
    , 2568
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(iter-sep(sort("Pattern"), lit(";")))
      , no-attrs()
      )
    , 2567
    )
  , label(
      prod(
        [cf(sort("CapitalizedIdent"))]
      , cf(sort("ConstrName"))
      , no-attrs()
      )
    , 2566
    )
  , label(
      prod([], cf(opt(sort("Variance"))), no-attrs())
    , 2565
    )
  , label(
      prod(
        [lit("for")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2564
    )
  , label(
      prod(
        [cf(iter(sort("Arg")))]
      , cf(iter-star(sort("Arg")))
      , no-attrs()
      )
    , 2563
    )
  , label(
      prod(
        [lit("$ToDownTo")]
      , cf(sort("ToDownTo"))
      , attrs([term(cons("ToDownTo-Plhdr")), term(placeholder())])
      )
    , 2562
    )
  , label(
      prod(
        [ lit("=")
        , cf(opt(layout()))
        , cf(opt(sort("Private")))
        , cf(opt(layout()))
        , cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(iter-sep(sort("ConstrDecl"), lit("|")))
        ]
      , cf(sort("TypeRepresentation"))
      , attrs([term(cons("ConstrDecls"))])
      )
    , 2561
    )
  , label(
      prod(
        [cf(sort("TypeParam"))]
      , cf(iter-sep(sort("TypeParam"), lit(",")))
      , no-attrs()
      )
    , 2560
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(sort("Arg"))
      , no-attrs()
      )
    , 2559
    )
  , label(
      prod(
        [char-class([48]), char-class([120])]
      , lit("0x")
      , no-attrs()
      )
    , 2558
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([73])
        , char-class([110])
        , char-class([102])
        , char-class([105])
        , char-class([120])
        , char-class([83])
        , char-class([121])
        , char-class([109])
        , char-class([98])
        , char-class([111])
        , char-class([108])
        , char-class([49])
        ]
      , lit("$InfixSymbol1")
      , no-attrs()
      )
    , 2557
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([70])
        , char-class([105])
        , char-class([101])
        , char-class([108])
        , char-class([100])
        , char-class([83])
        , char-class([112])
        , char-class([101])
        , char-class([99])
        ]
      , lit("$ClassFieldSpec")
      , no-attrs()
      )
    , 2556
    )
  , label(
      prod(
        [lit("%")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2555
    )
  , label(
      prod(
        [lex(alt(lit("0o"), lit("0O")))]
      , cf(alt(lit("0o"), lit("0O")))
      , no-attrs()
      )
    , 2554
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("Pattern"))
      , attrs([term(cons("WildCard"))])
      )
    , 2553
    )
  , label(
      prod(
        [cf(sort("ClassSpecification"))]
      , cf(sort("Specification"))
      , attrs([term(cons("ClassSpec"))])
      )
    , 2552
    )
  , label(
      prod(
        [lit("?"), lex(sort("LowerCaseIdent")), lit(":")]
      , lex(sort("OptLabelColon"))
      , no-attrs()
      )
    , 2551
    )
  , label(
      prod([char-class([59])], lit(";"), no-attrs())
    , 2550
    )
  , label(
      prod(
        [lit("$ModuleName")]
      , cf(sort("ModuleName"))
      , attrs([term(cons("ModuleName-Plhdr")), term(placeholder())])
      )
    , 2549
    )
  , label(
      prod(
        [ lex(opt(lit("-")))
        , char-class([range(48, 57)])
        , lex(iter-star(char-class([range(48, 57), 95])))
        , lit(".")
        , lex(iter-star(char-class([range(48, 57), 95])))
        ]
      , lex(sort("FloatLiteral"))
      , no-attrs()
      )
    , 2548
    )
  , label(
      prod([char-class([125])], lit("}"), no-attrs())
    , 2547
    )
  , label(
      prod(
        [ lex(iter(char-class([range(48, 49), 95])))
        , char-class([range(48, 49), 95])
        ]
      , lex(iter(char-class([range(48, 49), 95])))
      , no-attrs()
      )
    , 2546
    )
  , label(
      prod(
        [cf(sort("ModuleName")), cf(opt(layout())), lit(".")]
      , cf(sort("ModuleNameDot"))
      , attrs([term(cons("ModuleName"))])
      )
    , 2545
    )
  , label(
      prod(
        [char-class([42]), char-class([42])]
      , lit("**")
      , no-attrs()
      )
    , 2544
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([68])
        , char-class([101])
        , char-class([102])
        , char-class([105])
        , char-class([110])
        , char-class([105])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$ClassTypeDefinition")
      , no-attrs()
      )
    , 2543
    )
  , label(
      prod(
        [lit("when")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2542
    )
  , label(
      prod(
        [cf(sort("Arg"))]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 2541
    )
  , label(
      prod(
        [ char-class([92])
        , char-class(
            [34, 39, 92, 98, 110, 114, 116]
          )
        ]
      , lex(
          seq(
            char-class([92])
          , [char-class(
               [34, 39, 92, 98, 110, 114, 116]
             )]
          )
        )
      , no-attrs()
      )
    , 2540
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("TagSpec"), lit("|")))
      , no-attrs()
      )
    , 2539
    )
  , label(
      prod([], cf(iter-star(sort("InnerPatternMatching"))), no-attrs())
    , 2538
    )
  , label(
      prod(
        [cf(sort("ModuleNameDot"))]
      , cf(iter(sort("ModuleNameDot")))
      , no-attrs()
      )
    , 2537
    )
  , label(
      prod(
        [lit("$Val")]
      , cf(sort("Val"))
      , attrs([term(cons("Val-Plhdr")), term(placeholder())])
      )
    , 2536
    )
  , label(prod([], cf(sort("OptSemiColon")), no-attrs()), 2535)
  , label(
      prod(
        [ lit("val")
        , cf(opt(layout()))
        , cf(opt(sort("Mutable")))
        , cf(opt(layout()))
        , lit("virtual")
        , cf(opt(layout()))
        , cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("ClassField"))
      , attrs([term(cons("VirtualValue"))])
      )
    , 2534
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("as")
        , cf(opt(layout()))
        , cf(sort("ValueName"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternAs"))])
      )
    , 2533
    )
  , label(
      prod(
        [char-class([range(48, 49), 95])]
      , lex(iter(char-class([range(48, 49), 95])))
      , no-attrs()
      )
    , 2532
    )
  , label(
      prod(
        [ cf(iter-sep(sort("TagSpecFull"), lit("|")))
        , cf(opt(layout()))
        , lit("|")
        , cf(opt(layout()))
        , cf(sort("TagSpecFull"))
        ]
      , cf(iter-sep(sort("TagSpecFull"), lit("|")))
      , no-attrs()
      )
    , 2531
    )
  , label(
      prod(
        [lit("lxor")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2530
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternArray"))])
      )
    , 2529
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2528
    )
  , label(
      prod(
        [ char-class([range(48, 57)])
        , lex(iter-star(char-class([range(48, 57), 95])))
        , char-class([69, 101])
        , lex(opt(char-class([43, 45])))
        , char-class([range(48, 57)])
        , lex(iter-star(char-class([range(48, 57), 95])))
        ]
      , lex(sort("PositiveFloat"))
      , no-attrs()
      )
    , 2527
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("ConstrDecl"))
      , attrs([term(cons("ConstrDecl1"))])
      )
    , 2526
    )
  , label(
      prod(
        [ lex(
            alt(
              lit("=")
            , alt(
                lit("<")
              , alt(
                  lit(">")
                , alt(lit("|"), alt(lit("&"), lit("$")))
                )
              )
            )
          )
        ]
      , cf(
          alt(
            lit("=")
          , alt(
              lit("<")
            , alt(
                lit(">")
              , alt(lit("|"), alt(lit("&"), lit("$")))
              )
            )
          )
        )
      , no-attrs()
      )
    , 2525
    )
  , label(
      prod(
        [lit("$Inherit")]
      , cf(sort("Inherit"))
      , attrs([term(cons("Inherit-Plhdr")), term(placeholder())])
      )
    , 2524
    )
  , label(
      prod(
        [cf(iter-sep(sort("TypeExpr"), lit(",")))]
      , cf(iter-star-sep(sort("TypeExpr"), lit(",")))
      , no-attrs()
      )
    , 2523
    )
  , label(
      prod(
        [lit(";;"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("DefinitionOrExprList"))
      , attrs([term(cons("Expr"))])
      )
    , 2522
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([73])
        , char-class([110])
        , char-class([102])
        , char-class([111])
        , char-class([114])
        , char-class([109])
        , char-class([97])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$TypeInformation")
      , no-attrs()
      )
    , 2521
    )
  , label(
      prod(
        [lit("$MethodType")]
      , cf(sort("MethodType"))
      , attrs([term(cons("MethodType-Plhdr")), term(placeholder())])
      )
    , 2520
    )
  , label(
      prod(
        [cf(sort("CharLiteral"))]
      , cf(sort("Constant"))
      , attrs([term(cons("CharLiteral"))])
      )
    , 2519
    )
  , label(
      prod(
        [char-class([48]), char-class([88])]
      , lit("0X")
      , no-attrs()
      )
    , 2518
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([111])
        , char-class([110])
        , char-class([115])
        , char-class([116])
        , char-class([114])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        ]
      , lit("$ConstrName")
      , no-attrs()
      )
    , 2517
    )
  , label(
      prod(
        [lit("0o")]
      , lex(alt(lit("0o"), lit("0O")))
      , no-attrs()
      )
    , 2516
    )
  , label(
      prod(
        [char-class([range(0, 41), range(43, 255)])]
      , lex(
          alt(
            char-class([range(0, 41), range(43, 255)])
          , alt(sort("Comment"), sort("Star"))
          )
        )
      , no-attrs()
      )
    , 2515
    )
  , label(
      prod(
        [lit("$InfixSymbol6")]
      , cf(sort("InfixSymbol6"))
      , attrs([term(placeholder()), term(cons("InfixSymbol6-Plhdr"))])
      )
    , 2514
    )
  , label(
      prod(
        [lit("$ExceptionDefinition")]
      , cf(sort("ExceptionDefinition"))
      , attrs([term(cons("ExceptionDefinition-Plhdr")), term(placeholder())])
      )
    , 2513
    )
  , label(
      prod([char-class([93])], lit("]"), no-attrs())
    , 2512
    )
  , label(
      prod(
        [lit("$PositiveInt")]
      , cf(sort("PositiveInt"))
      , attrs([term(placeholder()), term(cons("PositiveInt-Plhdr"))])
      )
    , 2511
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Expr"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 2510
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 2509
    )
  , label(
      prod(
        [lex(sort("UnMinus"))]
      , cf(sort("UnMinus"))
      , no-attrs()
      )
    , 2508
    )
  , label(
      prod(
        [ char-class([100])
        , char-class([111])
        , char-class([119])
        , char-class([110])
        , char-class([116])
        , char-class([111])
        ]
      , lit("downto")
      , no-attrs()
      )
    , 2507
    )
  , label(
      prod(
        [lit("lsr")]
      , lex(
          alt(
            lit("lsl")
          , alt(lit("lsr"), alt(lit("asr"), lit("**")))
          )
        )
      , no-attrs()
      )
    , 2506
    )
  , label(
      prod(
        [lex(alt(lit("||"), lit("or")))]
      , lex(sort("InfixSymbol7"))
      , no-attrs()
      )
    , 2505
    )
  , label(
      prod(
        [cf(iter(sort("AndModuleType")))]
      , cf(iter-star(sort("AndModuleType")))
      , no-attrs()
      )
    , 2504
    )
  , label(
      prod(
        [ char-class([105])
        , char-class([110])
        , char-class([99])
        , char-class([108])
        , char-class([117])
        , char-class([100])
        , char-class([101])
        ]
      , lit("include")
      , no-attrs()
      )
    , 2503
    )
  , label(
      prod(
        [ lit("struct")
        , cf(opt(layout()))
        , cf(iter(sort("Definition")))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("ModuleExpr"))
      , attrs([term(cons("Struct2"))])
      )
    , 2502
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 2501
    )
  , label(prod([], cf(sort("OptTypeExprList")), no-attrs()), 2500)
  , label(
      prod(
        [char-class([118]), char-class([97]), char-class([108])]
      , lit("val")
      , no-attrs()
      )
    , 2499
    )
  , label(
      prod(
        []
      , cf(iter-star-sep(sort("PackageConstraint"), lit("and")))
      , no-attrs()
      )
    , 2498
    )
  , label(
      prod(
        [cf(sort("LetBinding"))]
      , cf(iter-sep(sort("LetBinding"), lit("and")))
      , no-attrs()
      )
    , 2497
    )
  , label(
      prod(
        [char-class([115]), char-class([105]), char-class([103])]
      , lit("sig")
      , no-attrs()
      )
    , 2496
    )
  , label(
      prod(
        [lit("true")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2495
    )
  , label(
      prod(
        [lit("open")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2494
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldOrFieldEqPattern"), lit(";")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRec"))])
      )
    , 2493
    )
  , label(
      prod(
        [cf(iter-star(sort("ClassField")))]
      , cf(sort("ClassBody"))
      , attrs([term(cons("ClassBody"))])
      )
    , 2492
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        ]
      , cf(sort("Definition"))
      , attrs([term(cons("LetRecDef"))])
      )
    , 2491
    )
  , label(
      prod(
        [lex(iter(char-class([range(48, 49), 95])))]
      , lex(iter-star(char-class([range(48, 49), 95])))
      , no-attrs()
      )
    , 2490
    )
  , label(
      prod(
        [lex(iter(char-class([range(48, 49), 95])))]
      , cf(iter(char-class([range(48, 49), 95])))
      , no-attrs()
      )
    , 2489
    )
  , label(
      prod(
        [lit("~"), lex(sort("LowerCaseIdent"))]
      , lex(sort("Label"))
      , no-attrs()
      )
    , 2488
    )
  , label(
      prod(
        [lex(iter-star(char-class([range(48, 49), 95])))]
      , cf(iter-star(char-class([range(48, 49), 95])))
      , no-attrs()
      )
    , 2487
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("ModuleExpr"))
      , attrs([term(bracket())])
      )
    , 2486
    )
  , label(
      prod(
        [lit("virtual")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2485
    )
  , label(
      prod([char-class([44])], lit(","), no-attrs())
    , 2484
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , cf(iter-star(sort("Parameter")))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("PolyTypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("LetBinding"))
      , attrs([term(cons("LetBinding1"))])
      )
    , 2483
    )
  , label(
      prod(
        [char-class([108]), char-class([101]), char-class([116])]
      , lit("let")
      , no-attrs()
      )
    , 2482
    )
  , label(
      prod(
        [cf(sort("FieldAssign"))]
      , cf(iter-sep(sort("FieldAssign"), lit(";")))
      , no-attrs()
      )
    , 2481
    )
  , label(
      prod(
        [lit("then")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2480
    )
  , label(
      prod(
        [cf(sort("ModulePathDotOpt")), cf(opt(layout())), cf(sort("ClassName"))]
      , cf(sort("ClassPath"))
      , attrs([term(cons("ClassPath"))])
      )
    , 2479
    )
  , label(
      prod(
        [lit("open"), cf(opt(layout())), cf(sort("ModulePath"))]
      , cf(sort("Specification"))
      , attrs([term(cons("Open"))])
      )
    , 2478
    )
  , label(
      prod(
        [cf(iter-sep(sort("TypeExpr"), lit("*")))]
      , cf(iter-star-sep(sort("TypeExpr"), lit("*")))
      , no-attrs()
      )
    , 2477
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("OptTypeExpr"))
      , attrs([term(cons("TypeExpr"))])
      )
    , 2476
    )
  , label(
      prod(
        [cf(sort("AndModuleType"))]
      , cf(iter(sort("AndModuleType")))
      , no-attrs()
      )
    , 2475
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 2474
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 2473
    )
  , label(
      prod(
        [cf(sort("TypeExpr"))]
      , cf(iter-sep(sort("TypeExpr"), lit(",")))
      , no-attrs()
      )
    , 2472
    )
  , label(
      prod(
        [lit("$ClassBodyType")]
      , cf(sort("ClassBodyType"))
      , attrs([term(cons("ClassBodyType-Plhdr")), term(placeholder())])
      )
    , 2471
    )
  , label(
      prod(
        [ lex(
            seq(
              char-class([92])
            , [char-class(
                 [34, 39, 92, 98, 110, 114, 116]
               )]
            )
          )
        ]
      , cf(
          seq(
            char-class([92])
          , [char-class(
               [34, 39, 92, 98, 110, 114, 116]
             )]
          )
        )
      , no-attrs()
      )
    , 2470
    )
  , label(
      prod(
        [lit("inherit")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2469
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("TypeConstrName"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternHash"))])
      )
    , 2468
    )
  , label(
      prod(
        [lit("$InfixSymbol4")]
      , cf(sort("InfixSymbol4"))
      , attrs([term(cons("InfixSymbol4-Plhdr")), term(placeholder())])
      )
    , 2467
    )
  , label(
      prod([char-class([61])], lit("="), no-attrs())
    , 2466
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("ClassExpr"))
        ]
      , cf(sort("ClassExpr"))
      , attrs([term(cons("LetRecClass"))])
      )
    , 2465
    )
  , label(
      prod(
        [cf(sort("LowerCaseIdent"))]
      , cf(sort("FieldName"))
      , no-attrs()
      )
    , 2464
    )
  , label(
      prod(
        [lit("$TypeEquation")]
      , cf(sort("TypeEquation"))
      , attrs([term(placeholder()), term(cons("TypeEquation-Plhdr"))])
      )
    , 2463
    )
  , label(
      prod(
        [lit("and")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2462
    )
  , label(
      prod([], cf(iter-star(sort("Definition"))), no-attrs())
    , 2461
    )
  , label(
      prod(
        [ cf(iter-sep(sort("ClassSpec"), lit("and")))
        , cf(opt(layout()))
        , lit("and")
        , cf(opt(layout()))
        , cf(sort("ClassSpec"))
        ]
      , cf(iter-sep(sort("ClassSpec"), lit("and")))
      , no-attrs()
      )
    , 2460
    )
  , label(
      prod([], cf(iter-star(sort("Arg"))), no-attrs())
    , 2459
    )
  , label(
      prod(
        [lit("external")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2458
    )
  , label(
      prod([], lex(iter-star(sort("StringChar"))), no-attrs())
    , 2457
    )
  , label(
      prod(
        [lit("^")]
      , lex(
          alt(
            lit("!")
          , alt(
              lit("$")
            , alt(
                lit("%")
              , alt(
                  lit("&")
                , alt(
                    lit("*")
                  , alt(
                      lit("+")
                    , alt(
                        lit("-")
                      , alt(
                          lit(".")
                        , alt(
                            lit("/")
                          , alt(
                              lit(":")
                            , alt(
                                lit("<")
                              , alt(
                                  lit("=")
                                , alt(
                                    lit(">")
                                  , alt(
                                      lit("?")
                                    , alt(
                                        lit("@")
                                      , alt(lit("|"), alt(lit("~"), lit("^")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2456
    )
  , label(
      prod(
        [cf(iter-sep(sort("LetBinding"), lit("and")))]
      , cf(iter-star-sep(sort("LetBinding"), lit("and")))
      , no-attrs()
      )
    , 2455
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        ]
      , cf(sort("Definition"))
      , attrs([term(cons("LetDef"))])
      )
    , 2454
    )
  , label(
      prod(
        [lit("else")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2453
    )
  , label(
      prod(
        [ lit("external")
        , cf(opt(layout()))
        , cf(sort("ValueName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ExternalDeclaration"))
        ]
      , cf(sort("Definition"))
      , attrs([term(cons("External"))])
      )
    , 2452
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 2451
    )
  , label(
      prod(
        [ lit("functor")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        ]
      , cf(sort("ModuleType"))
      , attrs([term(cons("Functor"))])
      )
    , 2450
    )
  , label(
      prod(
        [char-class([43, 45])]
      , lex(opt(char-class([43, 45])))
      , no-attrs()
      )
    , 2449
    )
  , label(
      prod(
        [ cf(iter(sort("Parameter")))
        , cf(opt(layout()))
        , cf(sort("Parameter"))
        ]
      , cf(iter(sort("Parameter")))
      , no-attrs()
      )
    , 2448
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2447
    )
  , label(
      prod(
        [lit("$SemiColon")]
      , cf(sort("SemiColon"))
      , attrs([term(cons("SemiColon-Plhdr")), term(placeholder())])
      )
    , 2446
    )
  , label(
      prod(
        [lit("initializer"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("ClassField"))
      , attrs([term(cons("Initializer"))])
      )
    , 2445
    )
  , label(
      prod(
        [lit("lazy")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2444
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([73])
        , char-class([100])
        , char-class([101])
        , char-class([110])
        , char-class([116])
        ]
      , lit("$Ident")
      , no-attrs()
      )
    , 2443
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([97])
        , char-class([103])
        , char-class([83])
        , char-class([112])
        , char-class([101])
        , char-class([99])
        , char-class([70])
        , char-class([117])
        , char-class([108])
        , char-class([108])
        ]
      , lit("$TagSpecFull")
      , no-attrs()
      )
    , 2442
    )
  , label(
      prod([char-class([95])], lit("_"), no-attrs())
    , 2441
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([assoc(right()), term(cons("Arrow"))])
      )
    , 2440
    )
  , label(
      prod(
        [cf(sort("AndTypeExpr"))]
      , cf(iter(sort("AndTypeExpr")))
      , no-attrs()
      )
    , 2439
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([67])
        , char-class([111])
        , char-class([110])
        , char-class([115])
        , char-class([116])
        , char-class([114])
        , char-class([97])
        , char-class([105])
        , char-class([110])
        , char-class([116])
        ]
      , lit("$TypeConstraint")
      , no-attrs()
      )
    , 2438
    )
  , label(
      prod(
        [lit("mutable")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2437
    )
  , label(
      prod(
        [lit("exception"), cf(opt(layout())), cf(sort("ConstrDecl"))]
      , cf(sort("Specification"))
      , attrs([term(cons("ExceptionDef"))])
      )
    , 2436
    )
  , label(
      prod(
        [ cf(iter-sep(sort("ConstrDecl"), lit("|")))
        , cf(opt(layout()))
        , lit("|")
        , cf(opt(layout()))
        , cf(sort("ConstrDecl"))
        ]
      , cf(iter-sep(sort("ConstrDecl"), lit("|")))
      , no-attrs()
      )
    , 2435
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([108])
        , char-class([97])
        , char-class([115])
        , char-class([115])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([68])
        , char-class([101])
        , char-class([102])
        ]
      , lit("$ClassTypeDef")
      , no-attrs()
      )
    , 2434
    )
  , label(
      prod(
        [lit("$InnerPatternMatching")]
      , cf(sort("InnerPatternMatching"))
      , attrs([term(placeholder()), term(cons("InnerPatternMatching-Plhdr"))])
      )
    , 2433
    )
  , label(
      prod(
        [ lit("method")
        , cf(opt(layout()))
        , cf(opt(sort("Private")))
        , cf(opt(layout()))
        , cf(opt(sort("Virtual")))
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("PolyTypeExpr"))
        ]
      , cf(sort("ClassFieldSpec"))
      , attrs([term(cons("Method"))])
      )
    , 2432
    )
  , label(
      prod(
        [lit("exception")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2431
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([70])
        , char-class([105])
        , char-class([101])
        , char-class([108])
        , char-class([100])
        , char-class([79])
        , char-class([114])
        , char-class([70])
        , char-class([105])
        , char-class([101])
        , char-class([108])
        , char-class([100])
        , char-class([69])
        , char-class([113])
        , char-class([80])
        , char-class([97])
        , char-class([116])
        , char-class([116])
        , char-class([101])
        , char-class([114])
        , char-class([110])
        ]
      , lit("$FieldOrFieldEqPattern")
      , no-attrs()
      )
    , 2430
    )
  , label(
      prod(
        [cf(sort("Mutable"))]
      , cf(opt(sort("Mutable")))
      , no-attrs()
      )
    , 2429
    )
  , label(
      prod(
        [cf(sort("LowerCaseIdent"))]
      , cf(sort("ClassName"))
      , no-attrs()
      )
    , 2428
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([81])
        , char-class([117])
        , char-class([111])
        , char-class([116])
        , char-class([101])
        , char-class([84])
        , char-class([97])
        , char-class([103])
        , char-class([78])
        , char-class([97])
        , char-class([109])
        , char-class([101])
        ]
      , lit("$QuoteTagName")
      , no-attrs()
      )
    , 2427
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        , char-class([69])
        , char-class([120])
        , char-class([112])
        , char-class([114])
        ]
      , lit("$TypeExpr")
      , no-attrs()
      )
    , 2426
    )
  , label(
      prod(
        [ lit("val")
        , cf(opt(layout()))
        , cf(opt(sort("Mutable")))
        , cf(opt(layout()))
        , cf(opt(sort("Virtual")))
        , cf(opt(layout()))
        , cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("PolyTypeExpr"))
        ]
      , cf(sort("ClassFieldSpec"))
      , attrs([term(cons("Val"))])
      )
    , 2425
    )
  , label(
      prod(
        [ cf(sort("Field"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("FieldOrFieldEqPattern"))
      , attrs([term(cons("FieldEqPattern"))])
      )
    , 2424
    )
  , label(
      prod(
        [ char-class([109])
        , char-class([97])
        , char-class([116])
        , char-class([99])
        , char-class([104])
        ]
      , lit("match")
      , no-attrs()
      )
    , 2423
    )
  , label(
      prod(
        [lit("module")]
      , lex(sort("LowerCaseIdent"))
      , attrs([reject()])
      )
    , 2422
    )
  , label(
      prod(
        [cf(iter-sep(sort("Pattern"), lit(",")))]
      , cf(iter-star-sep(sort("Pattern"), lit(",")))
      , no-attrs()
      )
    , 2421
    )
  , label(
      prod(
        [ lit("module")
        , cf(opt(layout()))
        , lit("type")
        , cf(opt(layout()))
        , cf(sort("ModTypeName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        ]
      , cf(sort("Specification"))
      , attrs([term(cons("ModuleType2"))])
      )
    , 2420
    )
  , label(
      prod(
        [ lex(alt(lit("?"), lit("~")))
        , lex(iter(sort("OperatorChar")))
        ]
      , lex(sort("PrefixSymbol"))
      , no-attrs()
      )
    , 2419
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([77])
        , char-class([101])
        , char-class([116])
        , char-class([104])
        , char-class([111])
        , char-class([100])
        , char-class([84])
        , char-class([121])
        , char-class([112])
        , char-class([101])
        ]
      , lit("$MethodType")
      , no-attrs()
      )
    , 2418
    )
  , label(
      prod(
        [lit("$SemiColonDotsOpt")]
      , cf(sort("SemiColonDotsOpt"))
      , attrs([term(cons("SemiColonDotsOpt-Plhdr")), term(placeholder())])
      )
    , 2417
    )
  , label(
      prod(
        [lit("$FieldOrFieldEqPattern")]
      , cf(sort("FieldOrFieldEqPattern"))
      , attrs([term(cons("FieldOrFieldEqPattern-Plhdr")), term(placeholder())])
      )
    , 2416
    )
  , label(
      prod(
        [char-class([range(48, 55), 95])]
      , lex(iter(char-class([range(48, 55), 95])))
      , no-attrs()
      )
    , 2415
    )
  , label(
      prod(
        [ cf(sort("Method"))
        , cf(opt(layout()))
        , cf(opt(sort("Private")))
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("PolyTypeExpr"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("ClassField"))
      , attrs([term(cons("Method2"))])
      )
    , 2414
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([69])
        , char-class([120])
        , char-class([116])
        , char-class([101])
        , char-class([114])
        , char-class([110])
        , char-class([97])
        , char-class([108])
        , char-class([68])
        , char-class([101])
        , char-class([99])
        , char-class([108])
        , char-class([97])
        , char-class([114])
        , char-class([97])
        , char-class([116])
        , char-class([105])
        , char-class([111])
        , char-class([110])
        ]
      , lit("$ExternalDeclaration")
      , no-attrs()
      )
    , 2413
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([67])
        , char-class([97])
        , char-class([112])
        , char-class([105])
        , char-class([116])
        , char-class([97])
        , char-class([108])
        , char-class([105])
        , char-class([122])
        , char-class([101])
        , char-class([100])
        , char-class([73])
        , char-class([100])
        , char-class([101])
        , char-class([110])
        , char-class([116])
        ]
      , lit("$CapitalizedIdent")
      , no-attrs()
      )
    , 2412
    )
  , label(
      prod(
        [ lit("class")
        , cf(opt(layout()))
        , lit("type")
        , cf(opt(layout()))
        , cf(iter-sep(sort("ClassTypeDef"), lit("and")))
        ]
      , cf(sort("ClassTypeDefinition"))
      , attrs([term(cons("ClassTypeDefinition"))])
      )
    , 2411
    )
  , label(
      prod(
        [lit("$ConstrName")]
      , cf(sort("ConstrName"))
      , attrs([term(cons("ConstrName-Plhdr")), term(placeholder())])
      )
    , 2410
    )
  , label(
      prod([char-class([46])], lit("."), no-attrs())
    , 2409
    )
  , label(
      prod(
        [lex(opt(char-class([43, 45])))]
      , cf(opt(char-class([43, 45])))
      , no-attrs()
      )
    , 2408
    )
  , label(
      prod(
        [ lex(
            iter(
              char-class(
                [ range(48, 57)
                , range(65, 70)
                , 95
                , range(97, 102)
                ]
              )
            )
          )
        , char-class(
            [ range(48, 57)
            , range(65, 70)
            , 95
            , range(97, 102)
            ]
          )
        ]
      , lex(
          iter(
            char-class(
              [ range(48, 57)
              , range(65, 70)
              , 95
              , range(97, 102)
              ]
            )
          )
        )
      , no-attrs()
      )
    , 2407
    )
  , label(
      prod(
        [lex(sort("NegativeInt"))]
      , cf(sort("NegativeInt"))
      , no-attrs()
      )
    , 2406
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 2405
    )
  , label(
      prod([], cf(iter-star(sort("Parameter"))), no-attrs())
    , 2404
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Operations"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("ValueName"))
      , attrs([term(cons("Operations"))])
      )
    , 2403
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("ModuleExpr"))
      , attrs([term(cons("ModuleExprType"))])
      )
    , 2402
    )
  , label(
      prod(
        [cf(sort("Expr")), cf(opt(layout())), lit(";")]
      , cf(sort("Expr"))
      , attrs([term(cons("SemiColon"))])
      )
    , 2401
    )
  , label(
      prod([], cf(iter-star(sort("QuoteIdent"))), no-attrs())
    , 2400
    )
  , label(
      prod(
        [cf(sort("TypeParameters"))]
      , cf(opt(sort("TypeParameters")))
      , no-attrs()
      )
    , 2399
    )
  , label(
      prod(
        [cf(sort("PolymorphicVariantType"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("PolymorphicVariant"))])
      )
    , 2398
    )
  , label(
      prod(
        [ lex(alt(lit("@"), lit("^")))
        , lex(iter-star(sort("OperatorChar")))
        ]
      , lex(sort("InfixSymbol4"))
      , no-attrs()
      )
    , 2397
    )
  , label(
      prod(
        [cf(iter(sort("ModuleNameDot")))]
      , cf(iter-star(sort("ModuleNameDot")))
      , no-attrs()
      )
    , 2396
    )
  , label(
      prod(
        [cf(sort("Pattern"))]
      , cf(iter-sep(sort("Pattern"), lit(",")))
      , no-attrs()
      )
    , 2395
    )
  , label(
      prod([char-class([63])], lit("?"), no-attrs())
    , 2394
    )
  , label(
      prod(
        [lit("to")]
      , lex(
          alt(
            lit("_")
          , alt(
              lit("and")
            , alt(
                lit("as")
              , alt(
                  lit("assert")
                , alt(
                    lit("asr")
                  , alt(
                      lit("begin")
                    , alt(
                        lit("class")
                      , alt(
                          lit("constraint")
                        , alt(
                            lit("do")
                          , alt(
                              lit("done")
                            , alt(
                                lit("downto")
                              , alt(
                                  lit("else")
                                , alt(
                                    lit("end")
                                  , alt(
                                      lit("exception")
                                    , alt(
                                        lit("external")
                                      , alt(
                                          lit("false")
                                        , alt(
                                            lit("for")
                                          , alt(
                                              lit("fun")
                                            , alt(
                                                lit("function")
                                              , alt(
                                                  lit("functor")
                                                , alt(
                                                    lit("if")
                                                  , alt(
                                                      lit("in")
                                                    , alt(
                                                        lit("include")
                                                      , alt(
                                                          lit("inherit")
                                                        , alt(
                                                            lit("initializer")
                                                          , alt(
                                                              lit("land")
                                                            , alt(
                                                                lit("lazy")
                                                              , alt(
                                                                  lit("let")
                                                                , alt(
                                                                    lit("lor")
                                                                  , alt(
                                                                      lit("lsl")
                                                                    , alt(
                                                                        lit("lsr")
                                                                      , alt(
                                                                          lit("lxor")
                                                                        , alt(
                                                                            lit("match")
                                                                          , alt(
                                                                              lit("method")
                                                                            , alt(
                                                                                lit("mod")
                                                                              , alt(
                                                                                  lit("module")
                                                                                , alt(
                                                                                    lit("mutable")
                                                                                  , alt(
                                                                                      lit("new")
                                                                                    , alt(
                                                                                        lit("object")
                                                                                      , alt(
                                                                                          lit("of")
                                                                                        , alt(
                                                                                            lit("open")
                                                                                          , alt(
                                                                                              lit("or")
                                                                                            , alt(
                                                                                                lit("private")
                                                                                              , alt(
                                                                                                  lit("rec")
                                                                                                , alt(
                                                                                                    lit("sig")
                                                                                                  , alt(
                                                                                                      lit("struct")
                                                                                                    , alt(
                                                                                                        lit("then")
                                                                                                      , alt(
                                                                                                          lit("to")
                                                                                                        , alt(
                                                                                                            lit("true")
                                                                                                          , alt(
                                                                                                              lit("try")
                                                                                                            , alt(
                                                                                                                lit("type")
                                                                                                              , alt(
                                                                                                                  lit("val")
                                                                                                                , alt(
                                                                                                                    lit("virtual")
                                                                                                                  , alt(lit("when"), alt(lit("while"), lit("with")))
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , no-attrs()
      )
    , 2393
    )
  , label(
      prod(
        [ lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , cf(iter-star(sort("ModuleNameTypeParam")))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        ]
      , cf(sort("Specification"))
      , attrs([term(cons("ModuleDef1"))])
      )
    , 2392
    )
  , label(
      prod(
        [ cf(iter(sort("ModuleItems")))
        , cf(opt(layout()))
        , cf(sort("ModuleItems"))
        ]
      , cf(iter(sort("ModuleItems")))
      , no-attrs()
      )
    , 2391
    )
  , label(
      prod(
        [lit("$Label")]
      , cf(sort("Label"))
      , attrs([term(placeholder()), term(cons("Label-Plhdr"))])
      )
    , 2390
    )
  , label(
      prod(
        [lit("_")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2389
    )
  , label(
      prod(
        [char-class([40]), char-class([42])]
      , lit("(*")
      , no-attrs()
      )
    , 2388
    )
  , label(
      prod(
        [lit("$InfixSymbol8")]
      , cf(sort("InfixSymbol8"))
      , attrs([term(placeholder()), term(cons("InfixSymbol8-Plhdr"))])
      )
    , 2387
    )
  , label(
      prod(
        [lit("assert")]
      , lex(sort("CapitalizedIdent"))
      , attrs([reject()])
      )
    , 2386
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([84])
        , char-class([111])
        , char-class([68])
        , char-class([111])
        , char-class([119])
        , char-class([110])
        , char-class([84])
        , char-class([111])
        ]
      , lit("$ToDownTo")
      , no-attrs()
      )
    , 2385
    )
  , label(
      prod(
        [cf(sort("OptLabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabelColon"))])
      )
    , 2384
    )
  , label(
      prod(
        [ char-class([36])
        , char-class([80])
        , char-class([114])
        , char-class([105])
        , char-class([118])
        , char-class([97])
        , char-class([116])
        , char-class([101])
        ]
      , lit("$Private")
      , no-attrs()
      )
    , 2383
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 2382
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2381
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 2380
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 2379
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 2378
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 2377
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 2376
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 2375
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 2374
    )
  , label(
      prod(
        [cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr2"))])
      )
    , 2373
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 2372
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 2371
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 2370
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 2369
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 2368
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 2367
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2366
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 2365
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 2364
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2363
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 2362
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 2361
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 2360
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 2359
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 2358
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 2357
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 2356
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 2355
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 2354
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2353
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 2352
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 2351
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 2350
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTuple"))])
      )
    , 2349
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(bracket())])
      )
    , 2348
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 2347
    )
  , label(
      prod(
        [cf(sort("OptLabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabelColon"))])
      )
    , 2346
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 2345
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 2344
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprTypeConstr"))])
      )
    , 2343
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 2342
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 2341
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 2340
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2339
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2338
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 2337
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 2336
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 2335
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 2334
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2333
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 2332
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets"))])
      )
    , 2331
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 2330
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 2329
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 2328
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 2327
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2326
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 2325
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 2324
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2323
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([assoc(right()), term(cons("Arrow"))])
      )
    , 2322
    )
  , label(
      prod(
        [ cf(iter(sort("InnerPatternMatching")))
        , cf(opt(layout()))
        , cf(sort("InnerPatternMatching"))
        ]
      , cf(iter(sort("InnerPatternMatching")))
      , no-attrs()
      )
    , 2321
    )
  , label(
      prod(
        [cf(sort("TypeExpr"))]
      , cf(iter-sep(sort("TypeExpr"), lit("*")))
      , no-attrs()
      )
    , 2320
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Pattern"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(iter-sep(sort("Pattern"), lit(",")))
      , no-attrs()
      )
    , 2319
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 2318
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 2317
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 2316
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 2315
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 2314
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 2313
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(sort("Arg"))
      , no-attrs()
      )
    , 2312
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 2311
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(sort("Arg"))
      , no-attrs()
      )
    , 2310
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 2309
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTuple"))])
      )
    , 2308
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 2307
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2306
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(bracket())])
      )
    , 2305
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 2304
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 2303
    )
  , label(
      prod(
        [lit("$Arg")]
      , cf(sort("Arg"))
      , attrs([term(placeholder()), term(cons("Arg-Plhdr"))])
      )
    , 2302
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 2301
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets"))])
      )
    , 2300
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 2299
    )
  , label(
      prod(
        [ lit("|")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("InnerPatternMatching"))
      , attrs([term(cons("InnerPatternMatching"))])
      )
    , 2298
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2297
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 2296
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 2295
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 2294
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 2293
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 2292
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 2291
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 2290
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 2289
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 2288
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 2287
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2286
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2285
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 2284
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2283
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 2282
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 2281
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 2280
    )
  , label(
      prod(
        [lit("private"), cf(opt(layout())), cf(sort("TypeExpr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPrivate"))])
      )
    , 2279
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 2278
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 2277
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2276
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 2275
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName"))])
      )
    , 2274
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 2273
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets"))])
      )
    , 2272
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 2271
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 2270
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 2269
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 2268
    )
  , label(
      prod(
        [cf(sort("Arg"))]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 2267
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 2266
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 2265
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 2264
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 2263
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 2262
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 2261
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 2260
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 2259
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 2258
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2257
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 2256
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 2255
    )
  , label(
      prod(
        [ cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("InnerPatternMatching")))
        ]
      , cf(sort("PatternMatching"))
      , no-attrs()
      )
    , 2254
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 2253
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("ListCons"))])
      )
    , 2252
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 2251
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 2250
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 2249
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 2248
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 2247
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 2246
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 2245
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 2244
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 2243
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash3"))])
      )
    , 2242
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 2241
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2240
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 2239
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 2238
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([assoc(right()), term(cons("Arrow"))])
      )
    , 2237
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 2236
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 2235
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 2234
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprTypeConstr"))])
      )
    , 2233
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 2232
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 2231
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 2230
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 2229
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 2228
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName"))])
      )
    , 2227
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 2226
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 2225
    )
  , label(
      prod(
        [lit("$Pattern")]
      , cf(sort("Pattern"))
      , attrs([term(cons("Pattern-Plhdr")), term(placeholder())])
      )
    , 2224
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 2223
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 2222
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 2221
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 2220
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 2219
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 2218
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2217
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 2216
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 2215
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 2214
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 2213
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 2212
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 2211
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 2210
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 2209
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 2208
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 2207
    )
  , label(
      prod(
        [cf(sort("Label"))]
      , cf(sort("Arg"))
      , attrs([term(cons("Label"))])
      )
    , 2206
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 2205
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 2204
    )
  , label(
      prod(
        [ lit("`")
        , cf(opt(layout()))
        , cf(sort("TagName"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("TagNamePattern"))])
      )
    , 2203
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2202
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 2201
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 2200
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2199
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 2198
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 2197
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 2196
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 2195
    )
  , label(
      prod(
        [lit("$TypeExpr")]
      , cf(sort("TypeExpr"))
      , attrs([term(placeholder()), term(cons("TypeExpr-Plhdr"))])
      )
    , 2194
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2193
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 2192
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 2191
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 2190
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 2189
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2188
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 2187
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("MethodType"), lit(";")))
        , cf(opt(layout()))
        , cf(sort("SemiColonDotsOpt"))
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AngleBrackets"))])
      )
    , 2186
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 2185
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 2184
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 2183
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2182
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 2181
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2180
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2179
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2178
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 2177
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 2176
    )
  , label(
      prod(
        [cf(sort("TypeExpr"))]
      , cf(iter-sep(sort("TypeExpr"), lit("*")))
      , no-attrs()
      )
    , 2175
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 2174
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2173
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 2172
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 2171
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 2170
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2169
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 2168
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 2167
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2166
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 2165
    )
  , label(
      prod(
        [cf(sort("InnerPatternMatching"))]
      , cf(iter(sort("InnerPatternMatching")))
      , no-attrs()
      )
    , 2164
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 2163
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 2162
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 2161
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 2160
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 2159
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 2158
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("|")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Pattern"))
      , attrs([assoc(left()), term(cons("PatternBar"))])
      )
    , 2157
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 2156
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 2155
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2154
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 2153
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 2152
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 2151
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(sort("Arg"))
      , no-attrs()
      )
    , 2150
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 2149
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 2148
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 2147
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 2146
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 2145
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 2144
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 2143
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 2142
    )
  , label(
      prod(
        [ cf(iter(sort("Arg")))
        , cf(opt(layout()))
        , cf(sort("Arg"))
        ]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 2141
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash3"))])
      )
    , 2140
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 2139
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 2138
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash3"))])
      )
    , 2137
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 2136
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 2135
    )
  , label(
      prod(
        [ cf(iter(sort("Parameter")))
        , cf(opt(layout()))
        , lit("when")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("MultipleMatching"))
      , attrs([term(cons("MultipleMatching"))])
      )
    , 2134
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 2133
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2132
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 2131
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 2130
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2129
    )
  , label(
      prod(
        [lit("$Arg")]
      , cf(sort("Arg"))
      , attrs([term(placeholder()), term(cons("Arg-Plhdr"))])
      )
    , 2128
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 2127
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 2126
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 2125
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 2124
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 2123
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 2122
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 2121
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 2120
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 2119
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 2118
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("ListCons"))])
      )
    , 2117
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 2116
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 2115
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 2114
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("MethodType"), lit(";")))
        , cf(opt(layout()))
        , cf(sort("SemiColonDotsOpt"))
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AngleBrackets"))])
      )
    , 2113
    )
  , label(
      prod(
        [cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr2"))])
      )
    , 2112
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 2111
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 2110
    )
  , label(
      prod(
        [lit("$ModuleType")]
      , cf(sort("ModuleType"))
      , attrs([term(cons("ModuleType-Plhdr")), term(placeholder())])
      )
    , 2109
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 2108
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 2107
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 2106
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2105
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 2104
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 2103
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 2102
    )
  , label(
      prod(
        [cf(sort("ConstantNegative"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternConst"))])
      )
    , 2101
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 2100
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 2099
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 2098
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 2097
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 2096
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 2095
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 2094
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2093
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2092
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 2091
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2090
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 2089
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 2088
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 2087
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 2086
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 2085
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 2084
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 2083
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 2082
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2081
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash2"))])
      )
    , 2080
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 2079
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 2078
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternPackage"))])
      )
    , 2077
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 2076
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2075
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 2074
    )
  , label(
      prod(
        [ cf(sort("CharLiteral"))
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , cf(sort("CharLiteral"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRange"))])
      )
    , 2073
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 2072
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 2071
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 2070
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 2069
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 2068
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets"))])
      )
    , 2067
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 2066
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 2065
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 2064
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 2063
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 2062
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 2061
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternArray"))])
      )
    , 2060
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 2059
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 2058
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2057
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 2056
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 2055
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 2054
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 2053
    )
  , label(
      prod(
        [ lit("`")
        , cf(opt(layout()))
        , cf(sort("TagName"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("TagNamePattern"))])
      )
    , 2052
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Expr"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 2051
    )
  , label(
      prod(
        [lit("$TypeExpr")]
      , cf(sort("TypeExpr"))
      , attrs([term(placeholder()), term(cons("TypeExpr-Plhdr"))])
      )
    , 2050
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 2049
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 2048
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2047
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 2046
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 2045
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 2044
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 2043
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 2042
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 2041
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 2040
    )
  , label(
      prod(
        [cf(sort("LabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("LabelColon"))])
      )
    , 2039
    )
  , label(
      prod(
        [lit("'"), cf(opt(layout())), cf(sort("Ident"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("Tag"))])
      )
    , 2038
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 2037
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 2036
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 2035
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 2034
    )
  , label(
      prod(
        [ cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("when")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("InnerPatternMatching")))
        ]
      , cf(sort("PatternMatching"))
      , no-attrs()
      )
    , 2033
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternPackage"))])
      )
    , 2032
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 2031
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 2030
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 2029
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 2028
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 2027
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 2026
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 2025
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 2024
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 2023
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 2022
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 2021
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 2020
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 2019
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 2018
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 2017
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2016
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 2015
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 2014
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 2013
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 2012
    )
  , label(
      prod(
        [lit("<"), cf(opt(layout())), lit(">")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets2"))])
      )
    , 2011
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 2010
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 2009
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AnyTypexpr"))])
      )
    , 2008
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 2007
    )
  , label(
      prod(
        [cf(sort("Arg"))]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 2006
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([assoc(right()), term(cons("Arrow"))])
      )
    , 2005
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 2004
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 2003
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 2002
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 2001
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 2000
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1999
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1998
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1997
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1996
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1995
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1994
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 1993
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1992
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1991
    )
  , label(
      prod(
        [ lit("|")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("when")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("InnerPatternMatching"))
      , attrs([term(cons("InnerPatternMatching"))])
      )
    , 1990
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1989
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1988
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 1987
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1986
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1985
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1984
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 1983
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1982
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1981
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 1980
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 1979
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash1"))])
      )
    , 1978
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1977
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 1976
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1975
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 1974
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 1973
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternPackage"))])
      )
    , 1972
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 1971
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 1970
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 1969
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 1968
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1967
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 1966
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1965
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1964
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 1963
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1962
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1961
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1960
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 1959
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1958
    )
  , label(
      prod(
        [ cf(sort("CharLiteral"))
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , cf(sort("CharLiteral"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRange"))])
      )
    , 1957
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 1956
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1955
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 1954
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1953
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1952
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1951
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 1950
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1949
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1948
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1947
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Expr"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 1946
    )
  , label(
      prod(
        [ cf(sort("ModuleType"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("ModConstraint"), lit("and")))
        ]
      , cf(sort("ModuleType"))
      , attrs([term(cons("ModuleTypeWith"))])
      )
    , 1945
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1944
    )
  , label(
      prod(
        [ cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName2"))])
      )
    , 1943
    )
  , label(
      prod(
        [cf(sort("InnerPatternMatching"))]
      , cf(iter(sort("InnerPatternMatching")))
      , no-attrs()
      )
    , 1942
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1941
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1940
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1939
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1938
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1937
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1936
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1935
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1934
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 1933
    )
  , label(
      prod(
        [cf(sort("Arg"))]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 1932
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(bracket())])
      )
    , 1931
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 1930
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 1929
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash3"))])
      )
    , 1928
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 1927
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1926
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 1925
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 1924
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1923
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 1922
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1921
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 1920
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1919
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1918
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1917
    )
  , label(
      prod(
        [ lit("`")
        , cf(opt(layout()))
        , cf(sort("TagName"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("TagNamePattern"))])
      )
    , 1916
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 1915
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1914
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1913
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1912
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 1911
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1910
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprTypeConstr"))])
      )
    , 1909
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(sort("Arg"))
      , no-attrs()
      )
    , 1908
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 1907
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 1906
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 1905
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1904
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1903
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 1902
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1901
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 1900
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1899
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1898
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 1897
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1896
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1895
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("ListCons"))])
      )
    , 1894
    )
  , label(
      prod(
        [lit("$Pattern")]
      , cf(sort("Pattern"))
      , attrs([term(cons("Pattern-Plhdr")), term(placeholder())])
      )
    , 1893
    )
  , label(
      prod(
        [ lit("`")
        , cf(opt(layout()))
        , cf(sort("TagName"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("TagNamePattern"))])
      )
    , 1892
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1891
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName"))])
      )
    , 1890
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 1889
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 1888
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets"))])
      )
    , 1887
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 1886
    )
  , label(
      prod(
        [lit("$MultipleMatching")]
      , cf(sort("MultipleMatching"))
      , attrs([term(placeholder()), term(cons("MultipleMatching-Plhdr"))])
      )
    , 1885
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1884
    )
  , label(
      prod(
        [cf(sort("Arg"))]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 1883
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 1882
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1881
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 1880
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1879
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1878
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1877
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 1876
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1875
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1874
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 1873
    )
  , label(
      prod(
        [lit("'"), cf(opt(layout())), cf(sort("Ident"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("Tag"))])
      )
    , 1872
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AnyTypexpr"))])
      )
    , 1871
    )
  , label(
      prod(
        [lit("<"), cf(opt(layout())), lit(">")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets2"))])
      )
    , 1870
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 1869
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1868
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 1867
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 1866
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1865
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 1864
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("PackageType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPackage"))])
      )
    , 1863
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1862
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1861
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 1860
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("Pattern"))
      , attrs([term(cons("WildCard"))])
      )
    , 1859
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1858
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 1857
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1856
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1855
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTypeExpr"))])
      )
    , 1854
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1853
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1852
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1851
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1850
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 1849
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 1848
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1847
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1846
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1845
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 1844
    )
  , label(
      prod(
        [lit("$TypeExpr")]
      , cf(sort("TypeExpr"))
      , attrs([term(placeholder()), term(cons("TypeExpr-Plhdr"))])
      )
    , 1843
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 1842
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1841
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 1840
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1839
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 1838
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 1837
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1836
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 1835
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 1834
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 1833
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1832
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1831
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 1830
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1829
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 1828
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternArray"))])
      )
    , 1827
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1826
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 1825
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1824
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1823
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1822
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1821
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1820
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1819
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 1818
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTypeExpr"))])
      )
    , 1817
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 1816
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 1815
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 1814
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 1813
    )
  , label(
      prod(
        [lit("'"), cf(opt(layout())), cf(sort("Ident"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("Tag"))])
      )
    , 1812
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 1811
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 1810
    )
  , label(
      prod(
        [cf(sort("OptLabel"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabel"))])
      )
    , 1809
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 1808
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 1807
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1806
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("PackageType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPackage"))])
      )
    , 1805
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1804
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1803
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1802
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1801
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1800
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1799
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1798
    )
  , label(
      prod(
        [ cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName2"))])
      )
    , 1797
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1796
    )
  , label(
      prod(
        [lit("$Pattern")]
      , cf(sort("Pattern"))
      , attrs([term(cons("Pattern-Plhdr")), term(placeholder())])
      )
    , 1795
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1794
    )
  , label(
      prod(
        [cf(sort("TypeExpr")), cf(opt(layout())), cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr1"))])
      )
    , 1793
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1792
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1791
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1790
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1789
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1788
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(sort("Arg"))
      , no-attrs()
      )
    , 1787
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1786
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1785
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1784
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1783
    )
  , label(
      prod(
        [ cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName2"))])
      )
    , 1782
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 1781
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1780
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1779
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AnyTypexpr"))])
      )
    , 1778
    )
  , label(
      prod(
        [lit("<"), cf(opt(layout())), lit(">")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets2"))])
      )
    , 1777
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 1776
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1775
    )
  , label(
      prod(
        [lit("$Pattern")]
      , cf(sort("Pattern"))
      , attrs([term(cons("Pattern-Plhdr")), term(placeholder())])
      )
    , 1774
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 1773
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1772
    )
  , label(
      prod(
        [lit("'"), cf(opt(layout())), cf(sort("Ident"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("Tag"))])
      )
    , 1771
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1770
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1769
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1768
    )
  , label(
      prod(
        [ cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName2"))])
      )
    , 1767
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 1766
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 1765
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1764
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1763
    )
  , label(
      prod(
        [ cf(iter(sort("Arg")))
        , cf(opt(layout()))
        , cf(sort("Arg"))
        ]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 1762
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1761
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1760
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1759
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(bracket())])
      )
    , 1758
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash2"))])
      )
    , 1757
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1756
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1755
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 1754
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1753
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1752
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1751
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 1750
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName"))])
      )
    , 1749
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1748
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1747
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 1746
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(sort("Arg"))
      , no-attrs()
      )
    , 1745
    )
  , label(
      prod(
        [cf(sort("PolymorphicVariantType"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("PolymorphicVariant"))])
      )
    , 1744
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1743
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1742
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1741
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 1740
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1739
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1738
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1737
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1736
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1735
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 1734
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1733
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1732
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1731
    )
  , label(
      prod(
        [ cf(iter-sep(sort("TypeExpr"), lit("*")))
        , cf(opt(layout()))
        , lit("*")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(iter-sep(sort("TypeExpr"), lit("*")))
      , no-attrs()
      )
    , 1730
    )
  , label(
      prod(
        [ cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter-star(sort("InnerPatternMatching")))
        ]
      , cf(sort("PatternMatching"))
      , attrs([term(cons("PatternMatching")), term(nlm())])
      )
    , 1729
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1728
    )
  , label(
      prod(
        [lit("$InnerPatternMatching")]
      , cf(sort("InnerPatternMatching"))
      , attrs([term(placeholder()), term(cons("InnerPatternMatching-Plhdr"))])
      )
    , 1727
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Pattern"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("LazyPattern"))])
      )
    , 1726
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1725
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1724
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1723
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1722
    )
  , label(
      prod(
        [cf(sort("LabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("LabelColon"))])
      )
    , 1721
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 1720
    )
  , label(
      prod(
        [ lit("|")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("when")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("InnerPatternMatching"))
      , attrs([term(cons("InnerPatternMatching"))])
      )
    , 1719
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1718
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 1717
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1716
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1715
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1714
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 1713
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1712
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 1711
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1710
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1709
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1708
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 1707
    )
  , label(
      prod(
        [cf(sort("PolymorphicVariantType"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("PolymorphicVariant"))])
      )
    , 1706
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("as")
        , cf(opt(layout()))
        , lit("'")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprAsId"))])
      )
    , 1705
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1704
    )
  , label(
      prod(
        [cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr2"))])
      )
    , 1703
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1702
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("Pattern"))
      , attrs([term(cons("WildCard"))])
      )
    , 1701
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Expr"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 1700
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1699
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1698
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 1697
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 1696
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 1695
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 1694
    )
  , label(
      prod(
        [ lit("sig")
        , cf(opt(layout()))
        , cf(iter-star(sort("SpecificationSemi")))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("ModuleType"))
      , attrs([term(cons("Signature"))])
      )
    , 1693
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1692
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 1691
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Pattern"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("LazyPattern"))])
      )
    , 1690
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 1689
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1688
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1687
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("PackageType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPackage"))])
      )
    , 1686
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1685
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 1684
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1683
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 1682
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 1681
    )
  , label(
      prod(
        [cf(sort("OptLabel"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabel"))])
      )
    , 1680
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1679
    )
  , label(
      prod(
        [ cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("when")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter-star(sort("InnerPatternMatching")))
        ]
      , cf(sort("PatternMatching"))
      , attrs([term(cons("PatternMatching")), term(nlm())])
      )
    , 1678
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1677
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1676
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 1675
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 1674
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 1673
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 1672
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1671
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 1670
    )
  , label(
      prod([], cf(iter-star(sort("InnerPatternMatching"))), no-attrs())
    , 1669
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 1668
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1667
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1666
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1665
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 1664
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1663
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTuple"))])
      )
    , 1662
    )
  , label(
      prod(
        [cf(sort("PolymorphicVariantType"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("PolymorphicVariant"))])
      )
    , 1661
    )
  , label(
      prod(
        [ cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("InnerPatternMatching")))
        ]
      , cf(sort("PatternMatching"))
      , no-attrs()
      )
    , 1660
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 1659
    )
  , label(
      prod(
        [lit("$TypeExpr")]
      , cf(sort("TypeExpr"))
      , attrs([term(placeholder()), term(cons("TypeExpr-Plhdr"))])
      )
    , 1658
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1657
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 1656
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 1655
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1654
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("TypeConstrName"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternHash"))])
      )
    , 1653
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1652
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 1651
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 1650
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1649
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 1648
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1647
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1646
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1645
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1644
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 1643
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1642
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 1641
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 1640
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1639
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1638
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(bracket())])
      )
    , 1637
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 1636
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 1635
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 1634
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 1633
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1632
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1631
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1630
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1629
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 1628
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 1627
    )
  , label(
      prod(
        [cf(sort("OptLabel"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabel"))])
      )
    , 1626
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(bracket())])
      )
    , 1625
    )
  , label(
      prod(
        [lit("<"), cf(opt(layout())), lit(">")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets2"))])
      )
    , 1624
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AnyTypexpr"))])
      )
    , 1623
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AnyTypexpr"))])
      )
    , 1622
    )
  , label(
      prod(
        [lit("<"), cf(opt(layout())), lit(">")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets2"))])
      )
    , 1621
    )
  , label(
      prod(
        [cf(sort("TypeExpr")), cf(opt(layout())), cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr1"))])
      )
    , 1620
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1619
    )
  , label(
      prod(
        [cf(sort("Arg"))]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 1618
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1617
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1616
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1615
    )
  , label(
      prod(
        [cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr2"))])
      )
    , 1614
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 1613
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 1612
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1611
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1610
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("Pattern"))
      , attrs([term(cons("WildCard"))])
      )
    , 1609
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprTypeConstr"))])
      )
    , 1608
    )
  , label(
      prod(
        [cf(sort("TypeExpr")), cf(opt(layout())), cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr1"))])
      )
    , 1607
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 1606
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1605
    )
  , label(
      prod(
        [lit("'"), cf(opt(layout())), cf(sort("Ident"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("Tag"))])
      )
    , 1604
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1603
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1602
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 1601
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 1600
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1599
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 1598
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1597
    )
  , label(
      prod(
        [lit("'"), cf(opt(layout())), cf(sort("Ident"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("Tag"))])
      )
    , 1596
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1595
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 1594
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1593
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1592
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 1591
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1590
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 1589
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 1588
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1587
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1586
    )
  , label(
      prod(
        [cf(sort("Expr")), cf(opt(layout())), lit(";")]
      , cf(sort("Expr"))
      , attrs([term(cons("SemiColon"))])
      )
    , 1585
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 1584
    )
  , label(
      prod(
        [cf(sort("Arg"))]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 1583
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1582
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("PackageType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPackage"))])
      )
    , 1581
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1580
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1579
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1578
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1577
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Expr"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 1576
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("TypeConstrName"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternHash"))])
      )
    , 1575
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1574
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1573
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1572
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1571
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1570
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1569
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternArray2"))])
      )
    , 1568
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("Pattern"))
      , attrs([term(cons("WildCard"))])
      )
    , 1567
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1566
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1565
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1564
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 1563
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1562
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1561
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 1560
    )
  , label(
      prod(
        [lit("$Arg")]
      , cf(sort("Arg"))
      , attrs([term(placeholder()), term(cons("Arg-Plhdr"))])
      )
    , 1559
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 1558
    )
  , label(
      prod(
        [cf(sort("OptLabel"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabel"))])
      )
    , 1557
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 1556
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 1555
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1554
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1553
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 1552
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 1551
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1550
    )
  , label(
      prod(
        [lit("$TypeExpr")]
      , cf(sort("TypeExpr"))
      , attrs([term(placeholder()), term(cons("TypeExpr-Plhdr"))])
      )
    , 1549
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("*")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit("*")))
        ]
      , cf(sort("TypeExpr"))
      , attrs(
          [term(cons("Star")), term(non-assoc()), term(nlm())]
        )
      )
    , 1548
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1547
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1546
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1545
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 1544
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1543
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1542
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1541
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 1540
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1539
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1538
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 1537
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1536
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 1535
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1534
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 1533
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 1532
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 1531
    )
  , label(
      prod(
        [cf(sort("OptLabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabelColon"))])
      )
    , 1530
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 1529
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1528
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1527
    )
  , label(
      prod(
        [cf(sort("Label"))]
      , cf(sort("Arg"))
      , attrs([term(cons("Label"))])
      )
    , 1526
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 1525
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 1524
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1523
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1522
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1521
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1520
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 1519
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 1518
    )
  , label(
      prod(
        [lit("private"), cf(opt(layout())), cf(sort("TypeExpr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPrivate"))])
      )
    , 1517
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1516
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1515
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1514
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1513
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("as")
        , cf(opt(layout()))
        , lit("'")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprAsId"))])
      )
    , 1512
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("PackageType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPackage"))])
      )
    , 1511
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(bracket())])
      )
    , 1510
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1509
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 1508
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 1507
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1506
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets"))])
      )
    , 1505
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1504
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1503
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1502
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1501
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1500
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1499
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1498
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(sort("Arg"))
      , no-attrs()
      )
    , 1497
    )
  , label(
      prod(
        [ cf(iter(sort("Parameter")))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("MultipleMatching"))
      , attrs([term(cons("MultipleMatching"))])
      )
    , 1496
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1495
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1494
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1493
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1492
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash2"))])
      )
    , 1491
    )
  , label(
      prod(
        [cf(sort("OptLabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabelColon"))])
      )
    , 1490
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1489
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1488
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1487
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 1486
    )
  , label(
      prod(
        [ cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("when")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("InnerPatternMatching")))
        ]
      , cf(sort("PatternMatching"))
      , no-attrs()
      )
    , 1485
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1484
    )
  , label(
      prod(
        [cf(sort("Arg"))]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 1483
    )
  , label(
      prod(
        [lit("$Arg")]
      , cf(sort("Arg"))
      , attrs([term(placeholder()), term(cons("Arg-Plhdr"))])
      )
    , 1482
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1481
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1480
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 1479
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 1478
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 1477
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 1476
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 1475
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1474
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1473
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1472
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1471
    )
  , label(
      prod(
        [lit("$PatternMatching")]
      , cf(sort("PatternMatching"))
      , attrs([term(cons("PatternMatching-Plhdr")), term(placeholder())])
      )
    , 1470
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("as")
        , cf(opt(layout()))
        , lit("'")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprAsId"))])
      )
    , 1469
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Pattern"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("LazyPattern"))])
      )
    , 1468
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1467
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1466
    )
  , label(
      prod(
        [ cf(iter(sort("Parameter")))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("MultipleMatching"))
      , attrs([term(cons("MultipleMatching"))])
      )
    , 1465
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1464
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 1463
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1462
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1461
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1460
    )
  , label(
      prod(
        [lit("$InnerPatternMatching")]
      , cf(sort("InnerPatternMatching"))
      , attrs([term(placeholder()), term(cons("InnerPatternMatching-Plhdr"))])
      )
    , 1459
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 1458
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1457
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 1456
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 1455
    )
  , label(
      prod(
        [cf(sort("Expr")), cf(opt(layout())), lit(";")]
      , cf(sort("Expr"))
      , attrs([term(cons("SemiColon"))])
      )
    , 1454
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 1453
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1452
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1451
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1450
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1449
    )
  , label(
      prod(
        [cf(sort("PolymorphicVariantType"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("PolymorphicVariant"))])
      )
    , 1448
    )
  , label(
      prod(
        [ cf(iter(sort("Parameter")))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("MultipleMatching"))
      , attrs([term(cons("MultipleMatching"))])
      )
    , 1447
    )
  , label(
      prod(
        [lit("$Arg")]
      , cf(sort("Arg"))
      , attrs([term(placeholder()), term(cons("Arg-Plhdr"))])
      )
    , 1446
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1445
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1444
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash1"))])
      )
    , 1443
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 1442
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 1441
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1440
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 1439
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1438
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1437
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1436
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 1435
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("PackageType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPackage"))])
      )
    , 1434
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1433
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Pattern"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(iter-sep(sort("Pattern"), lit(",")))
      , no-attrs()
      )
    , 1432
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1431
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternArray2"))])
      )
    , 1430
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1429
    )
  , label(
      prod(
        [cf(sort("PolymorphicVariantType"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("PolymorphicVariant"))])
      )
    , 1428
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 1427
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1426
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 1425
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 1424
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1423
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 1422
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1421
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 1420
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 1419
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1418
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 1417
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1416
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1415
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1414
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1413
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1412
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1411
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1410
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1409
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1408
    )
  , label(
      prod(
        [cf(sort("Expr")), cf(opt(layout())), lit(";")]
      , cf(sort("Expr"))
      , attrs([term(cons("SemiColon"))])
      )
    , 1407
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1406
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1405
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1404
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1403
    )
  , label(
      prod([], cf(iter-star(sort("InnerPatternMatching"))), no-attrs())
    , 1402
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1401
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 1400
    )
  , label(
      prod(
        [cf(sort("OptLabel"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabel"))])
      )
    , 1399
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1398
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 1397
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1396
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1395
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1394
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 1393
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 1392
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1391
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 1390
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternArray2"))])
      )
    , 1389
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1388
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1387
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1386
    )
  , label(
      prod(
        [lit("$TypeExpr")]
      , cf(sort("TypeExpr"))
      , attrs([term(placeholder()), term(cons("TypeExpr-Plhdr"))])
      )
    , 1385
    )
  , label(
      prod(
        [cf(sort("Label"))]
      , cf(sort("Arg"))
      , attrs([term(cons("Label"))])
      )
    , 1384
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1383
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 1382
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1381
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1380
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1379
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1378
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 1377
    )
  , label(
      prod(
        [cf(sort("OptLabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabelColon"))])
      )
    , 1376
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprTypeConstr"))])
      )
    , 1375
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1374
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 1373
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1372
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 1371
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 1370
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 1369
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1368
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 1367
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1366
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1365
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 1364
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1363
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 1362
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1361
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash2"))])
      )
    , 1360
    )
  , label(
      prod(
        [ cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName2"))])
      )
    , 1359
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(bracket())])
      )
    , 1358
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 1357
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1356
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 1355
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 1354
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 1353
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1352
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1351
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1350
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 1349
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1348
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 1347
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1346
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 1345
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 1344
    )
  , label(
      prod(
        [cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr2"))])
      )
    , 1343
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1342
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1341
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 1340
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1339
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1338
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 1337
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1336
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1335
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1334
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1333
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1332
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1331
    )
  , label(
      prod(
        [lit("'"), cf(opt(layout())), cf(sort("Ident"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("Tag"))])
      )
    , 1330
    )
  , label(
      prod(
        [cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr2"))])
      )
    , 1329
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1328
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1327
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1326
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1325
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1324
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1323
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1322
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("*")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit("*")))
        ]
      , cf(sort("TypeExpr"))
      , attrs(
          [term(cons("Star")), term(non-assoc()), term(nlm())]
        )
      )
    , 1321
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 1320
    )
  , label(
      prod(
        [ cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName2"))])
      )
    , 1319
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash3"))])
      )
    , 1318
    )
  , label(
      prod(
        [cf(sort("LabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("LabelColon"))])
      )
    , 1317
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 1316
    )
  , label(
      prod(
        [ cf(iter(sort("Arg")))
        , cf(opt(layout()))
        , cf(sort("Arg"))
        ]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 1315
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1314
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1313
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1312
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1311
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 1310
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName"))])
      )
    , 1309
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1308
    )
  , label(
      prod(
        [lit("$TypeExpr")]
      , cf(sort("TypeExpr"))
      , attrs([term(placeholder()), term(cons("TypeExpr-Plhdr"))])
      )
    , 1307
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 1306
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("PackageType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPackage"))])
      )
    , 1305
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1304
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1303
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1302
    )
  , label(
      prod(
        [cf(sort("TypeExpr")), cf(opt(layout())), cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr1"))])
      )
    , 1301
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1300
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 1299
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 1298
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1297
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 1296
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 1295
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1294
    )
  , label(
      prod(
        [lit("'"), cf(opt(layout())), cf(sort("Ident"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("Tag"))])
      )
    , 1293
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1292
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([assoc(right()), term(cons("Arrow"))])
      )
    , 1291
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1290
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 1289
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 1288
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName"))])
      )
    , 1287
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1286
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprTypeConstr"))])
      )
    , 1285
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 1284
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 1283
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1282
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 1281
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 1280
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 1279
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1278
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1277
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1276
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1275
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1274
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("PackageType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPackage"))])
      )
    , 1273
    )
  , label(
      prod(
        [cf(sort("Arg"))]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 1272
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1271
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1270
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1269
    )
  , label(
      prod(
        [lit("$TypeExpr")]
      , cf(sort("TypeExpr"))
      , attrs([term(placeholder()), term(cons("TypeExpr-Plhdr"))])
      )
    , 1268
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1267
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1266
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 1265
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1264
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 1263
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("PackageType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPackage"))])
      )
    , 1262
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1261
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1260
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 1259
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1258
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 1257
    )
  , label(
      prod(
        [cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr2"))])
      )
    , 1256
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1255
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1254
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1253
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1252
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1251
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1250
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 1249
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1248
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Expr"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 1247
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1246
    )
  , label(
      prod(
        [ cf(iter(sort("Arg")))
        , cf(opt(layout()))
        , cf(sort("Arg"))
        ]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 1245
    )
  , label(
      prod(
        [ cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter-star(sort("InnerPatternMatching")))
        ]
      , cf(sort("PatternMatching"))
      , attrs([term(cons("PatternMatching")), term(nlm())])
      )
    , 1244
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1243
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1242
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 1241
    )
  , label(
      prod(
        [cf(sort("PolymorphicVariantType"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("PolymorphicVariant"))])
      )
    , 1240
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternArray"))])
      )
    , 1239
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1238
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1237
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 1236
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1235
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1234
    )
  , label(
      prod(
        [lit("$TypeExpr")]
      , cf(sort("TypeExpr"))
      , attrs([term(placeholder()), term(cons("TypeExpr-Plhdr"))])
      )
    , 1233
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTypeExpr"))])
      )
    , 1232
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1231
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 1230
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 1229
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 1228
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 1227
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 1226
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1225
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1224
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1223
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 1222
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1221
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash1"))])
      )
    , 1220
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1219
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1218
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 1217
    )
  , label(
      prod(
        [lit("private"), cf(opt(layout())), cf(sort("TypeExpr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPrivate"))])
      )
    , 1216
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1215
    )
  , label(
      prod(
        [cf(sort("Label"))]
      , cf(sort("Arg"))
      , attrs([term(cons("Label"))])
      )
    , 1214
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 1213
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 1212
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1211
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 1210
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 1209
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1208
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 1207
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1206
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 1205
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1204
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 1203
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1202
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1201
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1200
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1199
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 1198
    )
  , label(
      prod(
        [ cf(iter-sep(sort("TypeExpr"), lit("*")))
        , cf(opt(layout()))
        , lit("*")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(iter-sep(sort("TypeExpr"), lit("*")))
      , no-attrs()
      )
    , 1197
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 1196
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1195
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash2"))])
      )
    , 1194
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1193
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(sort("Arg"))
      , no-attrs()
      )
    , 1192
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 1191
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1190
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 1189
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1188
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 1187
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 1186
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 1185
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1184
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1183
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1182
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1181
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1180
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 1179
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1178
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 1177
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1176
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1175
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(bracket())])
      )
    , 1174
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 1173
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 1172
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1171
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 1170
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1169
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1168
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1167
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 1166
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1165
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1164
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 1163
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1162
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1161
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1160
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1159
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName"))])
      )
    , 1158
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1157
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 1156
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1155
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 1154
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 1153
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 1152
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTuple"))])
      )
    , 1151
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1150
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1149
    )
  , label(
      prod(
        [cf(sort("OptLabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabelColon"))])
      )
    , 1148
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1147
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 1146
    )
  , label(
      prod(
        [ cf(iter(sort("Arg")))
        , cf(opt(layout()))
        , cf(sort("Arg"))
        ]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 1145
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 1144
    )
  , label(
      prod(
        [cf(sort("LabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("LabelColon"))])
      )
    , 1143
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1142
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1141
    )
  , label(
      prod(
        [cf(sort("Label"))]
      , cf(sort("Arg"))
      , attrs([term(cons("Label"))])
      )
    , 1140
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 1139
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 1138
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1137
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTuple2"))])
      )
    , 1136
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1135
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1134
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 1133
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1132
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1131
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 1130
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1129
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1128
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1127
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 1126
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 1125
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([assoc(right()), term(cons("Arrow"))])
      )
    , 1124
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1123
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1122
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1121
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1120
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 1119
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 1118
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash1"))])
      )
    , 1117
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1116
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 1115
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1114
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("MethodType"), lit(";")))
        , cf(opt(layout()))
        , cf(sort("SemiColonDotsOpt"))
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AngleBrackets"))])
      )
    , 1113
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 1112
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternValueName"))])
      )
    , 1111
    )
  , label(
      prod(
        [cf(sort("LabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("LabelColon"))])
      )
    , 1110
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 1109
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 1108
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 1107
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1106
    )
  , label(
      prod(
        [cf(sort("Label"))]
      , cf(sort("Arg"))
      , attrs([term(cons("Label"))])
      )
    , 1105
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1104
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 1103
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1102
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1101
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1100
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1099
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1098
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 1097
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1096
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1095
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1094
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 1093
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets"))])
      )
    , 1092
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 1091
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1090
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternArray2"))])
      )
    , 1089
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash3"))])
      )
    , 1088
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 1087
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1086
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 1085
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AnyTypexpr"))])
      )
    , 1084
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 1083
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1082
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 1081
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1080
    )
  , label(
      prod(
        [lit("<"), cf(opt(layout())), lit(">")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets2"))])
      )
    , 1079
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 1078
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 1077
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 1076
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("TypeConstrName"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternHash"))])
      )
    , 1075
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName"))])
      )
    , 1074
    )
  , label(
      prod(
        [cf(sort("InnerPatternMatching"))]
      , cf(iter(sort("InnerPatternMatching")))
      , no-attrs()
      )
    , 1073
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1072
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 1071
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 1070
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 1069
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 1068
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 1067
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 1066
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1065
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1064
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1063
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 1062
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1061
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 1060
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 1059
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1058
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 1057
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 1056
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1055
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 1054
    )
  , label(
      prod(
        [ cf(iter(sort("InnerPatternMatching")))
        , cf(opt(layout()))
        , cf(sort("InnerPatternMatching"))
        ]
      , cf(iter(sort("InnerPatternMatching")))
      , no-attrs()
      )
    , 1053
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 1052
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AnyTypexpr"))])
      )
    , 1051
    )
  , label(
      prod(
        [lit("<"), cf(opt(layout())), lit(">")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets2"))])
      )
    , 1050
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 1049
    )
  , label(
      prod(
        [cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr2"))])
      )
    , 1048
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AnyTypexpr"))])
      )
    , 1047
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 1046
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1045
    )
  , label(
      prod(
        [lit("<"), cf(opt(layout())), lit(">")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets2"))])
      )
    , 1044
    )
  , label(
      prod(
        [ cf(sort("CharLiteral"))
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , cf(sort("CharLiteral"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRange"))])
      )
    , 1043
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1042
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 1041
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 1040
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 1039
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1038
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 1037
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 1036
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 1035
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1034
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1033
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 1032
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 1031
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 1030
    )
  , label(
      prod(
        [ cf(iter(sort("Parameter")))
        , cf(opt(layout()))
        , lit("when")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("MultipleMatching"))
      , attrs([term(cons("MultipleMatching"))])
      )
    , 1029
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 1028
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets"))])
      )
    , 1027
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 1026
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 1025
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 1024
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 1023
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 1022
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 1021
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 1020
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 1019
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 1018
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 1017
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash3"))])
      )
    , 1016
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(",")))
        ]
      , cf(sort("Pattern"))
      , attrs(
          [term(cons("Patterns")), term(non-assoc()), term(nlm())]
        )
      )
    , 1015
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 1014
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 1013
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 1012
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 1011
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 1010
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1009
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 1008
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternValueName"))])
      )
    , 1007
    )
  , label(
      prod(
        [cf(sort("ConstantNegative"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternConst"))])
      )
    , 1006
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 1005
    )
  , label(
      prod(
        [lit("private"), cf(opt(layout())), cf(sort("TypeExpr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPrivate"))])
      )
    , 1004
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 1003
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 1002
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Expr"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 1001
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 1000
    )
  , label(
      prod(
        [ cf(iter(sort("Parameter")))
        , cf(opt(layout()))
        , lit("when")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("MultipleMatching"))
      , attrs([term(cons("MultipleMatching"))])
      )
    , 999
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 998
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 997
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 996
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([assoc(right()), term(cons("Arrow"))])
      )
    , 995
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 994
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 993
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 992
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 991
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 990
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 989
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 988
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 987
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 986
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 985
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 984
    )
  , label(
      prod(
        [cf(sort("Pattern"))]
      , cf(iter-sep(sort("Pattern"), lit(",")))
      , no-attrs()
      )
    , 983
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 982
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 981
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 980
    )
  , label(
      prod(
        [ cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName2"))])
      )
    , 979
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 978
    )
  , label(
      prod(
        [ cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName2"))])
      )
    , 977
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 976
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 975
    )
  , label(
      prod(
        [lit("$MultipleMatching")]
      , cf(sort("MultipleMatching"))
      , attrs([term(placeholder()), term(cons("MultipleMatching-Plhdr"))])
      )
    , 974
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 973
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 972
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 971
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 970
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 969
    )
  , label(
      prod(
        [ cf(sort("OptBar"))
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("when")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter-star(sort("InnerPatternMatching")))
        ]
      , cf(sort("PatternMatching"))
      , attrs([term(cons("PatternMatching")), term(nlm())])
      )
    , 968
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 967
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 966
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 965
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 964
    )
  , label(
      prod(
        [cf(sort("PolymorphicVariantType"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("PolymorphicVariant"))])
      )
    , 963
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 962
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 961
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 960
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 959
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 958
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 957
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 956
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 955
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 954
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 953
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 952
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 951
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 950
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 949
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 948
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 947
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 946
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 945
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 944
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 943
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 942
    )
  , label(
      prod(
        [ cf(iter-sep(sort("TypeExpr"), lit("*")))
        , cf(opt(layout()))
        , lit("*")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(iter-sep(sort("TypeExpr"), lit("*")))
      , no-attrs()
      )
    , 941
    )
  , label(
      prod(
        [cf(sort("Pattern"))]
      , cf(iter-sep(sort("Pattern"), lit(",")))
      , no-attrs()
      )
    , 940
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 939
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 938
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 937
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 936
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 935
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 934
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 933
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 932
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 931
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 930
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 929
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 928
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 927
    )
  , label(
      prod(
        [ cf(iter(sort("Arg")))
        , cf(opt(layout()))
        , cf(sort("Arg"))
        ]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 926
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 925
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 924
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternArray"))])
      )
    , 923
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 922
    )
  , label(
      prod(
        [cf(sort("PolymorphicVariantType"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("PolymorphicVariant"))])
      )
    , 921
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 920
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 919
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 918
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 917
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 916
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 915
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 914
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 913
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 912
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 911
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 910
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 909
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 908
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 907
    )
  , label(
      prod(
        [cf(sort("OptLabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabelColon"))])
      )
    , 906
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternValueName"))])
      )
    , 905
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 904
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 903
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash3"))])
      )
    , 902
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 901
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 900
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 899
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 898
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 897
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 896
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 895
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 894
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 893
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 892
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 891
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 890
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 889
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 888
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 887
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 886
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("MethodType"), lit(";")))
        , cf(opt(layout()))
        , cf(sort("SemiColonDotsOpt"))
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AngleBrackets"))])
      )
    , 885
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 884
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 883
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Pattern"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("LazyPattern"))])
      )
    , 882
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 881
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 880
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 879
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 878
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 877
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 876
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 875
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 874
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 873
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 872
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 871
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 870
    )
  , label(
      prod(
        [cf(sort("Arg"))]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 869
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTypeExpr"))])
      )
    , 868
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 867
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 866
    )
  , label(
      prod(
        [cf(sort("TypeExpr"))]
      , cf(iter-sep(sort("TypeExpr"), lit("*")))
      , no-attrs()
      )
    , 865
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 864
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash1"))])
      )
    , 863
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 862
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 861
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 860
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 859
    )
  , label(
      prod(
        [cf(sort("Expr"))]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 858
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 857
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 856
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 855
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 854
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprTypeConstr"))])
      )
    , 853
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 852
    )
  , label(
      prod(
        [cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr2"))])
      )
    , 851
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("MethodType"), lit(";")))
        , cf(opt(layout()))
        , cf(sort("SemiColonDotsOpt"))
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AngleBrackets"))])
      )
    , 850
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 849
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 848
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 847
    )
  , label(
      prod(
        [lit("'"), cf(opt(layout())), cf(sort("Ident"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("Tag"))])
      )
    , 846
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 845
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 844
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 843
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 842
    )
  , label(
      prod(
        [lit("'"), cf(opt(layout())), cf(sort("Ident"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("Tag"))])
      )
    , 841
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 840
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("TypeConstrName"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternHash"))])
      )
    , 839
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 838
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 837
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 836
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 835
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 834
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 833
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 832
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 831
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 830
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 829
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 828
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 827
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 826
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 825
    )
  , label(
      prod(
        [cf(sort("TypeExpr")), cf(opt(layout())), cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr1"))])
      )
    , 824
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 823
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("MethodType"), lit(";")))
        , cf(opt(layout()))
        , cf(sort("SemiColonDotsOpt"))
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AngleBrackets"))])
      )
    , 822
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(bracket())])
      )
    , 821
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 820
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 819
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 818
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 817
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 816
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 815
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 814
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 813
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 812
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 811
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 810
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 809
    )
  , label(
      prod(
        [cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr2"))])
      )
    , 808
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 807
    )
  , label(
      prod([], cf(iter-star(sort("InnerPatternMatching"))), no-attrs())
    , 806
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 805
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 804
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 803
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 802
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 801
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 800
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 799
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 798
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 797
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 796
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 795
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("ListCons"))])
      )
    , 794
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 793
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 792
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 791
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 790
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash3"))])
      )
    , 789
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 788
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 787
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 786
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 785
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 784
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 783
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 782
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 781
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 780
    )
  , label(
      prod(
        [lit("private"), cf(opt(layout())), cf(sort("TypeExpr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPrivate"))])
      )
    , 779
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 778
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 777
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 776
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 775
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 774
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 773
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 772
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 771
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 770
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 769
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 768
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 767
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 766
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 765
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 764
    )
  , label(
      prod(
        [lit("$PatternMatching")]
      , cf(sort("PatternMatching"))
      , attrs([term(cons("PatternMatching-Plhdr")), term(placeholder())])
      )
    , 763
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 762
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 761
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 760
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 759
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 758
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 757
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 756
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 755
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash1"))])
      )
    , 754
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 753
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 752
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets"))])
      )
    , 751
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 750
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 749
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 748
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 747
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 746
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 745
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 744
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 743
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("ModuleType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("ModuleType"))
      , attrs([term(bracket())])
      )
    , 742
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 741
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTuple2"))])
      )
    , 740
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 739
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 738
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 737
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash2"))])
      )
    , 736
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 735
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 734
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 733
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 732
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 731
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 730
    )
  , label(
      prod(
        [ lit("|")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("InnerPatternMatching"))
      , attrs([term(cons("InnerPatternMatching"))])
      )
    , 729
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 728
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 727
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 726
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 725
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 724
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 723
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 722
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 721
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 720
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 719
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 718
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTuple2"))])
      )
    , 717
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 716
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 715
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Expr"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 714
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 713
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 712
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 711
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 710
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 709
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 708
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 707
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 706
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 705
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 704
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 703
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 702
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 701
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash1"))])
      )
    , 700
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 699
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 698
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 697
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 696
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Let"))])
      )
    , 695
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash2"))])
      )
    , 694
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 693
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 692
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 691
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 690
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 689
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 688
    )
  , label(
      prod(
        [cf(sort("PolymorphicVariantType"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("PolymorphicVariant"))])
      )
    , 687
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 686
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 685
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 684
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Pattern"), lit(";")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternTuple2"))])
      )
    , 683
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash1"))])
      )
    , 682
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 681
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 680
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 679
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 678
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 677
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 676
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 675
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets"))])
      )
    , 674
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 673
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("*")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit("*")))
        ]
      , cf(sort("TypeExpr"))
      , attrs(
          [term(cons("Star")), term(non-assoc()), term(nlm())]
        )
      )
    , 672
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash2"))])
      )
    , 671
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 670
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 669
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(bracket())])
      )
    , 668
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 667
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 666
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 665
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 664
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 663
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 662
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 661
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 660
    )
  , label(
      prod(
        [ lit("|")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("InnerPatternMatching"))
      , attrs([term(cons("InnerPatternMatching"))])
      )
    , 659
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 658
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 657
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 656
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 655
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprTypeConstr"))])
      )
    , 654
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 653
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 652
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 651
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 650
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 649
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 648
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 647
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 646
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 645
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 644
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 643
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 642
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 641
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 640
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 639
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 638
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 637
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 636
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 635
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 634
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 633
    )
  , label(
      prod(
        [cf(sort("OptLabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabelColon"))])
      )
    , 632
    )
  , label(
      prod(
        [cf(sort("TypeExpr")), cf(opt(layout())), cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr1"))])
      )
    , 631
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 630
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 629
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 628
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 627
    )
  , label(
      prod(
        [cf(sort("OptLabel"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabel"))])
      )
    , 626
    )
  , label(
      prod(
        [ lit("module")
        , cf(opt(layout()))
        , lit("type")
        , cf(opt(layout()))
        , lit("of")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        ]
      , cf(sort("ModuleType"))
      , attrs([term(cons("ModuleTypeOf"))])
      )
    , 625
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 624
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldOrFieldEqPattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRec2"))])
      )
    , 623
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldOrFieldEqPattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRec2"))])
      )
    , 622
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 621
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol3"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix3"))])
      )
    , 620
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 619
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 618
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 617
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 616
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 615
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 614
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 613
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 612
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetModule"))])
      )
    , 611
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 610
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 609
    )
  , label(
      prod(
        [ lit("|")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("when")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("InnerPatternMatching"))
      , attrs([term(cons("InnerPatternMatching"))])
      )
    , 608
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("as")
        , cf(opt(layout()))
        , lit("'")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprAsId"))])
      )
    , 607
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 606
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 605
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 604
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 603
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 602
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 601
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 600
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 599
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 598
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 597
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 596
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldOrFieldEqPattern"), lit(";")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRec"))])
      )
    , 595
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 594
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 593
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Expr"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 592
    )
  , label(
      prod(
        [cf(sort("ModTypePath"))]
      , cf(sort("ModuleType"))
      , attrs([term(cons("ModuleTypePath"))])
      )
    , 591
    )
  , label(
      prod(
        [cf(sort("Expr")), cf(opt(layout())), lit(";")]
      , cf(sort("Expr"))
      , attrs([term(cons("SemiColon"))])
      )
    , 590
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 589
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 588
    )
  , label(
      prod(
        [ cf(sort("CharLiteral"))
        , cf(opt(layout()))
        , lit("..")
        , cf(opt(layout()))
        , cf(sort("CharLiteral"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRange"))])
      )
    , 587
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 586
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 585
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 584
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 583
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash3"))])
      )
    , 582
    )
  , label(
      prod(
        [ cf(iter(sort("Arg")))
        , cf(opt(layout()))
        , cf(sort("Arg"))
        ]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 581
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleName"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternPackage"))])
      )
    , 580
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 579
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 578
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternValueName"))])
      )
    , 577
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 576
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 575
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 574
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("|")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Pattern"))
      , attrs([assoc(left()), term(cons("PatternBar"))])
      )
    , 573
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 572
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 571
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 570
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 569
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 568
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 567
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 566
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 565
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 564
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 563
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 562
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("::")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("ColonColon"))])
      )
    , 561
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 560
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([assoc(right()), term(cons("Arrow"))])
      )
    , 559
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 558
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 557
    )
  , label(
      prod(
        [ cf(iter(sort("InnerPatternMatching")))
        , cf(opt(layout()))
        , cf(sort("InnerPatternMatching"))
        ]
      , cf(iter(sort("InnerPatternMatching")))
      , no-attrs()
      )
    , 556
    )
  , label(
      prod(
        [lit("$Arg")]
      , cf(sort("Arg"))
      , attrs([term(placeholder()), term(cons("Arg-Plhdr"))])
      )
    , 555
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 554
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 553
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 552
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 551
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 550
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 549
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 548
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 547
    )
  , label(
      prod(
        [cf(sort("LabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("LabelColon"))])
      )
    , 546
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 545
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 544
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 543
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 542
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 541
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 540
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 539
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 538
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 537
    )
  , label(
      prod(
        [cf(sort("Constr")), cf(opt(layout())), cf(sort("Pattern"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("ConstrPattern"))])
      )
    , 536
    )
  , label(
      prod(
        [cf(sort("ConstantNegative"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternConst"))])
      )
    , 535
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 534
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 533
    )
  , label(
      prod(
        [lit("$MultipleMatching")]
      , cf(sort("MultipleMatching"))
      , attrs([term(placeholder()), term(cons("MultipleMatching-Plhdr"))])
      )
    , 532
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 531
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 530
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 529
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 528
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 527
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 526
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 525
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Expr"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 524
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 523
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 522
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 521
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("MethodType"), lit(";")))
        , cf(opt(layout()))
        , cf(sort("SemiColonDotsOpt"))
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AngleBrackets"))])
      )
    , 520
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(bracket())])
      )
    , 519
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName"))])
      )
    , 518
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 517
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 516
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 515
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("->")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([assoc(right()), term(cons("Arrow"))])
      )
    , 514
    )
  , label(
      prod(
        [lit("private"), cf(opt(layout())), cf(sort("TypeExpr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPrivate"))])
      )
    , 513
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 512
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 511
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 510
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 509
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldOrFieldEqPattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRec2"))])
      )
    , 508
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 507
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 506
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 505
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 504
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 503
    )
  , label(
      prod(
        [lit("$Arg")]
      , cf(sort("Arg"))
      , attrs([term(placeholder()), term(cons("Arg-Plhdr"))])
      )
    , 502
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 501
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 500
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 499
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 498
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 497
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("MethodType"), lit(";")))
        , cf(opt(layout()))
        , cf(sort("SemiColonDotsOpt"))
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AngleBrackets"))])
      )
    , 496
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 495
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 494
    )
  , label(
      prod(
        [cf(sort("PolymorphicVariantType"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("PolymorphicVariant"))])
      )
    , 493
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash1"))])
      )
    , 492
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 491
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("MethodType"), lit(";")))
        , cf(opt(layout()))
        , cf(sort("SemiColonDotsOpt"))
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AngleBrackets"))])
      )
    , 490
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 489
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("MethodName"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Hash"))])
      )
    , 488
    )
  , label(
      prod(
        [cf(sort("OptLabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabelColon"))])
      )
    , 487
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 486
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 485
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 484
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 483
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 482
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 481
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 480
    )
  , label(
      prod(
        [cf(sort("LabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("LabelColon"))])
      )
    , 479
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 478
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 477
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 476
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 475
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 474
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprTypeConstr"))])
      )
    , 473
    )
  , label(
      prod(
        [cf(sort("Label"))]
      , cf(sort("Arg"))
      , attrs([term(cons("Label"))])
      )
    , 472
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 471
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Pattern"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(iter-sep(sort("Pattern"), lit(",")))
      , no-attrs()
      )
    , 470
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 469
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(bracket())])
      )
    , 468
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 467
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 466
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 465
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 464
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 463
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 462
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 461
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 460
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 459
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 458
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 457
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 456
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 455
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 454
    )
  , label(
      prod(
        [ cf(iter-sep(sort("Expr"), lit(",")))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(iter-sep(sort("Expr"), lit(",")))
      , no-attrs()
      )
    , 453
    )
  , label(
      prod(
        [cf(sort("Expr")), cf(opt(layout())), lit(";")]
      , cf(sort("Expr"))
      , attrs([term(cons("SemiColon"))])
      )
    , 452
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 451
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 450
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 449
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 448
    )
  , label(
      prod(
        [lit("<"), cf(opt(layout())), lit(">")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets2"))])
      )
    , 447
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AnyTypexpr"))])
      )
    , 446
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 445
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 444
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash2"))])
      )
    , 443
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 442
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 441
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 440
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol7"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix7"))])
      )
    , 439
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("as")
        , cf(opt(layout()))
        , cf(sort("ValueName"))
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternAs"))])
      )
    , 438
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 437
    )
  , label(
      prod(
        [cf(sort("Constr")), cf(opt(layout())), cf(sort("Pattern"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("ConstrPattern"))])
      )
    , 436
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 435
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 434
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 433
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 432
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 431
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 430
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 429
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 428
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol8"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Infix8")), assoc(right())])
      )
    , 427
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Pattern"))
      , attrs([term(bracket())])
      )
    , 426
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 425
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 424
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 423
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 422
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldOrFieldEqPattern"), lit(";")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRec"))])
      )
    , 421
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 420
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 419
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 418
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldOrFieldEqPattern"), lit(";")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRec"))])
      )
    , 417
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 416
    )
  , label(
      prod(
        [ lit("[")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Tuple"))])
      )
    , 415
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 414
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 413
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 412
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 411
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 410
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 409
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 408
    )
  , label(
      prod(
        [cf(sort("OptLabel"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabel"))])
      )
    , 407
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 406
    )
  , label(
      prod(
        [lit("#"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash1"))])
      )
    , 405
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldOrFieldEqPattern"), lit(";")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRec"))])
      )
    , 404
    )
  , label(
      prod(
        [ lit("?")
        , cf(opt(layout()))
        , cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName"))])
      )
    , 403
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 402
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 401
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 400
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 399
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 398
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 397
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Field"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign1"))])
      )
    , 396
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 395
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 394
    )
  , label(
      prod(
        [lit("$TypeExpr")]
      , cf(sort("TypeExpr"))
      , attrs([term(placeholder()), term(cons("TypeExpr-Plhdr"))])
      )
    , 393
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign4"))])
      )
    , 392
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 391
    )
  , label(
      prod(
        [cf(sort("TypeExpr"))]
      , cf(iter-sep(sort("TypeExpr"), lit("*")))
      , no-attrs()
      )
    , 390
    )
  , label(
      prod(
        [ cf(sort("InstVarName"))
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Assign5"))])
      )
    , 389
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 388
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 387
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 386
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 385
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldOrFieldEqPattern"), lit(";")))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternRec2"))])
      )
    , 384
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 383
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 382
    )
  , label(
      prod(
        [cf(sort("Pattern"))]
      , cf(iter-sep(sort("Pattern"), lit(",")))
      , no-attrs()
      )
    , 381
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 380
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 379
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 378
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 377
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol4"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix4"))])
      )
    , 376
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 375
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("*")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit("*")))
        ]
      , cf(sort("TypeExpr"))
      , attrs(
          [term(cons("Star")), term(non-assoc()), term(nlm())]
        )
      )
    , 374
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 373
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 372
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 371
    )
  , label(
      prod(
        [ lit("<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("MethodType"), lit(";")))
        , cf(opt(layout()))
        , cf(sort("SemiColonDotsOpt"))
        , cf(opt(layout()))
        , lit(">")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AngleBrackets"))])
      )
    , 370
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 369
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 368
    )
  , label(
      prod(
        [cf(sort("LabelColon")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Arg"))
      , attrs([term(cons("LabelColon"))])
      )
    , 367
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit(",")))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , cf(sort("TypeConstr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprTypeConstr"))])
      )
    , 366
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 365
    )
  , label(
      prod(
        [ lit("try")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("TryBlock"))])
      )
    , 364
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 363
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 362
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 361
    )
  , label(
      prod(
        [ cf(iter(sort("Arg")))
        , cf(opt(layout()))
        , cf(sort("Arg"))
        ]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 360
    )
  , label(
      prod(
        [ lit("object")
        , cf(opt(layout()))
        , cf(sort("ClassBody"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Object"))])
      )
    , 359
    )
  , label(
      prod(
        [cf(sort("Expr")), cf(opt(layout())), lit(";")]
      , cf(sort("Expr"))
      , attrs([term(cons("SemiColon"))])
      )
    , 358
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 357
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 356
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 355
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 354
    )
  , label(
      prod(
        [cf(sort("PrefixSymbol")), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Prefix"))])
      )
    , 353
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 352
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Field"))])
      )
    , 351
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 350
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 349
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 348
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 347
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 346
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 345
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 344
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 343
    )
  , label(
      prod(
        [cf(sort("Constr")), cf(opt(layout())), cf(sort("Pattern"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("ConstrPattern"))])
      )
    , 342
    )
  , label(
      prod(
        [ lit("{<")
        , cf(opt(layout()))
        , cf(iter-sep(sort("AssignInstVarName"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit(">}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets4"))])
      )
    , 341
    )
  , label(
      prod(
        [lit("$Arg")]
      , cf(sort("Arg"))
      , attrs([term(placeholder()), term(cons("Arg-Plhdr"))])
      )
    , 340
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets3"))])
      )
    , 339
    )
  , label(
      prod(
        [ cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName2"))])
      )
    , 338
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 337
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 336
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign3"))])
      )
    , 335
    )
  , label(
      prod(
        [cf(sort("ConstrName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 334
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 333
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 332
    )
  , label(
      prod(
        [cf(sort("OptLabel"))]
      , cf(sort("Arg"))
      , attrs([term(cons("OptLabel"))])
      )
    , 331
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 330
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 329
    )
  , label(
      prod(
        [lit("lazy"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Lazy"))])
      )
    , 328
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 327
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 326
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 325
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 324
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 323
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 322
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 321
    )
  , label(
      prod(
        [ cf(iter(sort("Arg")))
        , cf(opt(layout()))
        , cf(sort("Arg"))
        ]
      , cf(iter(sort("Arg")))
      , no-attrs()
      )
    , 320
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets1"))])
      )
    , 319
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("!=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Uneq"))])
      )
    , 318
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 317
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(":>")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Brackets2"))])
      )
    , 316
    )
  , label(
      prod(
        [cf(sort("Expr")), cf(opt(layout())), lit(";")]
      , cf(sort("Expr"))
      , attrs([term(cons("SemiColon"))])
      )
    , 315
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 314
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("[")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket2"))])
      )
    , 313
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 312
    )
  , label(
      prod(
        [cf(sort("ValueName"))]
      , cf(sort("Expr"))
      , no-attrs()
      )
    , 311
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 310
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 309
    )
  , label(
      prod(
        [cf(sort("Constr")), cf(opt(layout())), cf(sort("Pattern"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("ConstrPattern"))])
      )
    , 308
    )
  , label(
      prod(
        [ lit("while")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("While"))])
      )
    , 307
    )
  , label(
      prod(
        [cf(sort("Label"))]
      , cf(sort("Arg"))
      , attrs([term(cons("Label"))])
      )
    , 306
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 305
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol1"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix1"))])
      )
    , 304
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket3"))])
      )
    , 303
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 302
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("PackageType"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprPackage"))])
      )
    , 301
    )
  , label(
      prod(
        [ lit("[|")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("|]")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Array"))])
      )
    , 300
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record1"))])
      )
    , 299
    )
  , label(
      prod(
        [lit("new"), cf(opt(layout())), cf(sort("ClassPath"))]
      , cf(sort("Expr"))
      , attrs([term(cons("New"))])
      )
    , 298
    )
  , label(
      prod(
        [ lit("let")
        , cf(opt(layout()))
        , lit("rec")
        , cf(opt(layout()))
        , cf(iter-sep(sort("LetBinding"), lit("and")))
        , cf(opt(layout()))
        , lit("in")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("LetRec"))])
      )
    , 297
    )
  , label(
      prod(
        [ lit("match")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(sort("PatternMatching"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Match"))])
      )
    , 296
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol2"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix2"))])
      )
    , 295
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThen"))])
      )
    , 294
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 293
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 292
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 291
    )
  , label(
      prod(
        [cf(sort("Constant"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Constant"))])
      )
    , 290
    )
  , label(
      prod(
        [ lit("begin")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("end")
        ]
      , cf(sort("Expr"))
      , attrs([term(bracket())])
      )
    , 289
    )
  , label(
      prod(
        [ lit("{")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("with")
        , cf(opt(layout()))
        , cf(iter-sep(sort("FieldAssign"), lit(";")))
        , cf(opt(layout()))
        , cf(opt(sort("SemiColon")))
        , cf(opt(layout()))
        , lit("}")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Record2"))])
      )
    , 288
    )
  , label(
      prod(
        [ lit("for")
        , cf(opt(layout()))
        , cf(sort("Ident"))
        , cf(opt(layout()))
        , lit("=")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("ToDownTo"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("do")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("done")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("For"))])
      )
    , 287
    )
  , label(
      prod(
        [lit("$Expr")]
      , cf(sort("Expr"))
      , attrs([term(cons("Expr-Plhdr")), term(placeholder())])
      )
    , 286
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 285
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("DotBracket1"))])
      )
    , 284
    )
  , label(
      prod(
        [lit("$InnerPatternMatching")]
      , cf(sort("InnerPatternMatching"))
      , attrs([term(placeholder()), term(cons("InnerPatternMatching-Plhdr"))])
      )
    , 283
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("#")
        , cf(opt(layout()))
        , cf(sort("ClassPath"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprHash2"))])
      )
    , 282
    )
  , label(
      prod(
        [cf(sort("ConstantNegative"))]
      , cf(sort("Pattern"))
      , attrs([term(cons("PatternConst"))])
      )
    , 281
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(iter(sort("Arg")))
        ]
      , cf(sort("Expr"))
      , attrs(
          [term(cons("FunctionApp")), term(non-assoc()), term(nlm())]
        )
      )
    , 280
    )
  , label(
      prod(
        [lit("function"), cf(opt(layout())), cf(sort("PatternMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Function"))])
      )
    , 279
    )
  , label(
      prod(
        [ lit("(")
        , cf(opt(layout()))
        , lit("module")
        , cf(opt(layout()))
        , cf(sort("ModuleExpr"))
        , cf(opt(layout()))
        , cf(sort("ColonPackageTypeOpt"))
        , cf(opt(layout()))
        , lit(")")
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("ModuleExpr"))])
      )
    , 278
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 277
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 276
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol5"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(left()), term(cons("Infix5"))])
      )
    , 275
    )
  , label(
      prod(
        [ cf(sort("Pattern"))
        , cf(opt(layout()))
        , lit("|")
        , cf(opt(layout()))
        , cf(sort("Pattern"))
        ]
      , cf(sort("Pattern"))
      , attrs([assoc(left()), term(cons("PatternBar"))])
      )
    , 274
    )
  , label(
      prod(
        [lit("-."), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("FUnaryMinus"))])
      )
    , 273
    )
  , label(
      prod(
        [cf(sort("TypeExpr")), cf(opt(layout())), cf(sort("TypeConstr"))]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("TypeExprConstr1"))])
      )
    , 272
    )
  , label(
      prod(
        [lit("<"), cf(opt(layout())), lit(">")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("EmptyAngleBrackets2"))])
      )
    , 271
    )
  , label(
      prod(
        [lit("-"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("UnaryMinus"))])
      )
    , 270
    )
  , label(
      prod(
        [ cf(iter-sep(sort("TypeExpr"), lit("*")))
        , cf(opt(layout()))
        , lit("*")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(iter-sep(sort("TypeExpr"), lit("*")))
      , no-attrs()
      )
    , 269
    )
  , label(
      prod(
        [lit("$PatternMatching")]
      , cf(sort("PatternMatching"))
      , attrs([term(cons("PatternMatching-Plhdr")), term(placeholder())])
      )
    , 268
    )
  , label(
      prod(
        [lit("_")]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("AnyTypexpr"))])
      )
    , 267
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 266
    )
  , label(
      prod(
        [ cf(sort("LabelName"))
        , cf(opt(layout()))
        , lit(":")
        , cf(opt(layout()))
        , cf(sort("TypeExpr"))
        ]
      , cf(sort("TypeExpr"))
      , attrs([term(cons("LabelName2"))])
      )
    , 265
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(",")
        , cf(opt(layout()))
        , cf(iter-sep(sort("Expr"), lit(",")))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("Comma")), term(non-assoc())])
      )
    , 264
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , cf(sort("InfixSymbol6"))
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Infix6"))])
      )
    , 263
    )
  , label(
      prod(
        [lit("assert"), cf(opt(layout())), cf(sort("Expr"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Assert"))])
      )
    , 262
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(".")
        , cf(opt(layout()))
        , lit("(")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(")")
        , cf(opt(layout()))
        , lit("<-")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Assign2"))])
      )
    , 261
    )
  , label(
      prod(
        [lit("fun"), cf(opt(layout())), cf(sort("MultipleMatching"))]
      , cf(sort("Expr"))
      , attrs([term(cons("Fun"))])
      )
    , 260
    )
  , label(
      prod(
        [ cf(sort("TypeExpr"))
        , cf(opt(layout()))
        , lit("*")
        , cf(opt(layout()))
        , cf(iter-sep(sort("TypeExpr"), lit("*")))
        ]
      , cf(sort("TypeExpr"))
      , attrs(
          [term(cons("Star")), term(non-assoc()), term(nlm())]
        )
      )
    , 259
    )
  , label(
      prod(
        [ cf(sort("Expr"))
        , cf(opt(layout()))
        , lit(";")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([assoc(right()), term(cons("Sep"))])
      )
    , 258
    )
  , label(
      prod(
        [ lit("if")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("then")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        , cf(opt(layout()))
        , lit("else")
        , cf(opt(layout()))
        , cf(sort("Expr"))
        ]
      , cf(sort("Expr"))
      , attrs([term(cons("IfThenElse"))])
      )
    , 257
    )
  ]
, states([])
, priorities(
    [ arg-gtr-prio(3212, 2, 3578)
    , gtr-prio(3184, 2401)
    , arg-gtr-prio(3184, 6, 2401)
    , arg-gtr-prio(3043, 0, 3068)
    , gtr-prio(3043, 3068)
    , gtr-prio(2575, 2509)
    , arg-gtr-prio(2575, 0, 2509)
    , arg-gtr-prio(3578, 0, 3583)
    , gtr-prio(3578, 3583)
    , arg-gtr-prio(3578, 4, 3583)
    , gtr-prio(3376, 2401)
    , gtr-prio(2685, 3427)
    , arg-gtr-prio(2685, 2, 3427)
    , arg-gtr-prio(2559, 0, 3184)
    , gtr-prio(3074, 3184)
    , gtr-prio(2674, 2591)
    , arg-gtr-prio(2569, 0, 2569)
    , arg-gtr-prio(2569, 2, 2569)
    , gtr-prio(3043, 2474)
    , arg-gtr-prio(3043, 0, 2474)
    , gtr-prio(3484, 3142)
    , arg-gtr-prio(3484, 6, 3142)
    , gtr-prio(3550, 2405)
    , arg-gtr-prio(3550, 0, 2405)
    , arg-gtr-prio(2451, 0, 3505)
    , gtr-prio(2451, 3505)
    , arg-gtr-prio(3078, 4, 2401)
    , gtr-prio(3042, 3159)
    , arg-gtr-prio(3042, 2, 3159)
    , arg-gtr-prio(3233, 0, 2474)
    , gtr-prio(3233, 2474)
    , arg-gtr-prio(3233, 4, 2474)
    , arg-gtr-prio(2510, 0, 3159)
    , gtr-prio(2510, 3159)
    , arg-gtr-prio(2510, 4, 3159)
    , arg-gtr-prio(2451, 0, 3159)
    , gtr-prio(2451, 3159)
    , arg-gtr-prio(2451, 4, 3159)
    , arg-gtr-prio(3233, 0, 3068)
    , gtr-prio(3233, 3068)
    , arg-gtr-prio(2732, 0, 2688)
    , gtr-prio(2732, 2688)
    , arg-gtr-prio(2732, 0, 3345)
    , gtr-prio(2732, 3345)
    , arg-gtr-prio(2569, 0, 2732)
    , gtr-prio(2569, 2732)
    , arg-gtr-prio(2569, 2, 2732)
    , arg-gtr-prio(2749, 4, 3427)
    , arg-gtr-prio(2509, 0, 3696)
    , gtr-prio(2509, 3696)
    , arg-gtr-prio(3003, 0, 3720)
    , gtr-prio(3003, 3720)
    , arg-gtr-prio(2395, 0, 3606)
    , gtr-prio(2575, 3233)
    , arg-gtr-prio(2575, 0, 3233)
    , arg-gtr-prio(2732, 0, 2590)
    , gtr-prio(2732, 2590)
    , arg-gtr-prio(2732, 4, 2590)
    , arg-gtr-prio(2559, 0, 2946)
    , arg-gtr-prio(2946, 0, 3546)
    , gtr-prio(2946, 3546)
    , gtr-prio(2674, 3068)
    , arg-gtr-prio(2509, 0, 3638)
    , gtr-prio(2509, 3638)
    , arg-gtr-prio(3550, 0, 2591)
    , gtr-prio(3550, 2591)
    , arg-gtr-prio(3003, 0, 3631)
    , gtr-prio(3003, 3631)
    , arg-gtr-prio(2732, 0, 3427)
    , gtr-prio(2732, 3427)
    , arg-gtr-prio(2732, 4, 3427)
    , gtr-prio(3074, 2732)
    , arg-gtr-prio(3074, 2, 2732)
    , gtr-prio(3505, 3345)
    , arg-gtr-prio(2384, 2, 2674)
    , gtr-prio(2685, 2673)
    , arg-gtr-prio(2685, 2, 2673)
    , arg-gtr-prio(3550, 0, 2674)
    , gtr-prio(3550, 2674)
    , gtr-prio(2674, 2405)
    , arg-gtr-prio(2674, 2, 2405)
    , gtr-prio(3505, 2688)
    , arg-gtr-prio(3520, 0, 2473)
    , gtr-prio(3520, 2473)
    , arg-gtr-prio(3520, 4, 2473)
    , gtr-prio(2739, 2440)
    , arg-gtr-prio(2739, 0, 2440)
    , arg-gtr-prio(2473, 0, 3427)
    , gtr-prio(2473, 3427)
    , arg-gtr-prio(2473, 8, 3427)
    , arg-gtr-prio(2451, 0, 3638)
    , gtr-prio(2451, 3638)
    , arg-gtr-prio(3378, 0, 2401)
    , arg-gtr-prio(2946, 0, 3583)
    , gtr-prio(2946, 3583)
    , arg-gtr-prio(2946, 4, 3583)
    , gtr-prio(2685, 2473)
    , arg-gtr-prio(2685, 2, 2473)
    , arg-gtr-prio(2384, 2, 2591)
    , arg-gtr-prio(2474, 0, 2474)
    , gtr-prio(2591, 3720)
    , gtr-prio(3376, 2509)
    , arg-gtr-prio(3376, 0, 2509)
    , gtr-prio(2575, 3003)
    , arg-gtr-prio(2575, 0, 3003)
    , gtr-prio(3068, 3720)
    , arg-gtr-prio(2946, 0, 2473)
    , gtr-prio(2946, 2473)
    , arg-gtr-prio(2946, 4, 2473)
    , arg-gtr-prio(3159, 0, 3583)
    , gtr-prio(3159, 3583)
    , arg-gtr-prio(3159, 4, 3583)
    , arg-gtr-prio(2559, 0, 2732)
    , arg-gtr-prio(2384, 2, 2569)
    , arg-gtr-prio(3003, 0, 2451)
    , gtr-prio(3003, 2451)
    , arg-gtr-prio(3003, 4, 2451)
    , gtr-prio(2591, 3696)
    , arg-gtr-prio(2401, 0, 2688)
    , gtr-prio(2401, 2688)
    , arg-gtr-prio(2673, 0, 2474)
    , gtr-prio(2673, 2474)
    , arg-gtr-prio(2673, 12, 2474)
    , arg-gtr-prio(3378, 0, 3427)
    , arg-gtr-prio(3233, 0, 3159)
    , gtr-prio(3233, 3159)
    , arg-gtr-prio(3233, 4, 3159)
    , gtr-prio(2591, 3520)
    , arg-gtr-prio(2591, 2, 3520)
    , gtr-prio(3068, 3546)
    , arg-gtr-prio(2401, 0, 3546)
    , gtr-prio(2401, 3546)
    , arg-gtr-prio(3583, 0, 3546)
    , gtr-prio(3583, 3546)
    , arg-gtr-prio(3520, 0, 2688)
    , gtr-prio(3520, 2688)
    , arg-gtr-prio(2405, 0, 3068)
    , gtr-prio(2405, 3068)
    , arg-gtr-prio(2569, 0, 2674)
    , arg-gtr-prio(2569, 2, 2674)
    , arg-gtr-prio(3520, 4, 3520)
    , gtr-prio(3505, 3427)
    , arg-gtr-prio(3505, 10, 3427)
    , arg-gtr-prio(2451, 0, 3068)
    , gtr-prio(2451, 3068)
    , arg-gtr-prio(3233, 0, 3505)
    , gtr-prio(3233, 3505)
    , arg-gtr-prio(3520, 0, 3546)
    , gtr-prio(3520, 3546)
    , gtr-prio(2732, 2401)
    , arg-gtr-prio(2732, 4, 2401)
    , gtr-prio(3074, 2946)
    , arg-gtr-prio(3074, 2, 2946)
    , arg-gtr-prio(3583, 0, 3720)
    , gtr-prio(3583, 3720)
    , arg-gtr-prio(3159, 0, 2473)
    , gtr-prio(3159, 2473)
    , arg-gtr-prio(3159, 4, 2473)
    , arg-gtr-prio(2405, 0, 2474)
    , gtr-prio(2405, 2474)
    , arg-gtr-prio(2405, 4, 2474)
    , gtr-prio(3376, 3233)
    , arg-gtr-prio(3376, 0, 3233)
    , arg-gtr-prio(3551, 0, 3042)
    , gtr-prio(3551, 3042)
    , arg-gtr-prio(2509, 0, 3720)
    , gtr-prio(2509, 3720)
    , arg-gtr-prio(3583, 0, 3696)
    , gtr-prio(3583, 3696)
    , gtr-prio(2685, 2688)
    , arg-gtr-prio(2569, 0, 3184)
    , gtr-prio(2569, 3184)
    , arg-gtr-prio(3212, 2, 3520)
    , arg-gtr-prio(2395, 0, 2533)
    , gtr-prio(3042, 3068)
    , arg-gtr-prio(3578, 0, 3578)
    , arg-gtr-prio(3003, 0, 3638)
    , gtr-prio(3003, 3638)
    , arg-gtr-prio(3282, 0, 3201)
    , gtr-prio(3282, 3201)
    , arg-gtr-prio(2473, 0, 2688)
    , gtr-prio(2473, 2688)
    , gtr-prio(2401, 3427)
    , arg-gtr-prio(2401, 0, 3427)
    , gtr-prio(3550, 2569)
    , arg-gtr-prio(3550, 0, 2569)
    , arg-gtr-prio(2590, 0, 3184)
    , gtr-prio(2590, 3184)
    , arg-gtr-prio(2732, 0, 2673)
    , gtr-prio(2732, 2673)
    , arg-gtr-prio(2732, 4, 2673)
    , arg-gtr-prio(2451, 0, 3720)
    , gtr-prio(2451, 3720)
    , gtr-prio(2739, 3142)
    , gtr-prio(2591, 3546)
    , arg-gtr-prio(3376, 0, 2688)
    , gtr-prio(3376, 2688)
    , arg-gtr-prio(3578, 0, 3631)
    , gtr-prio(3578, 3631)
    , gtr-prio(3042, 2451)
    , arg-gtr-prio(3042, 2, 2451)
    , arg-gtr-prio(2451, 0, 2451)
    , arg-gtr-prio(2405, 0, 2405)
    , arg-gtr-prio(3376, 0, 2685)
    , gtr-prio(3376, 2685)
    , gtr-prio(3505, 2401)
    , arg-gtr-prio(3505, 10, 2401)
    , gtr-prio(3551, 3003)
    , arg-gtr-prio(3551, 0, 3003)
    , gtr-prio(3184, 2688)
    , arg-gtr-prio(2509, 0, 2451)
    , gtr-prio(2509, 2451)
    , arg-gtr-prio(2509, 4, 2451)
    , arg-gtr-prio(2473, 0, 2473)
    , arg-gtr-prio(3520, 0, 3427)
    , gtr-prio(3520, 3427)
    , arg-gtr-prio(3520, 4, 3427)
    , arg-gtr-prio(3043, 0, 3638)
    , gtr-prio(3043, 3638)
    , gtr-prio(2575, 2673)
    , arg-gtr-prio(2575, 0, 2673)
    , gtr-prio(3376, 3003)
    , arg-gtr-prio(3376, 0, 3003)
    , gtr-prio(3068, 3631)
    , gtr-prio(3550, 2732)
    , arg-gtr-prio(3550, 0, 2732)
    , arg-gtr-prio(3159, 0, 3427)
    , gtr-prio(3159, 3427)
    , arg-gtr-prio(3159, 4, 3427)
    , arg-gtr-prio(3520, 0, 3583)
    , gtr-prio(3520, 3583)
    , arg-gtr-prio(3520, 4, 3583)
    , gtr-prio(3042, 3720)
    , gtr-prio(2591, 2473)
    , arg-gtr-prio(2591, 2, 2473)
    , arg-gtr-prio(3578, 0, 3505)
    , gtr-prio(3578, 3505)
    , arg-gtr-prio(3282, 0, 3282)
    , arg-gtr-prio(3282, 4, 3282)
    , gtr-prio(3074, 2674)
    , arg-gtr-prio(3583, 0, 3638)
    , gtr-prio(3583, 3638)
    , gtr-prio(2674, 2451)
    , arg-gtr-prio(2674, 2, 2451)
    , arg-gtr-prio(2405, 0, 3505)
    , gtr-prio(2405, 3505)
    , gtr-prio(3184, 3427)
    , arg-gtr-prio(3184, 6, 3427)
    , arg-gtr-prio(3520, 0, 2590)
    , gtr-prio(3520, 2590)
    , arg-gtr-prio(3520, 4, 2590)
    , gtr-prio(3042, 3578)
    , arg-gtr-prio(3042, 2, 3578)
    , gtr-prio(3068, 3638)
    , arg-gtr-prio(2473, 0, 3546)
    , gtr-prio(2473, 3546)
    , gtr-prio(3551, 2946)
    , arg-gtr-prio(3551, 0, 2946)
    , arg-gtr-prio(3550, 0, 3505)
    , gtr-prio(3550, 3505)
    , arg-gtr-prio(3583, 0, 3631)
    , gtr-prio(3583, 3631)
    , arg-gtr-prio(2732, 0, 2509)
    , gtr-prio(2732, 2509)
    , arg-gtr-prio(2732, 4, 2509)
    , arg-gtr-prio(3212, 2, 2451)
    , arg-gtr-prio(2405, 0, 3631)
    , gtr-prio(2405, 3631)
    , gtr-prio(2685, 3546)
    , gtr-prio(2575, 3043)
    , arg-gtr-prio(3233, 0, 3631)
    , gtr-prio(3233, 3631)
    , arg-gtr-prio(2575, 0, 3042)
    , gtr-prio(2575, 3042)
    , gtr-prio(3074, 3042)
    , gtr-prio(3068, 3427)
    , arg-gtr-prio(3068, 4, 3427)
    , arg-gtr-prio(3212, 2, 3505)
    , arg-gtr-prio(3520, 0, 2673)
    , gtr-prio(3520, 2673)
    , arg-gtr-prio(3520, 4, 2673)
    , arg-gtr-prio(3043, 0, 3631)
    , gtr-prio(3043, 3631)
    , arg-gtr-prio(2384, 2, 2946)
    , arg-gtr-prio(3043, 0, 3720)
    , gtr-prio(3043, 3720)
    , gtr-prio(3551, 2673)
    , arg-gtr-prio(3551, 0, 2673)
    , arg-gtr-prio(3550, 0, 3631)
    , gtr-prio(3550, 3631)
    , arg-gtr-prio(2946, 0, 3720)
    , gtr-prio(2946, 3720)
    , arg-gtr-prio(2405, 0, 2451)
    , gtr-prio(2405, 2451)
    , arg-gtr-prio(2405, 4, 2451)
    , arg-gtr-prio(2946, 0, 3427)
    , gtr-prio(2946, 3427)
    , arg-gtr-prio(2946, 4, 3427)
    , arg-gtr-prio(2673, 0, 3184)
    , gtr-prio(2673, 3184)
    , arg-gtr-prio(3043, 0, 2674)
    , gtr-prio(3043, 2674)
    , arg-gtr-prio(2739, 0, 3201)
    , gtr-prio(2739, 3201)
    , arg-gtr-prio(3003, 0, 3546)
    , gtr-prio(3003, 3546)
    , arg-gtr-prio(2732, 0, 3233)
    , gtr-prio(2732, 3233)
    , arg-gtr-prio(2732, 4, 3233)
    , gtr-prio(3042, 3638)
    , arg-gtr-prio(3159, 0, 2590)
    , gtr-prio(3159, 2590)
    , arg-gtr-prio(3159, 4, 2590)
    , arg-gtr-prio(3043, 0, 3505)
    , gtr-prio(3043, 3505)
    , arg-gtr-prio(3583, 0, 3345)
    , gtr-prio(3583, 3345)
    , gtr-prio(2876, 3142)
    , arg-gtr-prio(2876, 4, 3142)
    , arg-gtr-prio(2384, 2, 3505)
    , gtr-prio(2674, 3696)
    , arg-gtr-prio(3043, 0, 2591)
    , gtr-prio(3043, 2591)
    , gtr-prio(2685, 3583)
    , arg-gtr-prio(2685, 2, 3583)
    , arg-gtr-prio(3003, 0, 3505)
    , gtr-prio(3003, 3505)
    , arg-gtr-prio(2395, 0, 3235)
    , arg-gtr-prio(2384, 2, 2732)
    , arg-gtr-prio(3551, 0, 2685)
    , gtr-prio(3551, 2685)
    , gtr-prio(3042, 3631)
    , arg-gtr-prio(2509, 0, 3505)
    , gtr-prio(2509, 3505)
    , gtr-prio(2575, 3427)
    , arg-gtr-prio(2575, 0, 3427)
    , gtr-prio(2591, 3159)
    , arg-gtr-prio(2591, 2, 3159)
    , arg-gtr-prio(2474, 0, 3638)
    , gtr-prio(2474, 3638)
    , arg-gtr-prio(3578, 0, 3427)
    , gtr-prio(3578, 3427)
    , arg-gtr-prio(3578, 4, 3427)
    , arg-gtr-prio(2473, 0, 2673)
    , gtr-prio(3074, 2575)
    , arg-gtr-prio(3074, 2, 2575)
    , arg-gtr-prio(2946, 0, 2673)
    , gtr-prio(2946, 2673)
    , arg-gtr-prio(2946, 4, 2673)
    , arg-gtr-prio(2732, 0, 3583)
    , gtr-prio(2732, 3583)
    , arg-gtr-prio(2732, 4, 3583)
    , gtr-prio(3551, 3427)
    , arg-gtr-prio(3551, 0, 3427)
    , arg-gtr-prio(2473, 0, 2590)
    , arg-gtr-prio(2575, 0, 2685)
    , gtr-prio(2575, 2685)
    , gtr-prio(3074, 2569)
    , arg-gtr-prio(3074, 2, 2569)
    , arg-gtr-prio(3376, 0, 3042)
    , gtr-prio(3376, 3042)
    , gtr-prio(3551, 3043)
    , arg-gtr-prio(2946, 0, 2590)
    , gtr-prio(2946, 2590)
    , arg-gtr-prio(2946, 4, 2590)
    , gtr-prio(3042, 3505)
    , arg-gtr-prio(2509, 0, 3631)
    , gtr-prio(2509, 3631)
    , arg-gtr-prio(3578, 0, 3546)
    , gtr-prio(3578, 3546)
    , gtr-prio(2674, 3184)
    , arg-gtr-prio(3159, 0, 3546)
    , gtr-prio(3159, 3546)
    , arg-gtr-prio(2451, 0, 3631)
    , gtr-prio(2451, 3631)
    , gtr-prio(2575, 2946)
    , arg-gtr-prio(2575, 0, 2946)
    , arg-gtr-prio(3070, 0, 2401)
    , gtr-prio(3070, 2401)
    , gtr-prio(3042, 2591)
    , gtr-prio(2674, 2474)
    , arg-gtr-prio(2674, 2, 2474)
    , gtr-prio(3068, 3505)
    , arg-gtr-prio(3078, 4, 3427)
    , arg-gtr-prio(3159, 0, 3720)
    , gtr-prio(3159, 3720)
    , arg-gtr-prio(2405, 0, 3638)
    , gtr-prio(2405, 3638)
    , arg-gtr-prio(3233, 0, 3638)
    , gtr-prio(3233, 3638)
    , gtr-prio(2846, 2721)
    , gtr-prio(2674, 3159)
    , arg-gtr-prio(2674, 2, 3159)
    , arg-gtr-prio(2732, 0, 2473)
    , gtr-prio(2732, 2473)
    , arg-gtr-prio(2732, 4, 2473)
    , gtr-prio(2685, 2590)
    , arg-gtr-prio(2685, 2, 2590)
    , arg-gtr-prio(3159, 0, 2673)
    , gtr-prio(3159, 2673)
    , arg-gtr-prio(3159, 4, 2673)
    , gtr-prio(3074, 3003)
    , arg-gtr-prio(3074, 2, 3003)
    , arg-gtr-prio(2628, 0, 3606)
    , gtr-prio(2628, 3606)
    , arg-gtr-prio(2628, 4, 3606)
    , arg-gtr-prio(3376, 0, 3345)
    , gtr-prio(3376, 3345)
    , gtr-prio(2591, 3583)
    , arg-gtr-prio(2591, 2, 3583)
    , arg-gtr-prio(3578, 0, 3720)
    , gtr-prio(3578, 3720)
    , arg-gtr-prio(2569, 0, 3631)
    , gtr-prio(2569, 3631)
    , gtr-prio(3583, 2401)
    , arg-gtr-prio(3583, 12, 2401)
    , gtr-prio(3074, 3068)
    , arg-gtr-prio(3159, 0, 3068)
    , gtr-prio(3159, 3068)
    , arg-gtr-prio(2401, 0, 3631)
    , gtr-prio(2401, 3631)
    , arg-gtr-prio(2732, 0, 3720)
    , gtr-prio(2732, 3720)
    , arg-gtr-prio(3578, 0, 2590)
    , gtr-prio(3578, 2590)
    , arg-gtr-prio(3578, 4, 2590)
    , arg-gtr-prio(2473, 0, 3696)
    , gtr-prio(2473, 3696)
    , arg-gtr-prio(3583, 0, 2474)
    , gtr-prio(3583, 2474)
    , arg-gtr-prio(3583, 12, 2474)
    , arg-gtr-prio(3520, 0, 2451)
    , gtr-prio(3520, 2451)
    , arg-gtr-prio(3520, 4, 2451)
    , arg-gtr-prio(2732, 0, 3696)
    , gtr-prio(2732, 3696)
    , arg-gtr-prio(3376, 0, 3184)
    , gtr-prio(3376, 3184)
    , arg-gtr-prio(2473, 0, 3720)
    , gtr-prio(2473, 3720)
    , arg-gtr-prio(2451, 0, 2473)
    , gtr-prio(2451, 2473)
    , arg-gtr-prio(2451, 4, 2473)
    , arg-gtr-prio(3520, 0, 3638)
    , gtr-prio(3520, 3638)
    , arg-gtr-prio(2405, 0, 3578)
    , gtr-prio(2405, 3578)
    , arg-gtr-prio(2405, 4, 3578)
    , arg-gtr-prio(3550, 0, 3042)
    , gtr-prio(3550, 3042)
    , gtr-prio(3551, 2473)
    , arg-gtr-prio(3551, 0, 2473)
    , gtr-prio(3550, 3578)
    , arg-gtr-prio(3550, 0, 3578)
    , arg-gtr-prio(2405, 0, 3583)
    , gtr-prio(2405, 3583)
    , arg-gtr-prio(2405, 4, 3583)
    , arg-gtr-prio(3578, 0, 2673)
    , gtr-prio(3578, 2673)
    , arg-gtr-prio(3578, 4, 2673)
    , arg-gtr-prio(3520, 0, 2509)
    , gtr-prio(3520, 2509)
    , arg-gtr-prio(3520, 4, 2509)
    , gtr-prio(3551, 2569)
    , arg-gtr-prio(3551, 0, 2569)
    , gtr-prio(2674, 3583)
    , arg-gtr-prio(2674, 2, 3583)
    , gtr-prio(3550, 3043)
    , gtr-prio(2685, 3720)
    , arg-gtr-prio(2405, 0, 3720)
    , gtr-prio(2405, 3720)
    , gtr-prio(2876, 2739)
    , arg-gtr-prio(2876, 4, 2739)
    , arg-gtr-prio(2946, 0, 2401)
    , gtr-prio(2946, 2401)
    , arg-gtr-prio(2946, 4, 2401)
    , gtr-prio(2590, 2401)
    , arg-gtr-prio(2590, 12, 2401)
    , gtr-prio(3074, 3233)
    , arg-gtr-prio(3074, 2, 3233)
    , arg-gtr-prio(3578, 0, 2688)
    , gtr-prio(3578, 2688)
    , arg-gtr-prio(3212, 2, 2674)
    , arg-gtr-prio(2474, 0, 3696)
    , gtr-prio(2474, 3696)
    , arg-gtr-prio(2440, 0, 2440)
    , gtr-prio(2591, 2474)
    , arg-gtr-prio(2591, 2, 2474)
    , gtr-prio(3042, 3520)
    , arg-gtr-prio(3042, 2, 3520)
    , arg-gtr-prio(2732, 0, 3578)
    , gtr-prio(2732, 3578)
    , arg-gtr-prio(2732, 4, 3578)
    , gtr-prio(2674, 3578)
    , arg-gtr-prio(2674, 2, 3578)
    , gtr-prio(2628, 2533)
    , arg-gtr-prio(2628, 4, 2533)
    , arg-gtr-prio(3520, 0, 3505)
    , gtr-prio(3520, 3505)
    , arg-gtr-prio(3376, 0, 3546)
    , gtr-prio(3376, 3546)
    , gtr-prio(2591, 2688)
    , arg-gtr-prio(3551, 0, 2674)
    , gtr-prio(3551, 2674)
    , gtr-prio(3376, 3583)
    , arg-gtr-prio(3376, 0, 3583)
    , gtr-prio(3043, 2732)
    , arg-gtr-prio(3043, 0, 2732)
    , arg-gtr-prio(2575, 0, 3546)
    , gtr-prio(2575, 3546)
    , arg-gtr-prio(3212, 2, 2591)
    , arg-gtr-prio(3578, 0, 2474)
    , gtr-prio(3578, 2474)
    , arg-gtr-prio(3578, 4, 2474)
    , arg-gtr-prio(3583, 0, 2673)
    , gtr-prio(3184, 3546)
    , arg-gtr-prio(2405, 0, 3184)
    , gtr-prio(2405, 3184)
    , gtr-prio(3551, 2732)
    , arg-gtr-prio(3551, 0, 2732)
    , arg-gtr-prio(2384, 2, 2451)
    , gtr-prio(3074, 2591)
    , arg-gtr-prio(3520, 0, 3696)
    , gtr-prio(3520, 3696)
    , arg-gtr-prio(3003, 0, 2673)
    , gtr-prio(3003, 2673)
    , arg-gtr-prio(3003, 4, 2673)
    , gtr-prio(3074, 3505)
    , gtr-prio(2685, 2451)
    , arg-gtr-prio(2685, 2, 2451)
    , gtr-prio(2685, 3505)
    , arg-gtr-prio(3520, 0, 3720)
    , gtr-prio(3520, 3720)
    , arg-gtr-prio(2590, 0, 3631)
    , gtr-prio(2590, 3631)
    , gtr-prio(2674, 3720)
    , arg-gtr-prio(2569, 0, 3233)
    , gtr-prio(2569, 3233)
    , arg-gtr-prio(2569, 2, 3233)
    , arg-gtr-prio(3003, 0, 2590)
    , gtr-prio(3003, 2590)
    , arg-gtr-prio(3003, 4, 2590)
    , arg-gtr-prio(2732, 0, 2451)
    , gtr-prio(2732, 2451)
    , arg-gtr-prio(2732, 4, 2451)
    , gtr-prio(2674, 3546)
    , arg-gtr-prio(3159, 0, 3631)
    , gtr-prio(3159, 3631)
    , arg-gtr-prio(2732, 0, 3638)
    , gtr-prio(2732, 3638)
    , gtr-prio(2591, 2405)
    , arg-gtr-prio(2591, 2, 2405)
    , gtr-prio(3043, 3578)
    , arg-gtr-prio(3043, 0, 3578)
    , gtr-prio(3043, 2569)
    , arg-gtr-prio(3043, 0, 2569)
    , arg-gtr-prio(3583, 0, 2688)
    , gtr-prio(3583, 2688)
    , arg-gtr-prio(3233, 0, 2473)
    , gtr-prio(3233, 2473)
    , arg-gtr-prio(3233, 4, 2473)
    , arg-gtr-prio(3427, 0, 3345)
    , gtr-prio(3427, 3345)
    , arg-gtr-prio(2559, 0, 3159)
    , arg-gtr-prio(2474, 0, 3631)
    , gtr-prio(2474, 3631)
    , gtr-prio(3068, 3345)
    , arg-gtr-prio(2384, 2, 3578)
    , arg-gtr-prio(2946, 0, 2509)
    , gtr-prio(2946, 2509)
    , arg-gtr-prio(2946, 4, 2509)
    , arg-gtr-prio(2384, 2, 3042)
    , arg-gtr-prio(3233, 0, 3696)
    , gtr-prio(3233, 3696)
    , arg-gtr-prio(3159, 0, 3159)
    , arg-gtr-prio(3159, 4, 3159)
    , gtr-prio(3184, 3696)
    , gtr-prio(3042, 3427)
    , arg-gtr-prio(3042, 2, 3427)
    , arg-gtr-prio(2590, 0, 2474)
    , gtr-prio(2590, 2474)
    , arg-gtr-prio(2590, 12, 2474)
    , arg-gtr-prio(3212, 2, 2685)
    , arg-gtr-prio(3043, 0, 3042)
    , gtr-prio(3043, 3042)
    , arg-gtr-prio(2559, 0, 3233)
    , arg-gtr-prio(3142, 0, 3201)
    , gtr-prio(3142, 3201)
    , arg-gtr-prio(3212, 2, 3427)
    , gtr-prio(2591, 3427)
    , arg-gtr-prio(2591, 2, 3427)
    , arg-gtr-prio(2749, 4, 2401)
    , arg-gtr-prio(2946, 0, 2688)
    , gtr-prio(2946, 2688)
    , gtr-prio(3074, 3159)
    , arg-gtr-prio(3074, 2, 3159)
    , gtr-prio(3520, 2401)
    , arg-gtr-prio(3520, 4, 2401)
    , arg-gtr-prio(3550, 0, 3638)
    , gtr-prio(3550, 3638)
    , gtr-prio(3376, 3520)
    , arg-gtr-prio(3376, 0, 3520)
    , gtr-prio(2685, 2509)
    , arg-gtr-prio(2685, 2, 2509)
    , arg-gtr-prio(2569, 0, 3159)
    , gtr-prio(2569, 3159)
    , arg-gtr-prio(2569, 2, 3159)
    , gtr-prio(3551, 2590)
    , arg-gtr-prio(3551, 0, 2590)
    , arg-gtr-prio(2946, 0, 3505)
    , gtr-prio(2946, 3505)
    , gtr-prio(3505, 3720)
    , arg-gtr-prio(2575, 0, 3345)
    , gtr-prio(2575, 3345)
    , gtr-prio(2685, 3696)
    , arg-gtr-prio(2509, 0, 2673)
    , gtr-prio(2509, 2673)
    , arg-gtr-prio(2509, 4, 2673)
    , gtr-prio(3042, 3546)
    , arg-gtr-prio(2473, 0, 3505)
    , gtr-prio(2473, 3505)
    , gtr-prio(3505, 3546)
    , arg-gtr-prio(2946, 0, 2474)
    , gtr-prio(2946, 2474)
    , arg-gtr-prio(2946, 4, 2474)
    , gtr-prio(2591, 2401)
    , arg-gtr-prio(2591, 2, 2401)
    , gtr-prio(3484, 2440)
    , arg-gtr-prio(3484, 6, 2440)
    , gtr-prio(2685, 3520)
    , arg-gtr-prio(2685, 2, 3520)
    , arg-gtr-prio(2559, 0, 3003)
    , gtr-prio(3074, 3427)
    , arg-gtr-prio(3074, 2, 3427)
    , arg-gtr-prio(2569, 0, 2946)
    , gtr-prio(2569, 2946)
    , arg-gtr-prio(2569, 2, 2946)
    , gtr-prio(2509, 2401)
    , arg-gtr-prio(2509, 4, 2401)
    , arg-gtr-prio(3212, 2, 3159)
    , gtr-prio(3074, 2685)
    , gtr-prio(2591, 2451)
    , arg-gtr-prio(2591, 2, 2451)
    , arg-gtr-prio(2451, 0, 2673)
    , gtr-prio(2451, 2673)
    , arg-gtr-prio(2451, 4, 2673)
    , arg-gtr-prio(3578, 0, 2473)
    , gtr-prio(3578, 2473)
    , arg-gtr-prio(3578, 4, 2473)
    , arg-gtr-prio(2732, 0, 3520)
    , gtr-prio(2732, 3520)
    , arg-gtr-prio(2732, 4, 3520)
    , arg-gtr-prio(2405, 0, 3546)
    , gtr-prio(2405, 3546)
    , gtr-prio(2674, 3638)
    , arg-gtr-prio(3624, 4, 3282)
    , arg-gtr-prio(2405, 0, 3159)
    , gtr-prio(2405, 3159)
    , arg-gtr-prio(2405, 4, 3159)
    , arg-gtr-prio(3578, 0, 2509)
    , gtr-prio(3578, 2509)
    , arg-gtr-prio(3578, 4, 2509)
    , arg-gtr-prio(2384, 2, 2401)
    , gtr-prio(2685, 2401)
    , arg-gtr-prio(2685, 2, 2401)
    , gtr-prio(3376, 3427)
    , arg-gtr-prio(3376, 0, 3427)
    , arg-gtr-prio(2509, 0, 2474)
    , gtr-prio(2509, 2474)
    , arg-gtr-prio(2509, 4, 2474)
    , arg-gtr-prio(2673, 0, 3068)
    , arg-gtr-prio(3578, 0, 2451)
    , gtr-prio(3578, 2451)
    , arg-gtr-prio(3578, 4, 2451)
    , arg-gtr-prio(2946, 0, 3696)
    , gtr-prio(2946, 3696)
    , arg-gtr-prio(2384, 2, 2474)
    , gtr-prio(3550, 2473)
    , arg-gtr-prio(3550, 0, 2473)
    , arg-gtr-prio(2732, 0, 3546)
    , gtr-prio(2732, 3546)
    , arg-gtr-prio(2946, 0, 2405)
    , gtr-prio(2946, 2405)
    , arg-gtr-prio(2946, 4, 2405)
    , gtr-prio(3551, 2401)
    , gtr-prio(2721, 3606)
    , arg-gtr-prio(2721, 4, 3606)
    , arg-gtr-prio(2451, 0, 3696)
    , gtr-prio(2451, 3696)
    , gtr-prio(2591, 3505)
    , gtr-prio(2473, 2401)
    , arg-gtr-prio(2473, 8, 2401)
    , arg-gtr-prio(2968, 1, 2968)
    , arg-gtr-prio(3578, 0, 3638)
    , gtr-prio(3578, 3638)
    , arg-gtr-prio(3376, 0, 3720)
    , gtr-prio(3376, 3720)
    , arg-gtr-prio(3159, 0, 3345)
    , gtr-prio(3159, 3345)
    , arg-gtr-prio(2569, 0, 3068)
    , gtr-prio(2569, 3068)
    , gtr-prio(2591, 3638)
    , gtr-prio(3003, 2401)
    , arg-gtr-prio(3003, 4, 2401)
    , gtr-prio(2575, 3583)
    , arg-gtr-prio(2575, 0, 3583)
    , arg-gtr-prio(2509, 0, 2590)
    , gtr-prio(2509, 2590)
    , arg-gtr-prio(2509, 4, 2590)
    , gtr-prio(2674, 3427)
    , arg-gtr-prio(2674, 2, 3427)
    , gtr-prio(3043, 2451)
    , arg-gtr-prio(3043, 0, 2451)
    , arg-gtr-prio(2451, 0, 2688)
    , gtr-prio(2451, 2688)
    , arg-gtr-prio(2451, 0, 2590)
    , gtr-prio(2451, 2590)
    , arg-gtr-prio(2451, 4, 2590)
    , gtr-prio(3550, 2451)
    , arg-gtr-prio(3550, 0, 2451)
    , gtr-prio(3074, 3720)
    , arg-gtr-prio(3212, 2, 3184)
    , arg-gtr-prio(2946, 0, 3578)
    , gtr-prio(2946, 3578)
    , arg-gtr-prio(2946, 4, 3578)
    , arg-gtr-prio(2946, 0, 2451)
    , gtr-prio(2946, 2451)
    , arg-gtr-prio(2946, 4, 2451)
    , arg-gtr-prio(3551, 0, 3696)
    , gtr-prio(3551, 3696)
    , arg-gtr-prio(2509, 4, 2509)
    , gtr-prio(3043, 2509)
    , arg-gtr-prio(3043, 0, 2509)
    , gtr-prio(3550, 2474)
    , arg-gtr-prio(3550, 0, 2474)
    , arg-gtr-prio(2575, 0, 3068)
    , gtr-prio(2575, 3068)
    , arg-gtr-prio(2451, 0, 2474)
    , gtr-prio(2451, 2474)
    , arg-gtr-prio(2451, 4, 2474)
    , gtr-prio(2674, 3520)
    , arg-gtr-prio(2674, 2, 3520)
    , gtr-prio(3550, 2401)
    , gtr-prio(2674, 2685)
    , arg-gtr-prio(3003, 0, 2509)
    , gtr-prio(3003, 2509)
    , arg-gtr-prio(3003, 4, 2509)
    , arg-gtr-prio(2509, 0, 2688)
    , gtr-prio(2509, 2688)
    , arg-gtr-prio(2590, 0, 2590)
    , arg-gtr-prio(2509, 0, 2473)
    , gtr-prio(2509, 2473)
    , arg-gtr-prio(2509, 4, 2473)
    , gtr-prio(3043, 2405)
    , arg-gtr-prio(3043, 0, 2405)
    , arg-gtr-prio(3003, 0, 2473)
    , gtr-prio(3003, 2473)
    , arg-gtr-prio(3003, 4, 2473)
    , arg-gtr-prio(3578, 0, 3696)
    , gtr-prio(3578, 3696)
    , gtr-prio(3505, 3184)
    , arg-gtr-prio(3505, 6, 3184)
    , arg-gtr-prio(3235, 4, 3235)
    , gtr-prio(3551, 2405)
    , arg-gtr-prio(3551, 0, 2405)
    , gtr-prio(3043, 2473)
    , arg-gtr-prio(3043, 0, 2473)
    , arg-gtr-prio(2575, 0, 3184)
    , gtr-prio(2575, 3184)
    , arg-gtr-prio(2673, 0, 3631)
    , gtr-prio(2673, 3631)
    , arg-gtr-prio(2473, 0, 3638)
    , gtr-prio(2473, 3638)
    , gtr-prio(2685, 3578)
    , arg-gtr-prio(2685, 2, 3578)
    , arg-gtr-prio(3282, 0, 2440)
    , gtr-prio(3282, 2440)
    , arg-gtr-prio(3282, 4, 2440)
    , arg-gtr-prio(2569, 0, 3345)
    , gtr-prio(2569, 3345)
    , arg-gtr-prio(3550, 0, 3696)
    , gtr-prio(3550, 3696)
    , gtr-prio(3068, 3184)
    , arg-gtr-prio(3043, 0, 2688)
    , gtr-prio(3043, 2688)
    , arg-gtr-prio(3520, 0, 3578)
    , gtr-prio(3520, 3578)
    , arg-gtr-prio(3520, 4, 3578)
    , arg-gtr-prio(2946, 0, 3638)
    , gtr-prio(2946, 3638)
    , gtr-prio(3551, 2509)
    , arg-gtr-prio(3551, 0, 2509)
    , arg-gtr-prio(2569, 0, 3003)
    , gtr-prio(2569, 3003)
    , arg-gtr-prio(2569, 2, 3003)
    , arg-gtr-prio(2673, 0, 3345)
    , gtr-prio(2673, 3345)
    , arg-gtr-prio(2401, 0, 3345)
    , gtr-prio(2401, 3345)
    , gtr-prio(2685, 3638)
    , arg-gtr-prio(3003, 0, 3696)
    , gtr-prio(3003, 3696)
    , gtr-prio(3042, 3184)
    , gtr-prio(3551, 2474)
    , arg-gtr-prio(3551, 0, 2474)
    , arg-gtr-prio(2384, 2, 2405)
    , gtr-prio(2575, 3159)
    , arg-gtr-prio(2575, 0, 3159)
    , arg-gtr-prio(3583, 0, 2590)
    , arg-gtr-prio(3043, 0, 3696)
    , gtr-prio(3043, 3696)
    , arg-gtr-prio(3003, 0, 2474)
    , gtr-prio(3003, 2474)
    , arg-gtr-prio(3003, 4, 2474)
    , arg-gtr-prio(3551, 0, 2688)
    , gtr-prio(3551, 2688)
    , gtr-prio(2591, 3578)
    , arg-gtr-prio(2591, 2, 3578)
    , gtr-prio(3184, 3638)
    , arg-gtr-prio(3550, 0, 2688)
    , gtr-prio(3550, 2688)
    , gtr-prio(3042, 3583)
    , arg-gtr-prio(3042, 2, 3583)
    , arg-gtr-prio(2732, 0, 3505)
    , gtr-prio(2732, 3505)
    , arg-gtr-prio(2384, 2, 2509)
    , gtr-prio(3550, 2509)
    , arg-gtr-prio(3550, 0, 2509)
    , arg-gtr-prio(2684, 0, 3282)
    , gtr-prio(2674, 3505)
    , gtr-prio(3578, 2401)
    , arg-gtr-prio(3578, 4, 2401)
    , arg-gtr-prio(3233, 0, 2590)
    , gtr-prio(3233, 2590)
    , arg-gtr-prio(3233, 4, 2590)
    , arg-gtr-prio(3003, 0, 2688)
    , gtr-prio(3003, 2688)
    , arg-gtr-prio(2384, 2, 3427)
    , arg-gtr-prio(2575, 0, 3505)
    , gtr-prio(2575, 3505)
    , gtr-prio(3042, 3233)
    , arg-gtr-prio(3042, 2, 3233)
    , gtr-prio(3233, 2401)
    , arg-gtr-prio(3233, 4, 2401)
    , arg-gtr-prio(2474, 0, 2688)
    , gtr-prio(2474, 2688)
    , gtr-prio(2591, 2946)
    , arg-gtr-prio(2591, 2, 2946)
    , arg-gtr-prio(2405, 0, 3345)
    , gtr-prio(2405, 3345)
    , arg-gtr-prio(3551, 0, 3631)
    , gtr-prio(3551, 3631)
    , arg-gtr-prio(3665, 4, 3235)
    , arg-gtr-prio(3550, 0, 3345)
    , gtr-prio(3550, 3345)
    , gtr-prio(2846, 2628)
    , arg-gtr-prio(2846, 2, 2628)
    , gtr-prio(3551, 2451)
    , arg-gtr-prio(3551, 0, 2451)
    , arg-gtr-prio(2474, 0, 3345)
    , gtr-prio(2474, 3345)
    , gtr-prio(3550, 2673)
    , arg-gtr-prio(3550, 0, 2673)
    , gtr-prio(3074, 3520)
    , arg-gtr-prio(3074, 2, 3520)
    , gtr-prio(3376, 2474)
    , arg-gtr-prio(3376, 0, 2474)
    , arg-gtr-prio(3212, 2, 3042)
    , arg-gtr-prio(2405, 0, 2688)
    , gtr-prio(2405, 2688)
    , gtr-prio(3074, 3550)
    , arg-gtr-prio(3074, 2, 3550)
    , arg-gtr-prio(2673, 0, 2688)
    , gtr-prio(2673, 2688)
    , arg-gtr-prio(3376, 0, 3068)
    , gtr-prio(3376, 3068)
    , gtr-prio(2575, 2451)
    , arg-gtr-prio(2575, 0, 2451)
    , arg-gtr-prio(2946, 0, 3184)
    , gtr-prio(2946, 3184)
    , arg-gtr-prio(2590, 0, 3546)
    , gtr-prio(2590, 3546)
    , arg-gtr-prio(3551, 0, 3505)
    , gtr-prio(3551, 3505)
    , arg-gtr-prio(2624, 0, 2846)
    , arg-gtr-prio(2673, 0, 2673)
    , arg-gtr-prio(2451, 0, 3233)
    , gtr-prio(2451, 3233)
    , arg-gtr-prio(2451, 4, 3233)
    , gtr-prio(3074, 3546)
    , gtr-prio(3042, 2509)
    , arg-gtr-prio(3042, 2, 2509)
    , gtr-prio(3074, 3551)
    , arg-gtr-prio(3074, 2, 3551)
    , gtr-prio(2674, 2401)
    , arg-gtr-prio(2674, 2, 2401)
    , arg-gtr-prio(2569, 0, 3427)
    , gtr-prio(2569, 3427)
    , arg-gtr-prio(2569, 2, 3427)
    , gtr-prio(2674, 2590)
    , arg-gtr-prio(2674, 2, 2590)
    , arg-gtr-prio(2474, 0, 3427)
    , gtr-prio(2474, 3427)
    , arg-gtr-prio(2474, 4, 3427)
    , gtr-prio(3484, 2739)
    , arg-gtr-prio(3484, 6, 2739)
    , arg-gtr-prio(3212, 2, 2946)
    , gtr-prio(3043, 2401)
    , arg-gtr-prio(2569, 0, 3546)
    , gtr-prio(2569, 3546)
    , arg-gtr-prio(3376, 0, 2591)
    , gtr-prio(3376, 2591)
    , gtr-prio(3074, 3583)
    , arg-gtr-prio(3074, 2, 3583)
    , arg-gtr-prio(3606, 0, 3606)
    , arg-gtr-prio(3606, 4, 3606)
    , arg-gtr-prio(3233, 0, 2673)
    , gtr-prio(3233, 2673)
    , arg-gtr-prio(3233, 4, 2673)
    , arg-gtr-prio(2405, 0, 2673)
    , gtr-prio(2405, 2673)
    , arg-gtr-prio(2405, 4, 2673)
    , arg-gtr-prio(2732, 0, 2405)
    , gtr-prio(2732, 2405)
    , arg-gtr-prio(2732, 4, 2405)
    , arg-gtr-prio(3583, 0, 3184)
    , gtr-prio(3583, 3184)
    , arg-gtr-prio(2575, 0, 3631)
    , gtr-prio(2575, 3631)
    , gtr-prio(2510, 2401)
    , arg-gtr-prio(2510, 4, 2401)
    , gtr-prio(3043, 2590)
    , arg-gtr-prio(3043, 0, 2590)
    , gtr-prio(2451, 2401)
    , arg-gtr-prio(2451, 4, 2401)
    , arg-gtr-prio(2405, 0, 3427)
    , gtr-prio(2405, 3427)
    , arg-gtr-prio(2405, 4, 3427)
    , gtr-prio(3074, 2473)
    , arg-gtr-prio(3074, 2, 2473)
    , gtr-prio(3043, 2673)
    , arg-gtr-prio(3043, 0, 2673)
    , arg-gtr-prio(2946, 4, 2946)
    , arg-gtr-prio(3233, 0, 2688)
    , gtr-prio(3233, 2688)
    , gtr-prio(2685, 2732)
    , arg-gtr-prio(2685, 2, 2732)
    , gtr-prio(3376, 2405)
    , arg-gtr-prio(3376, 0, 2405)
    , arg-gtr-prio(2569, 0, 3520)
    , gtr-prio(2569, 3520)
    , arg-gtr-prio(2569, 2, 3520)
    , gtr-prio(3376, 3159)
    , arg-gtr-prio(3376, 0, 3159)
    , gtr-prio(2673, 2401)
    , arg-gtr-prio(2673, 12, 2401)
    , arg-gtr-prio(3427, 0, 3720)
    , gtr-prio(3427, 3720)
    , arg-gtr-prio(3376, 0, 3505)
    , gtr-prio(3376, 3505)
    , arg-gtr-prio(2569, 0, 2685)
    , gtr-prio(2569, 2685)
    , gtr-prio(2405, 2401)
    , arg-gtr-prio(2405, 4, 2401)
    , arg-gtr-prio(3427, 0, 3546)
    , gtr-prio(3427, 3546)
    , gtr-prio(2674, 3345)
    , arg-gtr-prio(3578, 0, 3184)
    , gtr-prio(3578, 3184)
    , arg-gtr-prio(2473, 0, 2474)
    , gtr-prio(2473, 2474)
    , arg-gtr-prio(2473, 8, 2474)
    , gtr-prio(2591, 2732)
    , arg-gtr-prio(2591, 2, 2732)
    , gtr-prio(3042, 2673)
    , arg-gtr-prio(3042, 2, 2673)
    , gtr-prio(2685, 2405)
    , arg-gtr-prio(2685, 2, 2405)
    , arg-gtr-prio(3520, 0, 2405)
    , gtr-prio(3520, 2405)
    , arg-gtr-prio(3520, 4, 2405)
    , gtr-prio(2674, 2673)
    , arg-gtr-prio(2674, 2, 2673)
    , arg-gtr-prio(2575, 0, 3638)
    , gtr-prio(2575, 3638)
    , arg-gtr-prio(2405, 0, 3233)
    , gtr-prio(2405, 3233)
    , arg-gtr-prio(2405, 4, 3233)
    , arg-gtr-prio(3233, 0, 3233)
    , arg-gtr-prio(2673, 0, 3427)
    , gtr-prio(2673, 3427)
    , arg-gtr-prio(2673, 12, 3427)
    , gtr-prio(2846, 3235)
    , arg-gtr-prio(2846, 2, 3235)
    , arg-gtr-prio(3159, 0, 3184)
    , gtr-prio(3159, 3184)
    , arg-gtr-prio(3551, 0, 3638)
    , gtr-prio(3551, 3638)
    , arg-gtr-prio(3212, 2, 2509)
    , arg-gtr-prio(2569, 0, 2688)
    , gtr-prio(2569, 2688)
    , arg-gtr-prio(2684, 0, 2440)
    , gtr-prio(3042, 2401)
    , arg-gtr-prio(3042, 2, 2401)
    , gtr-prio(3550, 2590)
    , arg-gtr-prio(3550, 0, 2590)
    , arg-gtr-prio(2569, 0, 2473)
    , gtr-prio(2569, 2473)
    , arg-gtr-prio(2569, 2, 2473)
    , arg-gtr-prio(3043, 0, 3345)
    , gtr-prio(3043, 3345)
    , arg-gtr-prio(3665, 4, 2533)
    , arg-gtr-prio(2559, 0, 3520)
    , arg-gtr-prio(3003, 4, 3003)
    , arg-gtr-prio(2590, 0, 3696)
    , gtr-prio(2590, 3696)
    , arg-gtr-prio(2451, 0, 3345)
    , gtr-prio(2451, 3345)
    , arg-gtr-prio(2559, 0, 3427)
    , arg-gtr-prio(3427, 0, 3638)
    , gtr-prio(3427, 3638)
    , arg-gtr-prio(2575, 0, 2591)
    , gtr-prio(2575, 2591)
    , arg-gtr-prio(2673, 0, 3546)
    , gtr-prio(2673, 3546)
    , arg-gtr-prio(3212, 2, 3233)
    , gtr-prio(2846, 3606)
    , arg-gtr-prio(2846, 2, 3606)
    , gtr-prio(3074, 3696)
    , arg-gtr-prio(2447, 0, 3646)
    , arg-gtr-prio(2569, 0, 2590)
    , gtr-prio(2569, 2590)
    , arg-gtr-prio(2569, 2, 2590)
    , arg-gtr-prio(2569, 0, 2673)
    , gtr-prio(2569, 2673)
    , arg-gtr-prio(2569, 2, 2673)
    , arg-gtr-prio(2590, 0, 2688)
    , gtr-prio(2590, 2688)
    , arg-gtr-prio(3427, 0, 3631)
    , gtr-prio(3427, 3631)
    , gtr-prio(2685, 2474)
    , arg-gtr-prio(2685, 2, 2474)
    , gtr-prio(3043, 3427)
    , arg-gtr-prio(3043, 0, 3427)
    , arg-gtr-prio(2575, 0, 3720)
    , gtr-prio(2575, 3720)
    , arg-gtr-prio(3376, 0, 3631)
    , gtr-prio(3376, 3631)
    , gtr-prio(3042, 3003)
    , arg-gtr-prio(3042, 2, 3003)
    , gtr-prio(2685, 3159)
    , arg-gtr-prio(2685, 2, 3159)
    , arg-gtr-prio(3520, 0, 2474)
    , gtr-prio(3520, 2474)
    , arg-gtr-prio(3520, 4, 2474)
    , gtr-prio(3074, 3376)
    , arg-gtr-prio(3074, 2, 3376)
    , gtr-prio(3074, 3578)
    , arg-gtr-prio(3074, 2, 3578)
    , gtr-prio(3551, 3578)
    , arg-gtr-prio(3551, 0, 3578)
    , arg-gtr-prio(2628, 0, 2628)
    , arg-gtr-prio(2732, 0, 3068)
    , gtr-prio(2732, 3068)
    , gtr-prio(2674, 2509)
    , arg-gtr-prio(2674, 2, 2509)
    , gtr-prio(2591, 2509)
    , arg-gtr-prio(2591, 2, 2509)
    , arg-gtr-prio(3520, 0, 3184)
    , gtr-prio(3520, 3184)
    , arg-gtr-prio(3376, 0, 2674)
    , gtr-prio(3376, 2674)
    , arg-gtr-prio(3551, 0, 2591)
    , gtr-prio(3551, 2591)
    , gtr-prio(3376, 2451)
    , arg-gtr-prio(3376, 0, 2451)
    , gtr-prio(3042, 3345)
    , arg-gtr-prio(2569, 0, 3583)
    , gtr-prio(2569, 3583)
    , arg-gtr-prio(2569, 2, 3583)
    , gtr-prio(3042, 2685)
    , gtr-prio(3184, 3720)
    , arg-gtr-prio(3427, 0, 3427)
    , gtr-prio(2575, 3578)
    , arg-gtr-prio(2575, 0, 3578)
    , arg-gtr-prio(3550, 0, 3546)
    , gtr-prio(3550, 3546)
    , arg-gtr-prio(3070, 0, 3159)
    , gtr-prio(3070, 3159)
    , arg-gtr-prio(3665, 4, 3606)
    , gtr-prio(2685, 3184)
    , arg-gtr-prio(2569, 0, 3720)
    , gtr-prio(2569, 3720)
    , gtr-prio(3074, 3631)
    , gtr-prio(2674, 3233)
    , arg-gtr-prio(2674, 2, 3233)
    , arg-gtr-prio(3233, 0, 3345)
    , gtr-prio(3233, 3345)
    , arg-gtr-prio(2405, 0, 3003)
    , gtr-prio(2405, 3003)
    , arg-gtr-prio(2405, 4, 3003)
    , gtr-prio(3042, 2946)
    , arg-gtr-prio(3042, 2, 2946)
    , gtr-prio(3505, 3638)
    , gtr-prio(2721, 3235)
    , arg-gtr-prio(2721, 4, 3235)
    , gtr-prio(3074, 2451)
    , arg-gtr-prio(3074, 2, 2451)
    , arg-gtr-prio(3551, 0, 3720)
    , gtr-prio(3551, 3720)
    , arg-gtr-prio(2575, 0, 2674)
    , gtr-prio(2575, 2674)
    , gtr-prio(3551, 3520)
    , arg-gtr-prio(3551, 0, 3520)
    , arg-gtr-prio(3212, 2, 3003)
    , gtr-prio(2674, 2688)
    , gtr-prio(3376, 3578)
    , arg-gtr-prio(3376, 0, 3578)
    , gtr-prio(2575, 3520)
    , arg-gtr-prio(2575, 0, 3520)
    , gtr-prio(3376, 2569)
    , arg-gtr-prio(3376, 0, 2569)
    , gtr-prio(3043, 2946)
    , arg-gtr-prio(3043, 0, 2946)
    , arg-gtr-prio(2590, 0, 3638)
    , gtr-prio(2590, 3638)
    , arg-gtr-prio(2590, 0, 3345)
    , gtr-prio(2590, 3345)
    , gtr-prio(2474, 2401)
    , arg-gtr-prio(2474, 4, 2401)
    , gtr-prio(3550, 3427)
    , arg-gtr-prio(3550, 0, 3427)
    , arg-gtr-prio(3212, 2, 2569)
    , gtr-prio(2591, 3184)
    , gtr-prio(3074, 3638)
    , arg-gtr-prio(2732, 0, 3184)
    , gtr-prio(2732, 3184)
    , gtr-prio(3606, 2533)
    , arg-gtr-prio(3606, 4, 2533)
    , arg-gtr-prio(2673, 0, 2590)
    , arg-gtr-prio(2732, 0, 2474)
    , gtr-prio(2732, 2474)
    , arg-gtr-prio(2732, 4, 2474)
    , gtr-prio(3074, 3345)
    , gtr-prio(2674, 2473)
    , arg-gtr-prio(2674, 2, 2473)
    , arg-gtr-prio(2732, 0, 3159)
    , gtr-prio(2732, 3159)
    , arg-gtr-prio(2732, 4, 3159)
    , gtr-prio(3505, 3631)
    , arg-gtr-prio(3043, 0, 2685)
    , gtr-prio(3043, 2685)
    , gtr-prio(3550, 3520)
    , arg-gtr-prio(3550, 0, 3520)
    , arg-gtr-prio(3550, 0, 2685)
    , gtr-prio(3550, 2685)
    , gtr-prio(2876, 3201)
    , arg-gtr-prio(2384, 2, 2685)
    , gtr-prio(2876, 3282)
    , arg-gtr-prio(2876, 4, 3282)
    , arg-gtr-prio(3376, 0, 3638)
    , gtr-prio(3376, 3638)
    , arg-gtr-prio(2384, 2, 3520)
    , arg-gtr-prio(2673, 0, 3720)
    , gtr-prio(2673, 3720)
    , arg-gtr-prio(3212, 2, 2405)
    , gtr-prio(2575, 2732)
    , arg-gtr-prio(2575, 0, 2732)
    , arg-gtr-prio(3233, 0, 3184)
    , gtr-prio(3233, 3184)
    , arg-gtr-prio(3003, 0, 3427)
    , gtr-prio(3003, 3427)
    , arg-gtr-prio(3003, 4, 3427)
    , arg-gtr-prio(2590, 0, 3068)
    , gtr-prio(3043, 3520)
    , arg-gtr-prio(3043, 0, 3520)
    , arg-gtr-prio(2384, 2, 3003)
    , arg-gtr-prio(3520, 0, 3631)
    , gtr-prio(3520, 3631)
    , gtr-prio(2575, 2473)
    , arg-gtr-prio(2575, 0, 2473)
    , arg-gtr-prio(2509, 0, 3427)
    , gtr-prio(2509, 3427)
    , arg-gtr-prio(2509, 4, 3427)
    , arg-gtr-prio(2401, 0, 3638)
    , gtr-prio(2401, 3638)
    , arg-gtr-prio(2569, 0, 3638)
    , gtr-prio(2569, 3638)
    , arg-gtr-prio(3043, 0, 3184)
    , gtr-prio(3043, 3184)
    , arg-gtr-prio(2474, 0, 3720)
    , gtr-prio(2474, 3720)
    , arg-gtr-prio(2559, 0, 2474)
    , gtr-prio(2575, 2569)
    , arg-gtr-prio(2575, 0, 2569)
    , arg-gtr-prio(2559, 0, 2401)
    , gtr-prio(2685, 3003)
    , arg-gtr-prio(2685, 2, 3003)
    , arg-gtr-prio(3583, 0, 3068)
    , gtr-prio(3282, 3142)
    , arg-gtr-prio(3282, 4, 3142)
    , gtr-prio(3068, 2401)
    , arg-gtr-prio(3068, 4, 2401)
    , arg-gtr-prio(3159, 0, 2474)
    , gtr-prio(3159, 2474)
    , arg-gtr-prio(3159, 4, 2474)
    , arg-gtr-prio(2569, 0, 2451)
    , gtr-prio(2569, 2451)
    , arg-gtr-prio(2569, 2, 2451)
    , gtr-prio(2721, 2628)
    , arg-gtr-prio(2721, 4, 2628)
    , arg-gtr-prio(2732, 0, 3003)
    , gtr-prio(2732, 3003)
    , arg-gtr-prio(2732, 4, 3003)
    , gtr-prio(3376, 2946)
    , arg-gtr-prio(3376, 0, 2946)
    , arg-gtr-prio(3043, 0, 3546)
    , gtr-prio(3043, 3546)
    , gtr-prio(2591, 3345)
    , gtr-prio(2739, 3282)
    , arg-gtr-prio(2739, 0, 3282)
    , gtr-prio(3550, 2946)
    , arg-gtr-prio(3550, 0, 2946)
    , gtr-prio(3505, 3696)
    , gtr-prio(3550, 3583)
    , arg-gtr-prio(3550, 0, 3583)
    , arg-gtr-prio(3550, 0, 3720)
    , gtr-prio(3550, 3720)
    , gtr-prio(2591, 2590)
    , arg-gtr-prio(2591, 2, 2590)
    , arg-gtr-prio(3233, 0, 3583)
    , gtr-prio(3233, 3583)
    , arg-gtr-prio(3233, 4, 3583)
    , arg-gtr-prio(2946, 0, 3233)
    , gtr-prio(2946, 3233)
    , arg-gtr-prio(2946, 4, 3233)
    , arg-gtr-prio(3551, 0, 3546)
    , gtr-prio(3551, 3546)
    , arg-gtr-prio(3578, 0, 3345)
    , gtr-prio(3578, 3345)
    , gtr-prio(3043, 3583)
    , arg-gtr-prio(3043, 0, 3583)
    , arg-gtr-prio(3520, 0, 3159)
    , gtr-prio(3520, 3159)
    , arg-gtr-prio(3520, 4, 3159)
    , gtr-prio(3074, 2401)
    , arg-gtr-prio(3074, 2, 2401)
    , arg-gtr-prio(2559, 0, 2591)
    , arg-gtr-prio(2946, 0, 3068)
    , gtr-prio(2946, 3068)
    , gtr-prio(3376, 2732)
    , arg-gtr-prio(3376, 0, 2732)
    , arg-gtr-prio(2509, 0, 3345)
    , gtr-prio(2509, 3345)
    , arg-gtr-prio(2569, 0, 3696)
    , gtr-prio(2569, 3696)
    , arg-gtr-prio(3159, 0, 3505)
    , gtr-prio(3159, 3505)
    , arg-gtr-prio(3212, 2, 2401)
    , arg-gtr-prio(2473, 0, 3583)
    , arg-gtr-prio(2559, 0, 3505)
    , arg-gtr-prio(2401, 0, 3696)
    , gtr-prio(2401, 3696)
    , gtr-prio(3550, 3003)
    , arg-gtr-prio(3550, 0, 3003)
    , arg-gtr-prio(2473, 0, 3631)
    , gtr-prio(2473, 3631)
    , gtr-prio(3074, 2509)
    , arg-gtr-prio(3074, 2, 2509)
    , arg-gtr-prio(3233, 0, 3546)
    , gtr-prio(3233, 3546)
    , arg-gtr-prio(3583, 0, 3505)
    , gtr-prio(3583, 3505)
    , arg-gtr-prio(2510, 0, 3427)
    , gtr-prio(2510, 3427)
    , arg-gtr-prio(2510, 4, 3427)
    , gtr-prio(3376, 2473)
    , arg-gtr-prio(3376, 0, 2473)
    , arg-gtr-prio(2559, 0, 2405)
    , arg-gtr-prio(2509, 0, 3546)
    , gtr-prio(2509, 3546)
    , arg-gtr-prio(3233, 0, 3720)
    , gtr-prio(3233, 3720)
    , arg-gtr-prio(2451, 0, 3427)
    , gtr-prio(2451, 3427)
    , arg-gtr-prio(2451, 4, 3427)
    , gtr-prio(3074, 2405)
    , arg-gtr-prio(3074, 2, 2405)
    , gtr-prio(2591, 3233)
    , arg-gtr-prio(2591, 2, 3233)
    , gtr-prio(2721, 2533)
    , arg-gtr-prio(2721, 4, 2533)
    , arg-gtr-prio(3606, 0, 3235)
    , gtr-prio(3606, 3235)
    , arg-gtr-prio(3606, 4, 3235)
    , arg-gtr-prio(2401, 0, 3720)
    , gtr-prio(2401, 3720)
    , arg-gtr-prio(3212, 2, 2474)
    , gtr-prio(2674, 3003)
    , arg-gtr-prio(2674, 2, 3003)
    , gtr-prio(3376, 3043)
    , gtr-prio(2440, 3142)
    , arg-gtr-prio(2440, 4, 3142)
    , arg-gtr-prio(3551, 0, 3345)
    , gtr-prio(3551, 3345)
    , arg-gtr-prio(2569, 0, 2509)
    , gtr-prio(2569, 2509)
    , arg-gtr-prio(2569, 2, 2509)
    , gtr-prio(2591, 2673)
    , arg-gtr-prio(2591, 2, 2673)
    , arg-gtr-prio(2405, 0, 3696)
    , gtr-prio(2405, 3696)
    , arg-gtr-prio(3376, 0, 3696)
    , gtr-prio(3376, 3696)
    , gtr-prio(2685, 3233)
    , arg-gtr-prio(2685, 2, 3233)
    , arg-gtr-prio(2569, 0, 3505)
    , gtr-prio(2569, 3505)
    , arg-gtr-prio(2474, 0, 3505)
    , gtr-prio(2474, 3505)
    , arg-gtr-prio(2473, 0, 3184)
    , gtr-prio(2473, 3184)
    , arg-gtr-prio(2559, 0, 2685)
    , gtr-prio(2591, 3068)
    , gtr-prio(3074, 2474)
    , arg-gtr-prio(3074, 2, 2474)
    , arg-gtr-prio(2451, 0, 3546)
    , gtr-prio(2451, 3546)
    , arg-gtr-prio(2673, 0, 3696)
    , gtr-prio(2673, 3696)
    , arg-gtr-prio(3520, 0, 3233)
    , gtr-prio(3520, 3233)
    , arg-gtr-prio(3520, 4, 3233)
    , arg-gtr-prio(3520, 0, 3068)
    , gtr-prio(3520, 3068)
    , gtr-prio(2876, 2440)
    , arg-gtr-prio(2876, 4, 2440)
    , arg-gtr-prio(2569, 0, 2474)
    , gtr-prio(2569, 2474)
    , arg-gtr-prio(2569, 2, 2474)
    , arg-gtr-prio(2946, 0, 3159)
    , gtr-prio(2946, 3159)
    , arg-gtr-prio(2946, 4, 3159)
    , gtr-prio(3042, 2732)
    , arg-gtr-prio(3042, 2, 2732)
    , arg-gtr-prio(2474, 0, 3184)
    , gtr-prio(2474, 3184)
    , gtr-prio(3074, 2688)
    , arg-gtr-prio(2559, 0, 2509)
    , arg-gtr-prio(2590, 0, 3505)
    , gtr-prio(2590, 3505)
    , arg-gtr-prio(3003, 0, 3345)
    , gtr-prio(3003, 3345)
    , gtr-prio(2674, 3631)
    , gtr-prio(2591, 3631)
    , arg-gtr-prio(2628, 0, 3235)
    , gtr-prio(2628, 3235)
    , arg-gtr-prio(2628, 4, 3235)
    , arg-gtr-prio(2509, 0, 3184)
    , gtr-prio(2509, 3184)
    , gtr-prio(2575, 2590)
    , arg-gtr-prio(2575, 0, 2590)
    , arg-gtr-prio(2797, 0, 2450)
    , gtr-prio(2797, 2450)
    , arg-gtr-prio(2474, 0, 3546)
    , gtr-prio(2474, 3546)
    , gtr-prio(3043, 3003)
    , arg-gtr-prio(3043, 0, 3003)
    , gtr-prio(2685, 3068)
    , arg-gtr-prio(2405, 0, 2509)
    , gtr-prio(2405, 2509)
    , arg-gtr-prio(2405, 4, 2509)
    , arg-gtr-prio(3520, 0, 2946)
    , gtr-prio(3520, 2946)
    , arg-gtr-prio(3520, 4, 2946)
    , arg-gtr-prio(2473, 0, 3068)
    , arg-gtr-prio(3583, 0, 3427)
    , gtr-prio(3583, 3427)
    , arg-gtr-prio(3583, 12, 3427)
    , arg-gtr-prio(3003, 0, 3068)
    , gtr-prio(3003, 3068)
    , gtr-prio(3550, 3159)
    , arg-gtr-prio(3550, 0, 3159)
    , arg-gtr-prio(2946, 0, 3003)
    , gtr-prio(2946, 3003)
    , arg-gtr-prio(2946, 4, 3003)
    , arg-gtr-prio(2509, 0, 3068)
    , gtr-prio(2509, 3068)
    , arg-gtr-prio(2590, 0, 3720)
    , gtr-prio(2590, 3720)
    , arg-gtr-prio(3212, 2, 2732)
    , arg-gtr-prio(2405, 0, 2473)
    , gtr-prio(2405, 2473)
    , arg-gtr-prio(2405, 4, 2473)
    , gtr-prio(3042, 2405)
    , arg-gtr-prio(3042, 2, 2405)
    , gtr-prio(3484, 3282)
    , arg-gtr-prio(3484, 6, 3282)
    , gtr-prio(2575, 2405)
    , arg-gtr-prio(2575, 0, 2405)
    , arg-gtr-prio(3233, 0, 3427)
    , gtr-prio(3233, 3427)
    , arg-gtr-prio(3233, 4, 3427)
    , arg-gtr-prio(2569, 0, 2591)
    , gtr-prio(2569, 2591)
    , arg-gtr-prio(3003, 0, 3184)
    , gtr-prio(3003, 3184)
    , gtr-prio(3550, 3233)
    , arg-gtr-prio(3550, 0, 3233)
    , arg-gtr-prio(3624, 4, 2440)
    , gtr-prio(2674, 2732)
    , arg-gtr-prio(2674, 2, 2732)
    , arg-gtr-prio(3159, 0, 3638)
    , gtr-prio(3159, 3638)
    , arg-gtr-prio(2732, 0, 2732)
    , arg-gtr-prio(3551, 0, 3184)
    , gtr-prio(3551, 3184)
    , arg-gtr-prio(3578, 0, 3159)
    , gtr-prio(3578, 3159)
    , arg-gtr-prio(3578, 4, 3159)
    , gtr-prio(3074, 3043)
    , arg-gtr-prio(3074, 2, 3043)
    , arg-gtr-prio(3003, 0, 3233)
    , gtr-prio(3003, 3233)
    , arg-gtr-prio(3003, 4, 3233)
    , gtr-prio(2591, 3003)
    , arg-gtr-prio(2591, 2, 3003)
    , gtr-prio(3042, 2590)
    , arg-gtr-prio(3042, 2, 2590)
    , arg-gtr-prio(2384, 2, 3159)
    , arg-gtr-prio(3520, 0, 3345)
    , gtr-prio(3520, 3345)
    , arg-gtr-prio(2509, 0, 3233)
    , gtr-prio(2509, 3233)
    , arg-gtr-prio(2509, 4, 3233)
    , arg-gtr-prio(2440, 0, 3201)
    , gtr-prio(2440, 3201)
    , arg-gtr-prio(2569, 0, 2405)
    , gtr-prio(2569, 2405)
    , arg-gtr-prio(2569, 2, 2405)
    , arg-gtr-prio(2673, 0, 3505)
    , gtr-prio(2673, 3505)
    , arg-gtr-prio(3159, 0, 2688)
    , gtr-prio(3159, 2688)
    , arg-gtr-prio(3427, 0, 3696)
    , gtr-prio(3427, 3696)
    , gtr-prio(2685, 2946)
    , arg-gtr-prio(2685, 2, 2946)
    , arg-gtr-prio(2559, 0, 2451)
    , arg-gtr-prio(2384, 2, 3184)
    , arg-gtr-prio(3578, 0, 3003)
    , gtr-prio(3578, 3003)
    , arg-gtr-prio(3578, 4, 3003)
    , arg-gtr-prio(2946, 0, 3631)
    , gtr-prio(2946, 3631)
    , gtr-prio(3042, 3696)
    , gtr-prio(3042, 2688)
    , arg-gtr-prio(2569, 0, 2401)
    , gtr-prio(2569, 2401)
    , arg-gtr-prio(2569, 2, 2401)
    , gtr-prio(3551, 3583)
    , arg-gtr-prio(3551, 0, 3583)
    , arg-gtr-prio(2569, 0, 3578)
    , gtr-prio(2569, 3578)
    , arg-gtr-prio(2569, 2, 3578)
    , gtr-prio(3235, 2533)
    , arg-gtr-prio(3235, 4, 2533)
    , arg-gtr-prio(2559, 0, 2674)
    , arg-gtr-prio(2590, 0, 3427)
    , gtr-prio(2590, 3427)
    , arg-gtr-prio(2590, 12, 3427)
    , arg-gtr-prio(3003, 0, 3583)
    , gtr-prio(3003, 3583)
    , arg-gtr-prio(3003, 4, 3583)
    , gtr-prio(3184, 3631)
    , arg-gtr-prio(3159, 0, 3696)
    , gtr-prio(3159, 3696)
    , gtr-prio(2575, 2401)
    , gtr-prio(3484, 3201)
    , arg-gtr-prio(3550, 0, 3184)
    , gtr-prio(3550, 3184)
    , gtr-prio(2846, 2533)
    , arg-gtr-prio(2846, 2, 2533)
    , gtr-prio(3184, 3345)
    , gtr-prio(3074, 2590)
    , arg-gtr-prio(3074, 2, 2590)
    , arg-gtr-prio(2732, 0, 3631)
    , gtr-prio(2732, 3631)
    , gtr-prio(3074, 2673)
    , arg-gtr-prio(3074, 2, 2673)
    , arg-gtr-prio(3578, 0, 3068)
    , gtr-prio(3578, 3068)
    , arg-gtr-prio(2673, 0, 3638)
    , gtr-prio(2673, 3638)
    , arg-gtr-prio(2451, 0, 3184)
    , gtr-prio(2451, 3184)
    , gtr-prio(3376, 2673)
    , arg-gtr-prio(3376, 0, 2673)
    , arg-gtr-prio(2569, 0, 3042)
    , arg-gtr-prio(2569, 2, 3042)
    , arg-gtr-prio(2559, 0, 2569)
    , gtr-prio(3068, 3696)
    , arg-gtr-prio(2509, 0, 3159)
    , gtr-prio(2509, 3159)
    , arg-gtr-prio(2509, 4, 3159)
    , gtr-prio(3551, 3159)
    , arg-gtr-prio(3551, 0, 3159)
    , gtr-prio(3068, 2688)
    , arg-gtr-prio(3550, 0, 3068)
    , gtr-prio(3550, 3068)
    , arg-gtr-prio(2559, 0, 3578)
    , arg-gtr-prio(3551, 0, 3068)
    , gtr-prio(3551, 3068)
    , gtr-prio(2685, 3631)
    , gtr-prio(3042, 2474)
    , arg-gtr-prio(3042, 2, 2474)
    , arg-gtr-prio(2509, 0, 3583)
    , gtr-prio(2509, 3583)
    , arg-gtr-prio(2509, 4, 3583)
    , arg-gtr-prio(3520, 0, 3003)
    , gtr-prio(3520, 3003)
    , arg-gtr-prio(3520, 4, 3003)
    , arg-gtr-prio(3583, 0, 3583)
    , gtr-prio(3551, 3233)
    , arg-gtr-prio(3551, 0, 3233)
    , arg-gtr-prio(2473, 0, 3345)
    , gtr-prio(2473, 3345)
    , gtr-prio(3042, 2473)
    , arg-gtr-prio(3042, 2, 2473)
    , arg-gtr-prio(3427, 0, 2688)
    , gtr-prio(3427, 2688)
    , gtr-prio(3043, 3159)
    , arg-gtr-prio(3043, 0, 3159)
    , gtr-prio(3043, 3233)
    , arg-gtr-prio(3043, 0, 3233)
    , arg-gtr-prio(2559, 0, 3042)
    , arg-gtr-prio(2946, 0, 3345)
    , gtr-prio(2946, 3345)
    , arg-gtr-prio(3578, 0, 3233)
    , gtr-prio(3578, 3233)
    , arg-gtr-prio(3578, 4, 3233)
    , arg-gtr-prio(3003, 0, 3159)
    , gtr-prio(3003, 3159)
    , arg-gtr-prio(3003, 4, 3159)
    , gtr-prio(3068, 2474)
    , arg-gtr-prio(3068, 4, 2474)
    , gtr-prio(2685, 3345)
    , arg-gtr-prio(2575, 0, 3696)
    , gtr-prio(2575, 3696)
    , gtr-prio(3159, 2401)
    , arg-gtr-prio(3159, 4, 2401)
    , arg-gtr-prio(2384, 2, 3233)
    , arg-gtr-prio(3070, 0, 3427)
    , gtr-prio(3070, 3427)
    , arg-gtr-prio(2451, 0, 3583)
    , gtr-prio(2451, 3583)
    , arg-gtr-prio(2451, 4, 3583)
    , gtr-prio(3376, 2590)
    , arg-gtr-prio(3376, 0, 2590)
    , gtr-prio(2575, 2474)
    , arg-gtr-prio(2575, 0, 2474)
    , arg-gtr-prio(2405, 0, 2590)
    , gtr-prio(2405, 2590)
    , arg-gtr-prio(2405, 4, 2590)
    , arg-gtr-prio(2575, 0, 2688)
    , gtr-prio(2575, 2688)
    , gtr-prio(2674, 2946)
    , arg-gtr-prio(2674, 2, 2946)
    , arg-gtr-prio(2732, 0, 2946)
    , gtr-prio(2732, 2946)
    , arg-gtr-prio(2732, 4, 2946)
    ]
  )
)
